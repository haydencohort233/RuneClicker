{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\buildings\\\\buildings.js\",\n  _s = $RefreshSig$();\n// /src/components/buildings/buildings.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Buildings({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [buildings, setBuildings] = useState({});\n  useEffect(() => {\n    // Load existing buildings from gameState if available\n    if (gameState && gameState.buildings) {\n      setBuildings(gameState.buildings);\n    }\n  }, [gameState]);\n\n  // Add a new building or increase count if it exists\n  const addBuilding = buildingName => {\n    const newBuildings = {\n      ...buildings,\n      [buildingName]: (buildings[buildingName] || 0) + 1\n    };\n    setBuildings(newBuildings);\n\n    // Update gameState with new buildings object\n    setGameState(prevState => ({\n      ...prevState,\n      buildings: newBuildings\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buildings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buildings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(buildings).map(([building, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [building, \": \", count]\n      }, building, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addBuilding('Cow Pen'),\n      children: \"Add Cow Pen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addBuilding('Wheat Field'),\n      children: \"Add Wheat Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addBuilding('Varrock'),\n      children: \"Add Varrock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Buildings, \"hxXe4UxYhZbswyzeHbuNdhtyPGA=\");\n_c = Buildings;\nexport default Buildings;\nvar _c;\n$RefreshReg$(_c, \"Buildings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Buildings","gameState","setGameState","_s","buildings","setBuildings","addBuilding","buildingName","newBuildings","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","building","count","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/buildings/buildings.js"],"sourcesContent":["// /src/components/buildings/buildings.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Buildings({ gameState, setGameState }) {\r\n  const [buildings, setBuildings] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Load existing buildings from gameState if available\r\n    if (gameState && gameState.buildings) {\r\n      setBuildings(gameState.buildings);\r\n    }\r\n  }, [gameState]);\r\n\r\n  // Add a new building or increase count if it exists\r\n  const addBuilding = (buildingName) => {\r\n    const newBuildings = {\r\n      ...buildings,\r\n      [buildingName]: (buildings[buildingName] || 0) + 1,\r\n    };\r\n    setBuildings(newBuildings);\r\n\r\n    // Update gameState with new buildings object\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      buildings: newBuildings,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"buildings\">\r\n      <h2>Buildings</h2>\r\n      <ul>\r\n        {Object.entries(buildings).map(([building, count]) => (\r\n          <li key={building}>{building}: {count}</li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={() => addBuilding('Cow Pen')}>Add Cow Pen</button>\r\n      <button onClick={() => addBuilding('Wheat Field')}>Add Wheat Field</button>\r\n      <button onClick={() => addBuilding('Varrock')}>Add Varrock</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buildings;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,IAAII,SAAS,IAAIA,SAAS,CAACG,SAAS,EAAE;MACpCC,YAAY,CAACJ,SAAS,CAACG,SAAS,CAAC;IACnC;EACF,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMK,WAAW,GAAIC,YAAY,IAAK;IACpC,MAAMC,YAAY,GAAG;MACnB,GAAGJ,SAAS;MACZ,CAACG,YAAY,GAAG,CAACH,SAAS,CAACG,YAAY,CAAC,IAAI,CAAC,IAAI;IACnD,CAAC;IACDF,YAAY,CAACG,YAAY,CAAC;;IAE1B;IACAN,YAAY,CAAEO,SAAS,KAAM;MAC3B,GAAGA,SAAS;MACZL,SAAS,EAAEI;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhB,OAAA;MAAAY,QAAA,EACGK,MAAM,CAACC,OAAO,CAACb,SAAS,CAAC,CAACc,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,KAAK,CAAC,kBAC/CrB,OAAA;QAAAY,QAAA,GAAoBQ,QAAQ,EAAC,IAAE,EAACC,KAAK;MAAA,GAA5BD,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLhB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEhB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,aAAa,CAAE;MAAAK,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3EhB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV;AAACZ,EAAA,CAtCQH,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}