{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\currency\\\\currency.js\",\n  _s = $RefreshSig$();\n// /src/components/currency/currency.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport buildingStats from '../buildings/building-stats.json';\nimport styles from './currency.module.css';\nimport currencyLevels from './currencyLevels.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Currency({\n  gameState,\n  setGameState = () => {},\n  userId\n}) {\n  _s();\n  const [currency, setCurrency] = useState(0);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [currencyText, setCurrencyText] = useState('');\n\n  // Load currency from backend when component mounts\n  useEffect(() => {\n    if (userId) {\n      axios.get(`http://localhost:5000/api/player/${userId}`).then(response => {\n        const playerData = response.data;\n        if (playerData && playerData.currency !== undefined) {\n          setCurrency(playerData.currency);\n          setGameState(prevState => ({\n            ...prevState,\n            currency: playerData.currency\n          }));\n        }\n      }).catch(error => {\n        console.error('Failed to fetch currency data:', error);\n      });\n    }\n  }, [userId, setGameState]);\n\n  // Calculate total income whenever buildings change\n  useEffect(() => {\n    if (gameState && gameState.buildings) {\n      let income = 0;\n      for (const [buildingName, {\n        count\n      }] of Object.entries(gameState.buildings)) {\n        if (count > 0 && buildingStats[buildingName]) {\n          const buildingIncome = buildingStats[buildingName].income;\n          income += buildingIncome * count;\n        }\n      }\n      setTotalIncome(income);\n    }\n  }, [gameState.buildings]);\n\n  // Update currency text and image whenever currency changes\n  useEffect(() => {\n    for (const level of currencyLevels.currencyLevels) {\n      if (currency >= level.min) {\n        setCurrencyText(level.text);\n      }\n    }\n  }, [currency]);\n\n  // Function to increment currency and track clicks\n  const incrementCurrency = () => {\n    setCurrency(prevCurrency => {\n      const newCurrency = prevCurrency + 1;\n\n      // Update gameState\n      setGameState(prevState => ({\n        ...prevState,\n        currency: newCurrency,\n        clicks: (prevState.clicks || 0) + 1 // Increment clicks count\n      }));\n\n      // Update currency in the backend\n      if (userId) {\n        axios.post(`http://localhost:5000/api/player/${userId}/update-currency`, {\n          currency: newCurrency\n        }).then(response => {\n          console.log(response.data.message);\n        }).catch(error => {\n          console.error('Failed to update currency in backend:', error);\n        });\n      }\n      return newCurrency;\n    });\n  };\n\n  // Function to clear currency\n  const clearCurrency = () => {\n    console.log('Clearing currency for testing purposes');\n    setCurrency(0);\n  };\n\n  // Determine which currency image to display based on the amount of currency\n  const getCurrencyImage = () => {\n    let selectedImage = currencyLevels.currencyLevels[0].image;\n    for (const level of currencyLevels.currencyLevels) {\n      if (currency >= level.min) {\n        selectedImage = require(`../../assets/images/currency/${level.image}`);\n      }\n    }\n    return selectedImage;\n  };\n\n  // Format currency with commas\n  const formatCurrency = value => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.currencyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: getCurrencyImage(),\n      alt: \"Currency Icon\",\n      className: styles.currencyIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currencyDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: currency >= currencyLevels.highCurrencyThreshold ? styles.currencyAmountHigh : '',\n        children: [\"Currency: \", formatCurrency(currency), \" (\", currencyText, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Income: \", formatCurrency(totalIncome), \"/gold sec\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currencyButtonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementCurrency,\n        className: styles.currencyButton,\n        children: \"Earn Currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCurrency,\n        className: `${styles.currencyButton} ${styles.clearButton}`,\n        children: \"Clear Currency [Dev]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Currency, \"n6qoiWqR/H9XfazkssizjRs2LiI=\");\n_c = Currency;\nexport default Currency;\nvar _c;\n$RefreshReg$(_c, \"Currency\");","map":{"version":3,"names":["React","useState","useEffect","axios","buildingStats","styles","currencyLevels","jsxDEV","_jsxDEV","Currency","gameState","setGameState","userId","_s","currency","setCurrency","totalIncome","setTotalIncome","currencyText","setCurrencyText","get","then","response","playerData","data","undefined","prevState","catch","error","console","buildings","income","buildingName","count","Object","entries","buildingIncome","level","min","text","incrementCurrency","prevCurrency","newCurrency","clicks","post","log","message","clearCurrency","getCurrencyImage","selectedImage","image","require","formatCurrency","value","toString","replace","className","currencyContainer","children","src","alt","currencyIcon","fileName","_jsxFileName","lineNumber","columnNumber","currencyDetails","highCurrencyThreshold","currencyAmountHigh","currencyButtonContainer","onClick","currencyButton","clearButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/currency/currency.js"],"sourcesContent":["// /src/components/currency/currency.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport buildingStats from '../buildings/building-stats.json';\r\nimport styles from './currency.module.css';\r\nimport currencyLevels from './currencyLevels.json';\r\n\r\nfunction Currency({ gameState, setGameState = () => {}, userId }) {\r\n  const [currency, setCurrency] = useState(0);\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [currencyText, setCurrencyText] = useState('');\r\n\r\n  // Load currency from backend when component mounts\r\n  useEffect(() => {\r\n    if (userId) {\r\n      axios.get(`http://localhost:5000/api/player/${userId}`)\r\n        .then((response) => {\r\n          const playerData = response.data;\r\n          if (playerData && playerData.currency !== undefined) {\r\n            setCurrency(playerData.currency);\r\n            setGameState((prevState) => ({\r\n              ...prevState,\r\n              currency: playerData.currency,\r\n            }));\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Failed to fetch currency data:', error);\r\n        });\r\n    }\r\n  }, [userId, setGameState]);\r\n\r\n  // Calculate total income whenever buildings change\r\n  useEffect(() => {\r\n    if (gameState && gameState.buildings) {\r\n      let income = 0;\r\n      for (const [buildingName, { count }] of Object.entries(gameState.buildings)) {\r\n        if (count > 0 && buildingStats[buildingName]) {\r\n          const buildingIncome = buildingStats[buildingName].income;\r\n          income += buildingIncome * count;\r\n        }\r\n      }\r\n      setTotalIncome(income);\r\n    }\r\n  }, [gameState.buildings]);\r\n\r\n  // Update currency text and image whenever currency changes\r\n  useEffect(() => {\r\n    for (const level of currencyLevels.currencyLevels) {\r\n      if (currency >= level.min) {\r\n        setCurrencyText(level.text);\r\n      }\r\n    }\r\n  }, [currency]);\r\n\r\n  // Function to increment currency and track clicks\r\n  const incrementCurrency = () => {\r\n    setCurrency((prevCurrency) => {\r\n      const newCurrency = prevCurrency + 1;\r\n      \r\n      // Update gameState\r\n      setGameState((prevState) => ({\r\n        ...prevState,\r\n        currency: newCurrency,\r\n        clicks: (prevState.clicks || 0) + 1, // Increment clicks count\r\n      }));\r\n\r\n      // Update currency in the backend\r\n      if (userId) {\r\n        axios.post(`http://localhost:5000/api/player/${userId}/update-currency`, { currency: newCurrency })\r\n          .then((response) => {\r\n            console.log(response.data.message);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Failed to update currency in backend:', error);\r\n          });\r\n      }\r\n\r\n      return newCurrency;\r\n    });\r\n  };\r\n\r\n  // Function to clear currency\r\n  const clearCurrency = () => {\r\n    console.log('Clearing currency for testing purposes');\r\n    setCurrency(0);\r\n  };\r\n\r\n  // Determine which currency image to display based on the amount of currency\r\n  const getCurrencyImage = () => {\r\n    let selectedImage = currencyLevels.currencyLevels[0].image;\r\n    for (const level of currencyLevels.currencyLevels) {\r\n      if (currency >= level.min) {\r\n        selectedImage = require(`../../assets/images/currency/${level.image}`);\r\n      }\r\n    }\r\n    return selectedImage;\r\n  };\r\n\r\n  // Format currency with commas\r\n  const formatCurrency = (value) => {\r\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.currencyContainer}>\r\n      <img src={getCurrencyImage()} alt=\"Currency Icon\" className={styles.currencyIcon} />\r\n      <div className={styles.currencyDetails}>\r\n        <h3 className={currency >= currencyLevels.highCurrencyThreshold ? styles.currencyAmountHigh : ''}>\r\n          Currency: {formatCurrency(currency)} ({currencyText})\r\n        </h3>\r\n        <h4>Income: {formatCurrency(totalIncome)}/gold sec</h4>\r\n      </div>\r\n      <div className={styles.currencyButtonContainer}>\r\n        <button onClick={incrementCurrency} className={styles.currencyButton}>Earn Currency</button>\r\n        <button onClick={clearCurrency} className={`${styles.currencyButton} ${styles.clearButton}`}>Clear Currency [Dev]</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Currency;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,cAAc,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC,SAAS;EAAEC,YAAY,GAAGA,CAAA,KAAM,CAAC,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,EAAE;MACVT,KAAK,CAACiB,GAAG,CAAC,oCAAoCR,MAAM,EAAE,CAAC,CACpDS,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI;QAChC,IAAID,UAAU,IAAIA,UAAU,CAACT,QAAQ,KAAKW,SAAS,EAAE;UACnDV,WAAW,CAACQ,UAAU,CAACT,QAAQ,CAAC;UAChCH,YAAY,CAAEe,SAAS,KAAM;YAC3B,GAAGA,SAAS;YACZZ,QAAQ,EAAES,UAAU,CAACT;UACvB,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAAChB,MAAM,EAAED,YAAY,CAAC,CAAC;;EAE1B;EACAT,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,IAAIA,SAAS,CAACoB,SAAS,EAAE;MACpC,IAAIC,MAAM,GAAG,CAAC;MACd,KAAK,MAAM,CAACC,YAAY,EAAE;QAAEC;MAAM,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACzB,SAAS,CAACoB,SAAS,CAAC,EAAE;QAC3E,IAAIG,KAAK,GAAG,CAAC,IAAI7B,aAAa,CAAC4B,YAAY,CAAC,EAAE;UAC5C,MAAMI,cAAc,GAAGhC,aAAa,CAAC4B,YAAY,CAAC,CAACD,MAAM;UACzDA,MAAM,IAAIK,cAAc,GAAGH,KAAK;QAClC;MACF;MACAhB,cAAc,CAACc,MAAM,CAAC;IACxB;EACF,CAAC,EAAE,CAACrB,SAAS,CAACoB,SAAS,CAAC,CAAC;;EAEzB;EACA5B,SAAS,CAAC,MAAM;IACd,KAAK,MAAMmC,KAAK,IAAI/B,cAAc,CAACA,cAAc,EAAE;MACjD,IAAIQ,QAAQ,IAAIuB,KAAK,CAACC,GAAG,EAAE;QACzBnB,eAAe,CAACkB,KAAK,CAACE,IAAI,CAAC;MAC7B;IACF;EACF,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM0B,iBAAiB,GAAGA,CAAA,KAAM;IAC9BzB,WAAW,CAAE0B,YAAY,IAAK;MAC5B,MAAMC,WAAW,GAAGD,YAAY,GAAG,CAAC;;MAEpC;MACA9B,YAAY,CAAEe,SAAS,KAAM;QAC3B,GAAGA,SAAS;QACZZ,QAAQ,EAAE4B,WAAW;QACrBC,MAAM,EAAE,CAACjB,SAAS,CAACiB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAE;MACvC,CAAC,CAAC,CAAC;;MAEH;MACA,IAAI/B,MAAM,EAAE;QACVT,KAAK,CAACyC,IAAI,CAAC,oCAAoChC,MAAM,kBAAkB,EAAE;UAAEE,QAAQ,EAAE4B;QAAY,CAAC,CAAC,CAChGrB,IAAI,CAAEC,QAAQ,IAAK;UAClBO,OAAO,CAACgB,GAAG,CAACvB,QAAQ,CAACE,IAAI,CAACsB,OAAO,CAAC;QACpC,CAAC,CAAC,CACDnB,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC/D,CAAC,CAAC;MACN;MAEA,OAAOc,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BlB,OAAO,CAACgB,GAAG,CAAC,wCAAwC,CAAC;IACrD9B,WAAW,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMiC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,aAAa,GAAG3C,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,CAAC4C,KAAK;IAC1D,KAAK,MAAMb,KAAK,IAAI/B,cAAc,CAACA,cAAc,EAAE;MACjD,IAAIQ,QAAQ,IAAIuB,KAAK,CAACC,GAAG,EAAE;QACzBW,aAAa,GAAGE,OAAO,CAAC,gCAAgCd,KAAK,CAACa,KAAK,EAAE,CAAC;MACxE;IACF;IACA,OAAOD,aAAa;EACtB,CAAC;;EAED;EACA,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAChC,OAAOA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;EAC/D,CAAC;EAED,oBACE/C,OAAA;IAAKgD,SAAS,EAAEnD,MAAM,CAACoD,iBAAkB;IAAAC,QAAA,gBACvClD,OAAA;MAAKmD,GAAG,EAAEX,gBAAgB,CAAC,CAAE;MAACY,GAAG,EAAC,eAAe;MAACJ,SAAS,EAAEnD,MAAM,CAACwD;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFzD,OAAA;MAAKgD,SAAS,EAAEnD,MAAM,CAAC6D,eAAgB;MAAAR,QAAA,gBACrClD,OAAA;QAAIgD,SAAS,EAAE1C,QAAQ,IAAIR,cAAc,CAAC6D,qBAAqB,GAAG9D,MAAM,CAAC+D,kBAAkB,GAAG,EAAG;QAAAV,QAAA,GAAC,YACtF,EAACN,cAAc,CAACtC,QAAQ,CAAC,EAAC,IAAE,EAACI,YAAY,EAAC,GACtD;MAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLzD,OAAA;QAAAkD,QAAA,GAAI,UAAQ,EAACN,cAAc,CAACpC,WAAW,CAAC,EAAC,WAAS;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACNzD,OAAA;MAAKgD,SAAS,EAAEnD,MAAM,CAACgE,uBAAwB;MAAAX,QAAA,gBAC7ClD,OAAA;QAAQ8D,OAAO,EAAE9B,iBAAkB;QAACgB,SAAS,EAAEnD,MAAM,CAACkE,cAAe;QAAAb,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5FzD,OAAA;QAAQ8D,OAAO,EAAEvB,aAAc;QAACS,SAAS,EAAE,GAAGnD,MAAM,CAACkE,cAAc,IAAIlE,MAAM,CAACmE,WAAW,EAAG;QAAAd,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpD,EAAA,CAhHQJ,QAAQ;AAAAgE,EAAA,GAARhE,QAAQ;AAkHjB,eAAeA,QAAQ;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}