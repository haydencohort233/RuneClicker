{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\player\\\\playerDetails.js\",\n  _s = $RefreshSig$();\n// /src/components/player/playerDetails.js\nimport React from 'react';\nimport playerLevels from './playerLevel.json';\nimport styles from './playerDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerDetails({\n  player,\n  setPlayer\n}) {\n  _s();\n  const [playerState, setPlayerState] = useState(player);\n\n  // Check if player data is available before rendering\n  if (!player) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.playerDetailsContainer,\n      children: \"Loading player details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    username,\n    level,\n    experience,\n    hitpoints,\n    maxHitPoints,\n    currentLocation\n  } = player;\n\n  // Handlers for increasing level and decreasing hitpoints\n  const increaseLevel = () => {\n    setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      level: prevPlayer.level + 1\n    }));\n  };\n  const decreaseHitpoints = () => {\n    setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      hitpoints: Math.max(prevPlayer.hitpoints - 10, 0) // Ensure hitpoints don't go below 0\n    }));\n  };\n\n  // Function to check if the player can level up\n  const checkLevelUp = () => {\n    const currentLevel = playerState.level;\n    const currentExp = playerState.experience;\n    const nextLevelInfo = playerLevels.levels.find(level => level.level === currentLevel + 1);\n    if (nextLevelInfo && currentExp >= nextLevelInfo.expRequired) {\n      setPlayerState(prevState => ({\n        ...prevState,\n        level: prevState.level + 1\n      }));\n      setGameState(prevState => ({\n        ...prevState,\n        level: prevState.level + 1\n      }));\n      console.log(`Leveled up to Level ${currentLevel + 1}`);\n    }\n  };\n\n  // Check for level up whenever experience changes\n  useEffect(() => {\n    checkLevelUp();\n  }, [playerState.experience]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerDetailsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), \" \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), \" \", level, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.smallButton,\n        onClick: increaseLevel,\n        children: \"+1 Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), \" \", experience]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Hitpoints:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this), \" \", hitpoints, \" / \", maxHitPoints, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.smallButton,\n        onClick: decreaseHitpoints,\n        children: \"-10 HP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), \" \", currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerDetails, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n_c = PlayerDetails;\nexport default PlayerDetails;\nvar _c;\n$RefreshReg$(_c, \"PlayerDetails\");","map":{"version":3,"names":["React","playerLevels","styles","jsxDEV","_jsxDEV","PlayerDetails","player","setPlayer","_s","playerState","setPlayerState","useState","className","playerDetailsContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","username","level","experience","hitpoints","maxHitPoints","currentLocation","increaseLevel","prevPlayer","decreaseHitpoints","Math","max","checkLevelUp","currentLevel","currentExp","nextLevelInfo","levels","find","expRequired","prevState","setGameState","console","log","useEffect","smallButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/player/playerDetails.js"],"sourcesContent":["// /src/components/player/playerDetails.js\r\nimport React from 'react';\r\nimport playerLevels from './playerLevel.json';\r\nimport styles from './playerDetails.module.css';\r\n\r\nfunction PlayerDetails({ player, setPlayer }) {\r\n    const [playerState, setPlayerState] = useState(player);\r\n\r\n    // Check if player data is available before rendering\r\n    if (!player) {\r\n        return <div className={styles.playerDetailsContainer}>Loading player details...</div>;\r\n    }\r\n\r\n  const { username, level, experience, hitpoints, maxHitPoints, currentLocation } = player;\r\n\r\n  // Handlers for increasing level and decreasing hitpoints\r\n  const increaseLevel = () => {\r\n    setPlayer((prevPlayer) => ({\r\n      ...prevPlayer,\r\n      level: prevPlayer.level + 1,\r\n    }));\r\n  };\r\n\r\n  const decreaseHitpoints = () => {\r\n    setPlayer((prevPlayer) => ({\r\n      ...prevPlayer,\r\n      hitpoints: Math.max(prevPlayer.hitpoints - 10, 0), // Ensure hitpoints don't go below 0\r\n    }));\r\n  };\r\n\r\n  // Function to check if the player can level up\r\n  const checkLevelUp = () => {\r\n    const currentLevel = playerState.level;\r\n    const currentExp = playerState.experience;\r\n    const nextLevelInfo = playerLevels.levels.find(level => level.level === currentLevel + 1);\r\n\r\n    if (nextLevelInfo && currentExp >= nextLevelInfo.expRequired) {\r\n      setPlayerState(prevState => ({\r\n        ...prevState,\r\n        level: prevState.level + 1,\r\n      }));\r\n      setGameState(prevState => ({\r\n        ...prevState,\r\n        level: prevState.level + 1,\r\n      }));\r\n      console.log(`Leveled up to Level ${currentLevel + 1}`);\r\n    }\r\n  };\r\n\r\n  // Check for level up whenever experience changes\r\n  useEffect(() => {\r\n    checkLevelUp();\r\n  }, [playerState.experience]);\r\n\r\n  return (\r\n    <div className={styles.playerDetailsContainer}>\r\n      <p><strong>Username:</strong> {username}</p>\r\n      <p><strong>Level:</strong> {level} <button className={styles.smallButton} onClick={increaseLevel}>+1 Level</button></p>\r\n      <p><strong>Experience:</strong> {experience}</p>\r\n      <p><strong>Hitpoints:</strong> {hitpoints} / {maxHitPoints} <button className={styles.smallButton} onClick={decreaseHitpoints}>-10 HP</button></p>\r\n      <p><strong>Current Location:</strong> {currentLocation}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}