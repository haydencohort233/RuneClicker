{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\banking\\\\banking.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport styles from './banking.module.css';\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\nfunction Banking({\n  gameState,\n  setGameState\n}) {\n  _s();\n  var _gameState$buildings;\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    item: null\n  });\n  const [bankContextMenu, setBankContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    item: null\n  });\n\n  // Check if the player owns the Bank building\n  const ownsBank = (_gameState$buildings = gameState.buildings) === null || _gameState$buildings === void 0 ? void 0 : _gameState$buildings.some(building => building.name === \"Bank\" && building.count > 0);\n\n  // Define all hooks here to prevent conditional hook call issues\n  const handleDepositItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedInventory = [...prevState.inventory];\n      const updatedBank = [...prevState.bank];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        if (updatedInventory[itemIndex].quantity >= quantity) {\n          // Handle inventory reduction\n          if (updatedInventory[itemIndex].quantity > quantity) {\n            updatedInventory[itemIndex].quantity -= quantity;\n          } else {\n            updatedInventory.splice(itemIndex, 1);\n          }\n\n          // Handle bank addition\n          const bankItemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n          if (bankItemIndex > -1) {\n            updatedBank[bankItemIndex].quantity = Math.min(updatedBank[bankItemIndex].quantity + quantity, 65535 // Assuming stackable limit\n            );\n          } else if (updatedBank.length < gameState.bankSpace) {\n            updatedBank.push({\n              ...item,\n              quantity\n            });\n          } else {\n            alert('Bank is full! Cannot deposit more items.');\n            return prevState;\n          }\n        } else {\n          alert('Not enough items to deposit that amount.');\n          return prevState;\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedBank = [...prevState.bank];\n      const updatedInventory = [...prevState.inventory];\n      const itemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        if (updatedBank[itemIndex].quantity >= quantity) {\n          // Handle bank reduction\n          if (updatedBank[itemIndex].quantity > quantity) {\n            updatedBank[itemIndex].quantity -= quantity;\n          } else {\n            updatedBank.splice(itemIndex, 1);\n            // Dismiss options if the item is fully withdrawn from the bank\n            setSelectedItem(null);\n          }\n\n          // Handle inventory addition\n          const inventoryItemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n          if (inventoryItemIndex > -1) {\n            // Add to existing stack if it exists, regardless of inventory space\n            updatedInventory[inventoryItemIndex].quantity = Math.min(updatedInventory[inventoryItemIndex].quantity + quantity, 65535);\n          } else {\n            // Only add a new item if there is space in the inventory\n            if (updatedInventory.length >= prevState.maxInventorySpace) {\n              alert('Inventory is full! Cannot withdraw more items.');\n              return prevState;\n            }\n            updatedInventory.push({\n              ...item,\n              quantity\n            });\n          }\n        } else {\n          alert('Not enough items to withdraw that amount.');\n          return prevState;\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (contextMenu.visible) {\n        setContextMenu({\n          visible: false,\n          x: 0,\n          y: 0,\n          item: null\n        });\n      }\n      if (bankContextMenu.visible) {\n        setBankContextMenu({\n          visible: false,\n          x: 0,\n          y: 0,\n          item: null\n        });\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [contextMenu, bankContextMenu]);\n\n  // Conditional Rendering for Bank Access\n  return ownsBank ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bankingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.bankingTitle,\n      children: [\"Bank (\", gameState.bank.length, \" / \", gameState.bankSpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bankingSlots,\n      children: gameState.bank.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bankSlot,\n        onClick: () => setSelectedItem(item),\n        onContextMenu: e => handleRightClickBank(e, item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/assets/images/items/${item.image}`,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(x\", item.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: selectedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 1),\n        children: \"Withdraw 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 5),\n        children: \"Withdraw 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, selectedItem.quantity),\n        children: \"Withdraw All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedItem(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bankingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.bankingTitle,\n      children: \"Bank Locked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You need to purchase the Bank building to use this feature.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(Banking, \"cXS5+C4/JmfVfOoBXMoQbL43MDY=\");\n_c = Banking;\nexport default Banking;\nvar _c;\n$RefreshReg$(_c, \"Banking\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","styles","bankUpgradeConfig","jsxDEV","_jsxDEV","MAX_BANK_SPACE","maxBankSpaces","Banking","gameState","setGameState","_s","_gameState$buildings","selectedItem","setSelectedItem","contextMenu","setContextMenu","visible","x","y","item","bankContextMenu","setBankContextMenu","ownsBank","buildings","some","building","name","count","handleDepositItem","quantity","prevState","updatedInventory","inventory","updatedBank","bank","itemIndex","findIndex","i","itemId","splice","bankItemIndex","Math","min","length","bankSpace","push","alert","handleWithdrawItem","inventoryItemIndex","maxInventorySpace","handleClickOutside","document","addEventListener","removeEventListener","className","bankingContainer","children","bankingTitle","fileName","_jsxFileName","lineNumber","columnNumber","bankingSlots","map","index","bankSlot","onClick","onContextMenu","e","handleRightClickBank","src","image","alt","itemActions","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/banking/banking.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport styles from './banking.module.css';\r\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\r\n\r\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\r\n\r\nfunction Banking({ gameState, setGameState }) {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [contextMenu, setContextMenu] = useState({ visible: false, x: 0, y: 0, item: null });\r\n  const [bankContextMenu, setBankContextMenu] = useState({ visible: false, x: 0, y: 0, item: null });\r\n\r\n  // Check if the player owns the Bank building\r\n  const ownsBank = gameState.buildings?.some(\r\n    (building) => building.name === \"Bank\" && building.count > 0\r\n  );\r\n\r\n  // Define all hooks here to prevent conditional hook call issues\r\n  const handleDepositItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedInventory = [...prevState.inventory];\r\n      const updatedBank = [...prevState.bank];\r\n\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        if (updatedInventory[itemIndex].quantity >= quantity) {\r\n          // Handle inventory reduction\r\n          if (updatedInventory[itemIndex].quantity > quantity) {\r\n            updatedInventory[itemIndex].quantity -= quantity;\r\n          } else {\r\n            updatedInventory.splice(itemIndex, 1);\r\n          }\r\n\r\n          // Handle bank addition\r\n          const bankItemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n          if (bankItemIndex > -1) {\r\n            updatedBank[bankItemIndex].quantity = Math.min(\r\n              updatedBank[bankItemIndex].quantity + quantity,\r\n              65535 // Assuming stackable limit\r\n            );\r\n          } else if (updatedBank.length < gameState.bankSpace) {\r\n            updatedBank.push({ ...item, quantity });\r\n          } else {\r\n            alert('Bank is full! Cannot deposit more items.');\r\n            return prevState;\r\n          }\r\n        } else {\r\n          alert('Not enough items to deposit that amount.');\r\n          return prevState;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedBank = [...prevState.bank];\r\n      const updatedInventory = [...prevState.inventory];\r\n\r\n      const itemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        if (updatedBank[itemIndex].quantity >= quantity) {\r\n          // Handle bank reduction\r\n          if (updatedBank[itemIndex].quantity > quantity) {\r\n            updatedBank[itemIndex].quantity -= quantity;\r\n          } else {\r\n            updatedBank.splice(itemIndex, 1);\r\n            // Dismiss options if the item is fully withdrawn from the bank\r\n            setSelectedItem(null);\r\n          }\r\n\r\n          // Handle inventory addition\r\n          const inventoryItemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n          if (inventoryItemIndex > -1) {\r\n            // Add to existing stack if it exists, regardless of inventory space\r\n            updatedInventory[inventoryItemIndex].quantity = Math.min(\r\n              updatedInventory[inventoryItemIndex].quantity + quantity,\r\n              65535\r\n            );\r\n          } else {\r\n            // Only add a new item if there is space in the inventory\r\n            if (updatedInventory.length >= prevState.maxInventorySpace) {\r\n              alert('Inventory is full! Cannot withdraw more items.');\r\n              return prevState;\r\n            }\r\n            updatedInventory.push({ ...item, quantity });\r\n          }\r\n        } else {\r\n          alert('Not enough items to withdraw that amount.');\r\n          return prevState;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      if (contextMenu.visible) {\r\n        setContextMenu({ visible: false, x: 0, y: 0, item: null });\r\n      }\r\n      if (bankContextMenu.visible) {\r\n        setBankContextMenu({ visible: false, x: 0, y: 0, item: null });\r\n      }\r\n    };\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, [contextMenu, bankContextMenu]);\r\n\r\n  // Conditional Rendering for Bank Access\r\n  return ownsBank ? (\r\n    <div className={styles.bankingContainer}>\r\n      {/* Rest of the Banking Component */}\r\n      <h2 className={styles.bankingTitle}>Bank ({gameState.bank.length} / {gameState.bankSpace})</h2>\r\n      <div className={styles.bankingSlots}>\r\n        {gameState.bank.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className={styles.bankSlot}\r\n            onClick={() => setSelectedItem(item)}\r\n            onContextMenu={(e) => handleRightClickBank(e, item)}\r\n          >\r\n            <img src={`http://localhost:5000/assets/images/items/${item.image}`} alt={item.name} />\r\n            <p>(x{item.quantity})</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedItem && (\r\n        <div className={styles.itemActions}>\r\n          <h4>{selectedItem.name}</h4>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 1)}>Withdraw 1</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 5)}>Withdraw 5</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, selectedItem.quantity)}>Withdraw All</button>\r\n          <button onClick={() => setSelectedItem(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div className={styles.bankingContainer}>\r\n      <h2 className={styles.bankingTitle}>Bank Locked</h2>\r\n      <p>You need to purchase the Bank building to use this feature.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}