{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\inventory\\\\inventory.js\",\n  _s = $RefreshSig$();\n// /components/inventory/inventory.js\nimport React, { useState, useEffect } from 'react';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  inventory = [],\n  setPlayer,\n  maxInventorySpace\n}) {\n  _s();\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const [sortOption, setSortOption] = useState('rarity');\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [dropItem, setDropItem] = useState(null);\n  const handleAddRandomItem = () => {\n    if (inventory.length >= maxInventorySpace) {\n      alert('Inventory is full! Cannot add more items.');\n      return;\n    }\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\n    if (!randomItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\n      if (randomItem.type === 'quest') {\n        // Ensure quest items cannot be stacked and are unique\n        if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      } else {\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\n          updatedInventory[existingItemIndex].quantity += 1;\n        } else if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n  };\n\n  // Function to equip an item to a specific slot\n  const handleEquipItem = item => {\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex < 0) return prevPlayer;\n      let updatedEquipment = {\n        ...prevPlayer.equipment\n      };\n      // Ensure all equipment slots are defined\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\n\n      // Use the item slot directly from item data\n      const slot = item.slot;\n      if (slot === \"fingers\") {\n        // Equip to the first available finger slot\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\n        if (ringSlotIndex !== -1) {\n          updatedEquipment.fingers[ringSlotIndex] = item;\n        } else {\n          const replacedItem = updatedEquipment.fingers[0];\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\n          if (replacedItem) {\n            addItemToInventory(updatedInventory, replacedItem);\n            console.log('Returned item to inventory:', replacedItem);\n          }\n        }\n      } else if (slot === \"neck\") {\n        // Equip to neck slot\n        if (updatedEquipment.neck) {\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment.neck);\n        }\n        updatedEquipment.neck = item; // Equip the item\n      } else {\n        if (updatedEquipment[slot]) {\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\n        }\n        updatedEquipment[slot] = item; // Equip the item\n      }\n\n      // Remove the item from inventory\n      if (updatedInventory[itemIndex].quantity > 1) {\n        updatedInventory[itemIndex].quantity -= 1;\n      } else {\n        updatedInventory.splice(itemIndex, 1);\n      }\n      console.log('Current equipment:', updatedEquipment);\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory,\n        equipment: updatedEquipment\n      };\n    });\n  };\n\n  // Tooltip Position Logic\n  const getTooltipPosition = element => {\n    if (!element) return {\n      top: '100%',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    };\n    const rect = element.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const tooltipHeight = 60; // Estimated tooltip height\n    const spaceBelow = viewportHeight - rect.bottom;\n    if (spaceBelow >= tooltipHeight) {\n      // Space below is sufficient\n      return {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(-50%)'\n      };\n    } else {\n      // Default to showing above the item\n      return {\n        bottom: '110%',\n        left: '50%',\n        transform: 'translateX(-50%)'\n      };\n    }\n  };\n\n  // Helper function to add item to inventory, considering stacking and space limitations\n  const addItemToInventory = (inventory, item) => {\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\n      inventory[existingItemIndex].quantity += 1;\n    } else if (existingItemIndex >= 0) {\n      // Stack the item if it already exists but the quantity is at max\n      inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\n    } else if (inventory.length < maxInventorySpace) {\n      inventory.push({\n        ...item,\n        quantity: 1\n      });\n    } else {\n      alert('Inventory is full! Cannot unequip the item.');\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\n    }\n  };\n\n  // Function to handle item actions from inventory\n  const handleItemAction = (itemId, action) => {\n    const item = itemConfig.items.find(i => i.itemId === itemId);\n    if (!item) return;\n    if (action === 'drop') {\n      setDropItem(item);\n      setSelectedItem(item);\n      return;\n    }\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\n      if (itemIndex >= 0) {\n        if (item.type === 'quest') {\n          alert('This is a quest item and cannot be dropped or used.');\n          return prevPlayer;\n        }\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else if (action === \"use\") {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply item effect if the action is to use\n      let updatedPlayer = {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n      if (action === \"use\") {\n        if (item.type === \"food\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"potion\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"weapon\" && item.attackBoost) {\n          updatedPlayer.attackPower += item.attackBoost;\n        } else if (item.type === \"armor\" && item.defenceBoost) {\n          updatedPlayer.defencePower += item.defenceBoost;\n        }\n      }\n      return updatedPlayer;\n    });\n  };\n\n  // Function to drop a specific quantity of an item\n  const handleDropQuantity = quantity => {\n    if (!dropItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\n      if (itemIndex >= 0) {\n        if (quantity >= updatedInventory[itemIndex].quantity) {\n          updatedInventory.splice(itemIndex, 1);\n        } else {\n          updatedInventory[itemIndex].quantity -= quantity;\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n    setDropItem(null);\n    setSelectedItem(null);\n  };\n\n  // Sort inventory based on the selected sort option\n  const sortedInventory = [...inventory].sort((a, b) => {\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\n    if (!itemA || !itemB) return 0;\n    if (sortOption === 'rarity') {\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRandomItem,\n      className: styles.devButton,\n      children: \"Add Random Item (Dev)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sortOptions,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortOption,\n        onChange: e => setSortOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rarity\",\n          children: \"Rarity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), inventory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your inventory is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventoryGrid,\n      children: sortedInventory.map((item, index) => {\n        var _inventory$find;\n        const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n        if (!itemData) return null;\n        const rarityClass = {\n          \"common\": styles.common,\n          \"uncommon\": styles.uncommon,\n          \"rare\": styles.rare,\n          \"very rare\": styles.veryRare,\n          \"mythical\": styles.mythical,\n          \"quest\": styles.quest\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inventoryItem} ${rarityClass[itemData.rarity]}`,\n          onMouseEnter: e => setHoveredItem({\n            itemData,\n            position: getTooltipPosition(e.currentTarget)\n          }),\n          onMouseLeave: () => setHoveredItem(null),\n          onClick: () => setSelectedItem(selectedItem === item ? null : item),\n          children: [dropItem && dropItem.itemId === item.itemId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dropOptions,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Drop \", dropItem.name, \" (x\", ((_inventory$find = inventory.find(i => i.itemId === dropItem.itemId)) === null || _inventory$find === void 0 ? void 0 : _inventory$find.quantity) || 1, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropOneButton,\n              onClick: () => handleDropQuantity(1),\n              children: \"Drop 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropXButton,\n              onClick: () => handleDropQuantity(prompt('Enter quantity to drop:', '1')),\n              children: \"Drop X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropAllButton,\n              onClick: () => {\n                var _inventory$find2;\n                return handleDropQuantity(((_inventory$find2 = inventory.find(i => i.itemId === dropItem.itemId)) === null || _inventory$find2 === void 0 ? void 0 : _inventory$find2.quantity) || 1);\n              },\n              children: \"Drop All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.cancelButton,\n              onClick: () => {\n                setDropItem(null);\n                setSelectedItem(null);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${itemData.image}`,\n              alt: itemData.name,\n              className: styles.itemImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [itemData.name, \" (x\", item.quantity, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this), selectedItem && selectedItem.itemId === item.itemId && !dropItem && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [itemData.type === \"weapon\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"armor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"jewelry\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"food\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.eatButton,\n                  onClick: () => handleItemAction(item.itemId, 'use'),\n                  children: \"Eat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"potion\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.drinkButton,\n                  onClick: () => handleItemAction(item.itemId, 'use'),\n                  children: \"Drink\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"quest\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.questButton,\n                children: \"Quest Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 27\n              }, this) : itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.dropButton,\n                onClick: () => handleItemAction(item.itemId, 'drop'),\n                children: \"Drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true), hoveredItem && hoveredItem.itemId === item.itemId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: hoveredItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: hoveredItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this), hoveredItem.attackBoost !== undefined && hoveredItem.attackBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Attack Boost: \", hoveredItem.attackBoost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 96\n            }, this), hoveredItem.defenceBoost !== undefined && hoveredItem.defenceBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Defence Boost: \", hoveredItem.defenceBoost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 98\n            }, this), hoveredItem.effect && hoveredItem.effect.heal && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Heal: \", hoveredItem.effect.heal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"oZeOAcFNXUIbXQqYsCrN8j2NHLs=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","styles","itemConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Inventory","inventory","setPlayer","maxInventorySpace","_s","hoveredItem","setHoveredItem","sortOption","setSortOption","isOpen","setIsOpen","selectedItem","setSelectedItem","dropItem","setDropItem","handleAddRandomItem","length","alert","randomItem","items","Math","floor","random","prevPlayer","updatedInventory","existingItemIndex","findIndex","i","itemId","type","push","quantity","handleEquipItem","item","itemIndex","updatedEquipment","equipment","fingers","neck","slot","ringSlotIndex","replacedItem","addItemToInventory","console","log","splice","getTooltipPosition","element","top","left","transform","rect","getBoundingClientRect","viewportHeight","window","innerHeight","tooltipHeight","spaceBelow","bottom","min","Error","handleItemAction","action","find","updatedPlayer","effect","heal","hitpoints","maxHitPoints","attackBoost","attackPower","defenceBoost","defencePower","handleDropQuantity","sortedInventory","sort","a","b","itemA","itemB","rarityOrder","indexOf","rarity","className","inventoryContainer","children","onClick","devButton","fileName","_jsxFileName","lineNumber","columnNumber","sortOptions","htmlFor","id","value","onChange","e","target","inventoryGrid","map","index","_inventory$find","itemData","rarityClass","common","uncommon","rare","veryRare","mythical","quest","inventoryItem","onMouseEnter","position","currentTarget","onMouseLeave","dropOptions","name","dropOneButton","dropXButton","prompt","dropAllButton","_inventory$find2","cancelButton","src","image","alt","itemImage","equipButton","dropButton","eatButton","drinkButton","questButton","tooltip","description","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/inventory/inventory.js"],"sourcesContent":["// /components/inventory/inventory.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nfunction Inventory({ inventory = [], setPlayer, maxInventorySpace }) {\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n  const [sortOption, setSortOption] = useState('rarity');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [dropItem, setDropItem] = useState(null);\r\n\r\n  const handleAddRandomItem = () => {\r\n    if (inventory.length >= maxInventorySpace) {\r\n      alert('Inventory is full! Cannot add more items.');\r\n      return;\r\n    }\r\n    \r\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\r\n    if (!randomItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\r\n\r\n      if (randomItem.type === 'quest') {\r\n        // Ensure quest items cannot be stacked and are unique\r\n        if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      } else {\r\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\r\n          updatedInventory[existingItemIndex].quantity += 1;\r\n        } else if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n  };\r\n\r\n  // Function to equip an item to a specific slot\r\n  const handleEquipItem = (item) => {\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\r\n      if (itemIndex < 0) return prevPlayer;\r\n\r\n      let updatedEquipment = { ...prevPlayer.equipment };\r\n      // Ensure all equipment slots are defined\r\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\r\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\r\n\r\n      // Use the item slot directly from item data\r\n      const slot = item.slot;\r\n\r\n      if (slot === \"fingers\") {\r\n        // Equip to the first available finger slot\r\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\r\n        if (ringSlotIndex !== -1) {\r\n          updatedEquipment.fingers[ringSlotIndex] = item;\r\n        } else {\r\n          const replacedItem = updatedEquipment.fingers[0];\r\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\r\n          if (replacedItem) {\r\n            addItemToInventory(updatedInventory, replacedItem);\r\n            console.log('Returned item to inventory:', replacedItem);\r\n          }\r\n        }\r\n      } else if (slot === \"neck\") {\r\n        // Equip to neck slot\r\n        if (updatedEquipment.neck) {\r\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment.neck);\r\n        }\r\n        updatedEquipment.neck = item; // Equip the item\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\r\n        }\r\n        updatedEquipment[slot] = item; // Equip the item\r\n      }\r\n\r\n      // Remove the item from inventory\r\n      if (updatedInventory[itemIndex].quantity > 1) {\r\n        updatedInventory[itemIndex].quantity -= 1;\r\n      } else {\r\n        updatedInventory.splice(itemIndex, 1);\r\n      }\r\n\r\n      console.log('Current equipment:', updatedEquipment);\r\n      return { ...prevPlayer, inventory: updatedInventory, equipment: updatedEquipment };\r\n    });\r\n  };\r\n\r\n  // Tooltip Position Logic\r\n  const getTooltipPosition = (element) => {\r\n    if (!element) return { top: '100%', left: '50%', transform: 'translateX(-50%)' };\r\n\r\n    const rect = element.getBoundingClientRect();\r\n    const viewportHeight = window.innerHeight;\r\n    const tooltipHeight = 60; // Estimated tooltip height\r\n    const spaceBelow = viewportHeight - rect.bottom;\r\n\r\n    if (spaceBelow >= tooltipHeight) {\r\n      // Space below is sufficient\r\n      return { top: '100%', left: '50%', transform: 'translateX(-50%)' };\r\n    } else {\r\n      // Default to showing above the item\r\n      return { bottom: '110%', left: '50%', transform: 'translateX(-50%)' };\r\n    }\r\n  };\r\n\r\n  // Helper function to add item to inventory, considering stacking and space limitations\r\n  const addItemToInventory = (inventory, item) => {\r\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\r\n\r\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\r\n      inventory[existingItemIndex].quantity += 1;\r\n    } else if (existingItemIndex >= 0) {\r\n        // Stack the item if it already exists but the quantity is at max\r\n        inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\r\n    } else if (inventory.length < maxInventorySpace) {\r\n      inventory.push({ ...item, quantity: 1 });\r\n    } else {\r\n      alert('Inventory is full! Cannot unequip the item.');\r\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\r\n    }\r\n  };\r\n\r\n  // Function to handle item actions from inventory\r\n  const handleItemAction = (itemId, action) => {\r\n    const item = itemConfig.items.find((i) => i.itemId === itemId);\r\n    if (!item) return;\r\n\r\n    if (action === 'drop') {\r\n      setDropItem(item);\r\n      setSelectedItem(item);\r\n      return;\r\n    }\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\r\n      if (itemIndex >= 0) {\r\n        if (item.type === 'quest') {\r\n          alert('This is a quest item and cannot be dropped or used.');\r\n          return prevPlayer;\r\n        }\r\n\r\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else if (action === \"use\") {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply item effect if the action is to use\r\n      let updatedPlayer = { ...prevPlayer, inventory: updatedInventory };\r\n      if (action === \"use\") {\r\n        if (item.type === \"food\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"potion\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"weapon\" && item.attackBoost) {\r\n          updatedPlayer.attackPower += item.attackBoost;\r\n        } else if (item.type === \"armor\" && item.defenceBoost) {\r\n          updatedPlayer.defencePower += item.defenceBoost;\r\n        }\r\n      }\r\n\r\n      return updatedPlayer;\r\n    });\r\n  };\r\n\r\n  // Function to drop a specific quantity of an item\r\n  const handleDropQuantity = (quantity) => {\r\n    if (!dropItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\r\n      if (itemIndex >= 0) {\r\n        if (quantity >= updatedInventory[itemIndex].quantity) {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        } else {\r\n          updatedInventory[itemIndex].quantity -= quantity;\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n    setDropItem(null);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Sort inventory based on the selected sort option\r\n  const sortedInventory = [...inventory].sort((a, b) => {\r\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\r\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\r\n    if (!itemA || !itemB) return 0;\r\n\r\n    if (sortOption === 'rarity') {\r\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\r\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <button onClick={handleAddRandomItem} className={styles.devButton}>Add Random Item (Dev)</button>\r\n      <div className={styles.sortOptions}>\r\n        <label htmlFor=\"sort\">Sort by:</label>\r\n        <select id=\"sort\" value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"rarity\">Rarity</option>\r\n        </select>\r\n      </div>\r\n      {inventory.length === 0 ? (\r\n        <p>Your inventory is empty.</p>\r\n      ) : (\r\n        <div className={styles.inventoryGrid}>\r\n          {sortedInventory.map((item, index) => {\r\n            const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\r\n            if (!itemData) return null;\r\n            const rarityClass = {\r\n              \"common\": styles.common,\r\n              \"uncommon\": styles.uncommon,\r\n              \"rare\": styles.rare,\r\n              \"very rare\": styles.veryRare,\r\n              \"mythical\": styles.mythical,\r\n              \"quest\": styles.quest\r\n            };\r\n            return (\r\n              <div \r\n                key={index} \r\n                className={`${styles.inventoryItem} ${rarityClass[itemData.rarity]}`}\r\n                onMouseEnter={(e) => setHoveredItem({ itemData, position: getTooltipPosition(e.currentTarget) })}\r\n                onMouseLeave={() => setHoveredItem(null)}\r\n                onClick={() => setSelectedItem(selectedItem === item ? null : item)}\r\n              >\r\n                {dropItem && dropItem.itemId === item.itemId ? (\r\n                  <div className={styles.dropOptions}>\r\n                    <p>Drop {dropItem.name} (x{inventory.find(i => i.itemId === dropItem.itemId)?.quantity || 1})</p>\r\n                    <button className={styles.dropOneButton} onClick={() => handleDropQuantity(1)}>Drop 1</button>\r\n                    <button className={styles.dropXButton} onClick={() => handleDropQuantity(prompt('Enter quantity to drop:', '1'))}>Drop X</button>\r\n                    <button className={styles.dropAllButton} onClick={() => handleDropQuantity(inventory.find(i => i.itemId === dropItem.itemId)?.quantity || 1)}>Drop All</button>\r\n                    <button className={styles.cancelButton} onClick={() => { setDropItem(null); setSelectedItem(null); }}>Cancel</button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <img src={`http://localhost:5000/assets/images/items/${itemData.image}`} alt={itemData.name} className={styles.itemImage} />\r\n                    <p>{itemData.name} (x{item.quantity})</p>\r\n                    {selectedItem && selectedItem.itemId === item.itemId && !dropItem && (\r\n                      <div>\r\n                        {itemData.type === \"weapon\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"armor\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"jewelry\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"food\" && (\r\n                          <>\r\n                            <button className={styles.eatButton} onClick={() => handleItemAction(item.itemId, 'use')}>Eat</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n                        \r\n                        {itemData.type === \"potion\" && (\r\n                          <>\r\n                            <button className={styles.drinkButton} onClick={() => handleItemAction(item.itemId, 'use')}>Drink</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n                        \r\n                        {itemData.type === \"quest\" ? (\r\n                          <button className={styles.questButton}>Quest Item</button>\r\n                        ) : (itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\") && (\r\n                          <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {hoveredItem && hoveredItem.itemId === item.itemId && (\r\n                  <div className={styles.tooltip}>\r\n                    <p><strong>{hoveredItem.name}</strong></p>\r\n                    <p>{hoveredItem.description}</p>\r\n                    {hoveredItem.attackBoost !== undefined && hoveredItem.attackBoost !== 0 && <p>Attack Boost: {hoveredItem.attackBoost}</p>}\r\n                    {hoveredItem.defenceBoost !== undefined && hoveredItem.defenceBoost !== 0 && <p>Defence Boost: {hoveredItem.defenceBoost}</p>}\r\n                    {hoveredItem.effect && hoveredItem.effect.heal && <p>Heal: {hoveredItem.effect.heal}</p>}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}