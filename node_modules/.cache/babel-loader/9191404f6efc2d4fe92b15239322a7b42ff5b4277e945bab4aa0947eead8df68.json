{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\enemy\\\\enemy.js\",\n  _s = $RefreshSig$();\n// /components/enemy/enemy.js\nimport styles from './enemy.module.css';\nimport React, { useEffect, useState } from 'react';\nimport worldLocations from '../worldmap/worldLocations.json';\nimport enemyConfig from './enemyConfig.json';\nimport modifiersConfig from './modifiers.json';\nimport Combat from '../combat/combat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Enemy = ({\n  locationId,\n  onStartCombat\n}) => {\n  _s();\n  const [enemies, setEnemies] = useState([]);\n  useEffect(() => {\n    if (locationId) {\n      spawnEnemies(locationId);\n    }\n  }, [locationId]);\n  const spawnEnemies = locationId => {\n    const location = worldLocations.find(loc => loc.id === locationId);\n    if (!location) return;\n    const {\n      enemies: enemyTypes,\n      amount\n    } = location;\n    let spawnedEnemies = [];\n    const enemyCount = Math.ceil(Math.random() * amount); // Random count between 1 and max amount\n\n    for (let i = 0; i < enemyCount; i++) {\n      const randomEnemyType = enemyTypes[Math.floor(Math.random() * enemyTypes.length)];\n      let enemy = {\n        type: randomEnemyType,\n        ...enemyConfig[randomEnemyType]\n      };\n\n      // Randomly assign modifiers\n      const modifierChance = Math.random();\n      if (modifierChance < 0.1) {\n        // 10% chance to get a modifier\n        const randomModifierKey = Object.keys(modifiersConfig)[Math.floor(Math.random() * Object.keys(modifiersConfig).length)];\n        const modifier = modifiersConfig[randomModifierKey];\n        enemy = {\n          ...enemy,\n          type: `${modifier.name} ${enemy.type}`,\n          level: enemy.level * modifier.levelMultiplier,\n          health: enemy.health * modifier.hpMultiplier,\n          damage: enemy.damage * modifier.damageMultiplier,\n          experience: enemy.experience * modifier.experienceMultiplier,\n          maxHit: enemy.maxHit * modifier.maxHitMultiplier,\n          specialTag: modifier.name\n        };\n      }\n      spawnedEnemies.push(enemy);\n    }\n    setEnemies(spawnedEnemies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.enemyContainer,\n    children: enemies.map((enemy, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.enemy,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: enemy.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000${enemy.image}`,\n        alt: enemy.type,\n        onError: e => {\n          e.target.src = 'http://localhost:5000/assets/images/enemies/fallback.png';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Health: \", enemy.health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Damage: \", enemy.damage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Level: \", enemy.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), enemy.specialTag && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.specialTag,\n        children: enemy.specialTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onStartCombat(enemy),\n        children: \"Start Combat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Enemy, \"O80PhzVSF/eAooV4KU5e4YcvI/A=\");\n_c = Enemy;\nexport default Enemy;\nvar _c;\n$RefreshReg$(_c, \"Enemy\");","map":{"version":3,"names":["styles","React","useEffect","useState","worldLocations","enemyConfig","modifiersConfig","Combat","jsxDEV","_jsxDEV","Enemy","locationId","onStartCombat","_s","enemies","setEnemies","spawnEnemies","location","find","loc","id","enemyTypes","amount","spawnedEnemies","enemyCount","Math","ceil","random","i","randomEnemyType","floor","length","enemy","type","modifierChance","randomModifierKey","Object","keys","modifier","name","level","levelMultiplier","health","hpMultiplier","damage","damageMultiplier","experience","experienceMultiplier","maxHit","maxHitMultiplier","specialTag","push","className","enemyContainer","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","onError","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/enemy/enemy.js"],"sourcesContent":["// /components/enemy/enemy.js\r\nimport styles from './enemy.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport worldLocations from '../worldmap/worldLocations.json';\r\nimport enemyConfig from './enemyConfig.json';\r\nimport modifiersConfig from './modifiers.json';\r\nimport Combat from '../combat/combat';\r\n\r\nconst Enemy = ({ locationId, onStartCombat }) => {\r\n    const [enemies, setEnemies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (locationId) {\r\n            spawnEnemies(locationId);\r\n        }\r\n    }, [locationId]);\r\n\r\n    const spawnEnemies = (locationId) => {\r\n        const location = worldLocations.find(loc => loc.id === locationId);\r\n        if (!location) return;\r\n\r\n        const { enemies: enemyTypes, amount } = location;\r\n        let spawnedEnemies = [];\r\n        const enemyCount = Math.ceil(Math.random() * amount); // Random count between 1 and max amount\r\n\r\n        for (let i = 0; i < enemyCount; i++) {\r\n            const randomEnemyType = enemyTypes[Math.floor(Math.random() * enemyTypes.length)];\r\n            let enemy = { type: randomEnemyType, ...enemyConfig[randomEnemyType] };\r\n\r\n            // Randomly assign modifiers\r\n            const modifierChance = Math.random();\r\n            if (modifierChance < 0.1) { // 10% chance to get a modifier\r\n                const randomModifierKey = Object.keys(modifiersConfig)[Math.floor(Math.random() * Object.keys(modifiersConfig).length)];\r\n                const modifier = modifiersConfig[randomModifierKey];\r\n                enemy = {\r\n                    ...enemy,\r\n                    type: `${modifier.name} ${enemy.type}`,\r\n                    level: enemy.level * modifier.levelMultiplier,\r\n                    health: enemy.health * modifier.hpMultiplier,\r\n                    damage: enemy.damage * modifier.damageMultiplier,\r\n                    experience: enemy.experience * modifier.experienceMultiplier,\r\n                    maxHit: enemy.maxHit * modifier.maxHitMultiplier,\r\n                    specialTag: modifier.name\r\n                };\r\n            }\r\n\r\n            spawnedEnemies.push(enemy);\r\n        }\r\n\r\n        setEnemies(spawnedEnemies);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.enemyContainer}>\r\n            {enemies.map((enemy, index) => (\r\n                <div key={index} className={styles.enemy}>\r\n                    <h3>{enemy.type}</h3>\r\n                    <img src={`http://localhost:5000${enemy.image}`} alt={enemy.type} onError={(e) => { e.target.src = 'http://localhost:5000/assets/images/enemies/fallback.png'; }} />\r\n                    <p>Health: {enemy.health}</p>\r\n                    <p>Damage: {enemy.damage}</p>\r\n                    <p>Level: {enemy.level}</p>\r\n                    {enemy.specialTag && <p className={styles.specialTag}>{enemy.specialTag}</p>}\r\n                    <button onClick={() => onStartCombat(enemy)}>Start Combat</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Enemy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}