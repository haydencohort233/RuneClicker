{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\player\\\\player.js\",\n  _s = $RefreshSig$();\n// Player.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './player.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player({\n  initialHP = 100,\n  userId\n}) {\n  _s();\n  // Define player state including HP, inventory, and bank\n  const [player, setPlayer] = useState({\n    username: '',\n    hp: initialHP,\n    maxHP: initialHP,\n    inventory: [],\n    bank: [],\n    maxInventorySpace: 10\n  });\n  useEffect(() => {\n    if (userId) {\n      console.log('Fetching player data for userId:', userId);\n      // Fetch player data from the backend\n      axios.get(`http://localhost:5000/api/player/${userId}`).then(response => {\n        console.log('Player data fetched:', response.data); // Log the fetched data for verification\n        const {\n          username,\n          hp,\n          maxHP,\n          inventory,\n          bank,\n          maxInventorySpace\n        } = response.data;\n\n        // Setting player data\n        setPlayer({\n          username,\n          currency,\n          hp,\n          maxHP,\n          inventory: inventory ? JSON.parse(inventory) : [],\n          bank: bank ? JSON.parse(bank) : [],\n          maxInventorySpace\n        });\n        console.log(`Logged in as: ${username}`);\n      }).catch(error => {\n        console.error('Failed to fetch player data:', error);\n        console.log('Failed to fetch username');\n      });\n    }\n  }, [userId]);\n\n  // Function to add an item to inventory\n  const addItemToInventory = item => {\n    if (player.inventory.length < player.maxInventorySpace) {\n      setPlayer(prevPlayer => ({\n        ...prevPlayer,\n        inventory: [...prevPlayer.inventory, item]\n      }));\n    } else {\n      console.log('Inventory is full. Item has been added to the bank.');\n      addItemToBank(item);\n    }\n  };\n\n  // Function to add an item to the bank\n  const addItemToBank = item => {\n    setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      bank: [...prevPlayer.bank, item]\n    }));\n  };\n\n  // Function to remove an item from inventory and add it to the bank\n  const moveItemToBank = itemIndex => {\n    const item = player.inventory[itemIndex];\n    setPlayer(prevPlayer => {\n      const newInventory = [...prevPlayer.inventory];\n      newInventory.splice(itemIndex, 1);\n      return {\n        ...prevPlayer,\n        inventory: newInventory,\n        bank: [...prevPlayer.bank, item]\n      };\n    });\n  };\n\n  // Function to move an item from the bank to inventory\n  const moveItemToInventory = itemIndex => {\n    if (player.inventory.length < player.maxInventorySpace) {\n      const item = player.bank[itemIndex];\n      setPlayer(prevPlayer => {\n        const newBank = [...prevPlayer.bank];\n        newBank.splice(itemIndex, 1);\n        return {\n          ...prevPlayer,\n          inventory: [...prevPlayer.inventory, item],\n          bank: newBank\n        };\n      });\n    } else {\n      console.log('Inventory is full. Cannot retrieve item from bank.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), player.username ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", player.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"HP: \", player.hp, \"/\", player.maxHP]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Inventory (\", player.inventory.length, \"/\", player.maxInventorySpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.inventoryList,\n      children: player.inventory.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => moveItemToBank(index),\n          children: \"Move to Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Bank (\", player.bank.length, \" items)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.bankList,\n      children: player.bank.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => moveItemToInventory(index),\n          children: \"Retrieve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"l86anL3W1+sw6pqsrVdPbV+eTpg=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","axios","styles","jsxDEV","_jsxDEV","Player","initialHP","userId","_s","player","setPlayer","username","hp","maxHP","inventory","bank","maxInventorySpace","console","log","get","then","response","data","currency","JSON","parse","catch","error","addItemToInventory","item","length","prevPlayer","addItemToBank","moveItemToBank","itemIndex","newInventory","splice","moveItemToInventory","newBank","className","playerContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","inventoryList","map","index","name","onClick","bankList","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/player/player.js"],"sourcesContent":["// Player.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './player.module.css';\r\n\r\nfunction Player({ initialHP = 100, userId }) {\r\n  // Define player state including HP, inventory, and bank\r\n  const [player, setPlayer] = useState({\r\n    username: '',\r\n    hp: initialHP,\r\n    maxHP: initialHP,\r\n    inventory: [],\r\n    bank: [],\r\n    maxInventorySpace: 10,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      console.log('Fetching player data for userId:', userId);\r\n      // Fetch player data from the backend\r\n      axios.get(`http://localhost:5000/api/player/${userId}`)\r\n        .then((response) => {\r\n          console.log('Player data fetched:', response.data); // Log the fetched data for verification\r\n          const { username, hp, maxHP, inventory, bank, maxInventorySpace } = response.data;\r\n  \r\n          // Setting player data\r\n          setPlayer({\r\n            username,\r\n            currency,\r\n            hp,\r\n            maxHP,\r\n            inventory: inventory ? JSON.parse(inventory) : [],\r\n            bank: bank ? JSON.parse(bank) : [],\r\n            maxInventorySpace,\r\n          });\r\n  \r\n          console.log(`Logged in as: ${username}`);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Failed to fetch player data:', error);\r\n          console.log('Failed to fetch username');\r\n        });\r\n    }\r\n  }, [userId]);  \r\n\r\n  // Function to add an item to inventory\r\n  const addItemToInventory = (item) => {\r\n    if (player.inventory.length < player.maxInventorySpace) {\r\n      setPlayer((prevPlayer) => ({\r\n        ...prevPlayer,\r\n        inventory: [...prevPlayer.inventory, item],\r\n      }));\r\n    } else {\r\n      console.log('Inventory is full. Item has been added to the bank.');\r\n      addItemToBank(item);\r\n    }\r\n  };\r\n\r\n  // Function to add an item to the bank\r\n  const addItemToBank = (item) => {\r\n    setPlayer((prevPlayer) => ({\r\n      ...prevPlayer,\r\n      bank: [...prevPlayer.bank, item],\r\n    }));\r\n  };\r\n\r\n  // Function to remove an item from inventory and add it to the bank\r\n  const moveItemToBank = (itemIndex) => {\r\n    const item = player.inventory[itemIndex];\r\n    setPlayer((prevPlayer) => {\r\n      const newInventory = [...prevPlayer.inventory];\r\n      newInventory.splice(itemIndex, 1);\r\n      return {\r\n        ...prevPlayer,\r\n        inventory: newInventory,\r\n        bank: [...prevPlayer.bank, item],\r\n      };\r\n    });\r\n  };\r\n\r\n  // Function to move an item from the bank to inventory\r\n  const moveItemToInventory = (itemIndex) => {\r\n    if (player.inventory.length < player.maxInventorySpace) {\r\n      const item = player.bank[itemIndex];\r\n      setPlayer((prevPlayer) => {\r\n        const newBank = [...prevPlayer.bank];\r\n        newBank.splice(itemIndex, 1);\r\n        return {\r\n          ...prevPlayer,\r\n          inventory: [...prevPlayer.inventory, item],\r\n          bank: newBank,\r\n        };\r\n      });\r\n    } else {\r\n      console.log('Inventory is full. Cannot retrieve item from bank.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.playerContainer}>\r\n      <h2>Player Stats</h2>\r\n      {player.username ? <p>Username: {player.username}</p> : <p>Failed to fetch username</p>}\r\n      <p>HP: {player.hp}/{player.maxHP}</p>\r\n\r\n      <h3>Inventory ({player.inventory.length}/{player.maxInventorySpace})</h3>\r\n      <ul className={styles.inventoryList}>\r\n        {player.inventory.map((item, index) => (\r\n          <li key={index}>\r\n            {item.name} \r\n            <button onClick={() => moveItemToBank(index)}>Move to Bank</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Bank ({player.bank.length} items)</h3>\r\n      <ul className={styles.bankList}>\r\n        {player.bank.map((item, index) => (\r\n          <li key={index}>\r\n            {item.name} \r\n            <button onClick={() => moveItemToInventory(index)}>Retrieve</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}