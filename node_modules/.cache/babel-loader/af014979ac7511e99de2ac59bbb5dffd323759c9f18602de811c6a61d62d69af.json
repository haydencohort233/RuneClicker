{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\banking\\\\banking.js\",\n  _s = $RefreshSig$();\n// /components/banking/banking.js\nimport React, { useCallback, useState, useEffect } from 'react';\nimport styles from './banking.module.css';\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\nfunction Banking({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [contextMenu, setContextMenu] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    item: null\n  });\n  const handleDepositItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedInventory = [...prevState.inventory];\n      const updatedBank = [...prevState.bank];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        if (updatedInventory[itemIndex].quantity >= quantity) {\n          // Handle inventory reduction\n          if (updatedInventory[itemIndex].quantity > quantity) {\n            updatedInventory[itemIndex].quantity -= quantity;\n          } else {\n            updatedInventory.splice(itemIndex, 1);\n          }\n\n          // Handle bank addition\n          const bankItemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n          if (bankItemIndex > -1) {\n            updatedBank[bankItemIndex].quantity = Math.min(updatedBank[bankItemIndex].quantity + quantity, 65535 // Assuming stackable limit\n            );\n          } else if (updatedBank.length < gameState.bankSpace) {\n            updatedBank.push({\n              ...item,\n              quantity\n            });\n          } else {\n            alert('Bank is full! Cannot deposit more items.');\n            return prevState;\n          }\n        } else {\n          alert('Not enough items to deposit that amount.');\n          return prevState;\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedBank = [...prevState.bank];\n      const updatedInventory = [...prevState.inventory];\n      const itemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        // Handle bank reduction\n        if (updatedBank[itemIndex].quantity > quantity) {\n          updatedBank[itemIndex].quantity -= quantity;\n        } else {\n          updatedBank.splice(itemIndex, 1);\n          // Dismiss options if the item is fully withdrawn from the bank\n          setSelectedItem(null);\n        }\n\n        // Handle inventory addition\n        const inventoryItemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n        if (inventoryItemIndex > -1) {\n          // Add to existing stack if it exists, regardless of inventory space\n          updatedInventory[inventoryItemIndex].quantity = Math.min(updatedInventory[inventoryItemIndex].quantity + quantity, 65535);\n        } else {\n          // Only add a new item if there is space in the inventory\n          if (updatedInventory.length >= prevState.maxInventorySpace) {\n            alert('Inventory is full! Cannot withdraw more items.');\n            return prevState;\n          }\n          updatedInventory.push({\n            ...item,\n            quantity\n          });\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  const getBankUpgradeCost = () => {\n    const {\n      initialCost,\n      costIncrementMultiplier\n    } = bankUpgradeConfig;\n    return Math.floor(initialCost * Math.pow(costIncrementMultiplier, gameState.bankSpacesBought));\n  };\n  const purchaseBankSpace = () => {\n    const currentCost = getBankUpgradeCost();\n    if (gameState.currency >= currentCost) {\n      if (gameState.bankSpace < MAX_BANK_SPACE) {\n        setGameState(prevState => ({\n          ...prevState,\n          currency: prevState.currency - currentCost,\n          bankSpace: Math.min(prevState.bankSpace + 10, MAX_BANK_SPACE),\n          // Example increment\n          bankSpacesBought: prevState.bankSpacesBought + 1\n        }));\n      } else {\n        alert('Maximum bank space reached.');\n      }\n    } else {\n      alert('Not enough currency to purchase more bank space.');\n    }\n  };\n  const resetBankSpace = () => {\n    setGameState(prevState => ({\n      ...prevState,\n      bankSpace: bankUpgradeConfig.initialBankSpaces,\n      bankSpacesBought: 0\n    }));\n  };\n  const handleRightClick = (event, item) => {\n    event.preventDefault();\n    setContextMenu({\n      visible: true,\n      x: event.clientX,\n      y: event.clientY,\n      item\n    });\n  };\n  const handleContextMenuOption = option => {\n    if (contextMenu.item) {\n      if (option === \"Deposit 1\") {\n        handleDepositItem(contextMenu.item, 1);\n      } else if (option === \"Deposit X\") {\n        const amount = parseInt(prompt(\"Enter the amount to deposit:\"), 10);\n        if (!isNaN(amount) && amount > 0) {\n          handleDepositItem(contextMenu.item, amount);\n        }\n      } else if (option === \"Deposit All\") {\n        handleDepositItem(contextMenu.item, contextMenu.item.quantity);\n      }\n    }\n    setContextMenu({\n      visible: false,\n      x: 0,\n      y: 0,\n      item: null\n    });\n  };\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (contextMenu.visible) {\n        setContextMenu({\n          visible: false,\n          x: 0,\n          y: 0,\n          item: null\n        });\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [contextMenu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bankingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.bankingTitle,\n      children: [\"Bank (\", gameState.bank.length, \" / \", gameState.bankSpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bankingSlots,\n      children: gameState.bank.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bankSlot,\n        onClick: () => setSelectedItem(item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/assets/images/items/${item.image}`,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(x\", item.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: selectedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 1),\n        children: \"Withdraw 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 5),\n        children: \"Withdraw 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, selectedItem.quantity),\n        children: \"Withdraw All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedItem(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bankUpgradeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upgrade Bank Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: purchaseBankSpace,\n        className: styles.upgradeButton,\n        children: [\"Buy More Bank Space (Cost: \", getBankUpgradeCost(), \" Currency)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetBankSpace,\n        className: `${styles.upgradeButton} ${styles.resetButton}`,\n        children: \"Reset Bank Space [Dev]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.inventoryTitle,\n      children: [\"Inventory (\", gameState.inventory.length, \" / \", gameState.maxInventorySpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventorySlots,\n      children: gameState.inventory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inventorySlot,\n        onClick: () => handleDepositItem(item, 1),\n        onContextMenu: e => handleRightClick(e, item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/assets/images/items/${item.image}`,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(x\", item.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), contextMenu.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contextMenu,\n      style: {\n        top: contextMenu.y,\n        left: contextMenu.x,\n        position: 'absolute'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleContextMenuOption(\"Deposit 1\"),\n        children: \"Deposit 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleContextMenuOption(\"Deposit X\"),\n        children: \"Deposit X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleContextMenuOption(\"Deposit All\"),\n        children: \"Deposit All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Banking, \"TS3iKn+T9BKa2bHzfsEt73I/6Do=\");\n_c = Banking;\nexport default Banking;\nvar _c;\n$RefreshReg$(_c, \"Banking\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","styles","bankUpgradeConfig","jsxDEV","_jsxDEV","MAX_BANK_SPACE","maxBankSpaces","Banking","gameState","setGameState","_s","selectedItem","setSelectedItem","contextMenu","setContextMenu","visible","x","y","item","handleDepositItem","quantity","prevState","updatedInventory","inventory","updatedBank","bank","itemIndex","findIndex","i","itemId","splice","bankItemIndex","Math","min","length","bankSpace","push","alert","handleWithdrawItem","inventoryItemIndex","maxInventorySpace","getBankUpgradeCost","initialCost","costIncrementMultiplier","floor","pow","bankSpacesBought","purchaseBankSpace","currentCost","currency","resetBankSpace","initialBankSpaces","handleRightClick","event","preventDefault","clientX","clientY","handleContextMenuOption","option","amount","parseInt","prompt","isNaN","handleClickOutside","document","addEventListener","removeEventListener","className","bankingContainer","children","bankingTitle","fileName","_jsxFileName","lineNumber","columnNumber","bankingSlots","map","index","bankSlot","onClick","src","image","alt","name","itemActions","bankUpgradeContainer","upgradeButton","resetButton","inventoryTitle","inventorySlots","inventorySlot","onContextMenu","e","style","top","left","position","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/banking/banking.js"],"sourcesContent":["// /components/banking/banking.js\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport styles from './banking.module.css';\r\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\r\n\r\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\r\n\r\nfunction Banking({ gameState, setGameState }) {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [contextMenu, setContextMenu] = useState({ visible: false, x: 0, y: 0, item: null });\r\n\r\n  const handleDepositItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedInventory = [...prevState.inventory];\r\n      const updatedBank = [...prevState.bank];\r\n\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        if (updatedInventory[itemIndex].quantity >= quantity) {\r\n          // Handle inventory reduction\r\n          if (updatedInventory[itemIndex].quantity > quantity) {\r\n            updatedInventory[itemIndex].quantity -= quantity;\r\n          } else {\r\n            updatedInventory.splice(itemIndex, 1);\r\n          }\r\n\r\n          // Handle bank addition\r\n          const bankItemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n          if (bankItemIndex > -1) {\r\n            updatedBank[bankItemIndex].quantity = Math.min(\r\n              updatedBank[bankItemIndex].quantity + quantity,\r\n              65535 // Assuming stackable limit\r\n            );\r\n          } else if (updatedBank.length < gameState.bankSpace) {\r\n            updatedBank.push({ ...item, quantity });\r\n          } else {\r\n            alert('Bank is full! Cannot deposit more items.');\r\n            return prevState;\r\n          }\r\n        } else {\r\n          alert('Not enough items to deposit that amount.');\r\n          return prevState;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedBank = [...prevState.bank];\r\n      const updatedInventory = [...prevState.inventory];\r\n\r\n      const itemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        // Handle bank reduction\r\n        if (updatedBank[itemIndex].quantity > quantity) {\r\n          updatedBank[itemIndex].quantity -= quantity;\r\n        } else {\r\n          updatedBank.splice(itemIndex, 1);\r\n          // Dismiss options if the item is fully withdrawn from the bank\r\n          setSelectedItem(null);\r\n        }\r\n\r\n        // Handle inventory addition\r\n        const inventoryItemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n        if (inventoryItemIndex > -1) {\r\n          // Add to existing stack if it exists, regardless of inventory space\r\n          updatedInventory[inventoryItemIndex].quantity = Math.min(\r\n            updatedInventory[inventoryItemIndex].quantity + quantity,\r\n            65535\r\n          );\r\n        } else {\r\n          // Only add a new item if there is space in the inventory\r\n          if (updatedInventory.length >= prevState.maxInventorySpace) {\r\n            alert('Inventory is full! Cannot withdraw more items.');\r\n            return prevState;\r\n          }\r\n          updatedInventory.push({ ...item, quantity });\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  const getBankUpgradeCost = () => {\r\n    const { initialCost, costIncrementMultiplier } = bankUpgradeConfig;\r\n    return Math.floor(initialCost * Math.pow(costIncrementMultiplier, gameState.bankSpacesBought));\r\n  };\r\n\r\n  const purchaseBankSpace = () => {\r\n    const currentCost = getBankUpgradeCost();\r\n\r\n    if (gameState.currency >= currentCost) {\r\n      if (gameState.bankSpace < MAX_BANK_SPACE) {\r\n        setGameState((prevState) => ({\r\n          ...prevState,\r\n          currency: prevState.currency - currentCost,\r\n          bankSpace: Math.min(prevState.bankSpace + 10, MAX_BANK_SPACE), // Example increment\r\n          bankSpacesBought: prevState.bankSpacesBought + 1,\r\n        }));\r\n      } else {\r\n        alert('Maximum bank space reached.');\r\n      }\r\n    } else {\r\n      alert('Not enough currency to purchase more bank space.');\r\n    }\r\n  };\r\n\r\n  const resetBankSpace = () => {\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      bankSpace: bankUpgradeConfig.initialBankSpaces,\r\n      bankSpacesBought: 0,\r\n    }));\r\n  };\r\n\r\n  const handleRightClick = (event, item) => {\r\n    event.preventDefault();\r\n    setContextMenu({\r\n      visible: true,\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n      item,\r\n    });\r\n  };\r\n\r\n  const handleContextMenuOption = (option) => {\r\n    if (contextMenu.item) {\r\n      if (option === \"Deposit 1\") {\r\n        handleDepositItem(contextMenu.item, 1);\r\n      } else if (option === \"Deposit X\") {\r\n        const amount = parseInt(prompt(\"Enter the amount to deposit:\"), 10);\r\n        if (!isNaN(amount) && amount > 0) {\r\n          handleDepositItem(contextMenu.item, amount);\r\n        }\r\n      } else if (option === \"Deposit All\") {\r\n        handleDepositItem(contextMenu.item, contextMenu.item.quantity);\r\n      }\r\n    }\r\n    setContextMenu({ visible: false, x: 0, y: 0, item: null });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      if (contextMenu.visible) {\r\n        setContextMenu({ visible: false, x: 0, y: 0, item: null });\r\n      }\r\n    };\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, [contextMenu]);\r\n\r\n  return (\r\n    <div className={styles.bankingContainer}>\r\n      <h2 className={styles.bankingTitle}>Bank ({gameState.bank.length} / {gameState.bankSpace})</h2>\r\n      <div className={styles.bankingSlots}>\r\n        {gameState.bank.map((item, index) => (\r\n          <div key={index} className={styles.bankSlot} onClick={() => setSelectedItem(item)}>\r\n            <img src={`http://localhost:5000/assets/images/items/${item.image}`} alt={item.name} />\r\n            <p>(x{item.quantity})</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedItem && (\r\n        <div className={styles.itemActions}>\r\n          <h4>{selectedItem.name}</h4>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 1)}>Withdraw 1</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 5)}>Withdraw 5</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, selectedItem.quantity)}>Withdraw All</button>\r\n          <button onClick={() => setSelectedItem(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      <div className={styles.bankUpgradeContainer}>\r\n        <h3>Upgrade Bank Space</h3>\r\n        <button onClick={purchaseBankSpace} className={styles.upgradeButton}>\r\n          Buy More Bank Space (Cost: {getBankUpgradeCost()} Currency)\r\n        </button>\r\n        <button onClick={resetBankSpace} className={`${styles.upgradeButton} ${styles.resetButton}`}>Reset Bank Space [Dev]</button>\r\n      </div>\r\n      <h2 className={styles.inventoryTitle}>Inventory ({gameState.inventory.length} / {gameState.maxInventorySpace})</h2>\r\n      <div className={styles.inventorySlots}>\r\n        {gameState.inventory.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className={styles.inventorySlot}\r\n            onClick={() => handleDepositItem(item, 1)}\r\n            onContextMenu={(e) => handleRightClick(e, item)}\r\n          >\r\n            <img src={`http://localhost:5000/assets/images/items/${item.image}`} alt={item.name} />\r\n            <p>(x{item.quantity})</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {contextMenu.visible && (\r\n        <div\r\n          className={styles.contextMenu}\r\n          style={{ top: contextMenu.y, left: contextMenu.x, position: 'absolute' }}\r\n        >\r\n          <button onClick={() => handleContextMenuOption(\"Deposit 1\")}>Deposit 1</button>\r\n          <button onClick={() => handleContextMenuOption(\"Deposit X\")}>Deposit X</button>\r\n          <button onClick={() => handleContextMenuOption(\"Deposit All\")}>Deposit All</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}