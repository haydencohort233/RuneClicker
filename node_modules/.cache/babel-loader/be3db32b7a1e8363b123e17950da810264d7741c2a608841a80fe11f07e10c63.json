{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\achievements\\\\achievements.js\",\n  _s = $RefreshSig$();\n// /src/components/achievements/achievements.js\nimport React, { useEffect, useState } from 'react';\nimport styles from './achievements.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Achievements({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [achievements, setAchievements] = useState([]);\n\n  // Define basic achievements\n  const achievementList = [{\n    id: 1,\n    name: 'First Steps',\n    condition: gs => gs.currency >= 100,\n    description: 'Earn 100 currency.'\n  }, {\n    id: 2,\n    name: 'Builder',\n    condition: gs => gs.buildings && Object.values(gs.buildings).some(b => b.count >= 1),\n    description: 'Buy your first building.'\n  }, {\n    id: 3,\n    name: 'Collector',\n    condition: gs => gs.currency >= 1000,\n    description: 'Earn 1,000 currency.'\n  }, {\n    id: 4,\n    name: 'Real Estate Mogul',\n    condition: gs => gs.buildings && Object.values(gs.buildings).reduce((acc, b) => acc + b.count, 0) >= 10,\n    description: 'Own 10 buildings.'\n  }, {\n    id: 5,\n    name: 'Millionaire',\n    condition: gs => gs.currency >= 1000000,\n    description: 'Earn 1,000,000 currency.'\n  }];\n  useEffect(() => {\n    // Check for completed achievements\n    const unlockedAchievements = achievementList.filter(achievement => achievement.condition(gameState));\n    setAchievements(unlockedAchievements);\n\n    // Update gameState with unlocked achievements\n    setGameState(prevState => ({\n      ...prevState,\n      achievements: unlockedAchievements.map(achievement => achievement.id)\n    }));\n  }, [gameState, setGameState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.achievementsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Achievements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.achievementList,\n      children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.achievementItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: achievement.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: achievement.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, achievement.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Achievements, \"nKMvePRuBynotSBsIfo1WeQZI2Q=\");\n_c = Achievements;\nexport default Achievements;\nvar _c;\n$RefreshReg$(_c, \"Achievements\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Achievements","gameState","setGameState","_s","achievements","setAchievements","achievementList","id","name","condition","gs","currency","description","buildings","Object","values","some","b","count","reduce","acc","unlockedAchievements","filter","achievement","prevState","map","className","achievementsContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","achievementItem","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/achievements/achievements.js"],"sourcesContent":["// /src/components/achievements/achievements.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from './achievements.module.css';\r\n\r\nfunction Achievements({ gameState, setGameState }) {\r\n  const [achievements, setAchievements] = useState([]);\r\n\r\n  // Define basic achievements\r\n  const achievementList = [\r\n    { id: 1, name: 'First Steps', condition: (gs) => gs.currency >= 100, description: 'Earn 100 currency.' },\r\n    { id: 2, name: 'Builder', condition: (gs) => gs.buildings && Object.values(gs.buildings).some((b) => b.count >= 1), description: 'Buy your first building.' },\r\n    { id: 3, name: 'Collector', condition: (gs) => gs.currency >= 1000, description: 'Earn 1,000 currency.' },\r\n    { id: 4, name: 'Real Estate Mogul', condition: (gs) => gs.buildings && Object.values(gs.buildings).reduce((acc, b) => acc + b.count, 0) >= 10, description: 'Own 10 buildings.' },\r\n    { id: 5, name: 'Millionaire', condition: (gs) => gs.currency >= 1000000, description: 'Earn 1,000,000 currency.' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Check for completed achievements\r\n    const unlockedAchievements = achievementList.filter((achievement) => achievement.condition(gameState));\r\n    setAchievements(unlockedAchievements);\r\n\r\n    // Update gameState with unlocked achievements\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      achievements: unlockedAchievements.map((achievement) => achievement.id),\r\n    }));\r\n  }, [gameState, setGameState]);\r\n\r\n  return (\r\n    <div className={styles.achievementsContainer}>\r\n      <h2>Achievements</h2>\r\n      <div className={styles.achievementList}>\r\n        {achievements.map((achievement) => (\r\n          <div key={achievement.id} className={styles.achievementItem}>\r\n            <h3>{achievement.name}</h3>\r\n            <p>{achievement.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Achievements;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}