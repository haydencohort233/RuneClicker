{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\users\\\\Logout.js\";\n// /src/components/users/Logout.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logout({\n  setUserId,\n  gameState,\n  setGameState\n}) {\n  const handleLogout = async () => {\n    // Save game state to server before logging out\n    try {\n      const response = await fetch('http://localhost:5000/api/save-game', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: gameState.userId,\n          gameState\n        })\n      });\n      if (response.ok) {\n        console.log('Game state saved successfully before logout');\n      } else {\n        console.error('Failed to save game state before logout');\n      }\n    } catch (error) {\n      console.error('Failed to save game state before logout:', error);\n    }\n\n    // Clear user ID and game state\n    setUserId(null);\n    if (setGameState) {\n      setGameState({\n        currency: 0,\n        buildings: {},\n        achievements: {},\n        last_active: null,\n        clicks: 0,\n        currentLocation: \"spawn\",\n        travel: null\n      });\n    }\n    console.log('User logged out successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLogout,\n    className: \"logout-button\",\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Logout","setUserId","gameState","setGameState","handleLogout","response","fetch","method","headers","body","JSON","stringify","userId","ok","console","log","error","currency","buildings","achievements","last_active","clicks","currentLocation","travel","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/users/Logout.js"],"sourcesContent":["// /src/components/users/Logout.js\r\nimport React from 'react';\r\n\r\nfunction Logout({ setUserId, gameState, setGameState }) {\r\n  const handleLogout = async () => {\r\n    // Save game state to server before logging out\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/save-game', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: gameState.userId,\r\n          gameState,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Game state saved successfully before logout');\r\n      } else {\r\n        console.error('Failed to save game state before logout');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save game state before logout:', error);\r\n    }\r\n\r\n    // Clear user ID and game state\r\n    setUserId(null);\r\n    if (setGameState) {\r\n      setGameState({\r\n        currency: 0,\r\n        buildings: {},\r\n        achievements: {},\r\n        last_active: null,\r\n        clicks: 0,\r\n        currentLocation: \"spawn\",\r\n        travel: null,\r\n      });\r\n    }\r\n    console.log('User logged out successfully');\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleLogout} className=\"logout-button\">\r\n      Logout\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EACtD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAEV,SAAS,CAACU,MAAM;UACxBV;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACQ,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC5D,CAAC,MAAM;QACLD,OAAO,CAACE,KAAK,CAAC,yCAAyC,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;;IAEA;IACAf,SAAS,CAAC,IAAI,CAAC;IACf,IAAIE,YAAY,EAAE;MAChBA,YAAY,CAAC;QACXc,QAAQ,EAAE,CAAC;QACXC,SAAS,EAAE,CAAC,CAAC;QACbC,YAAY,EAAE,CAAC,CAAC;QAChBC,WAAW,EAAE,IAAI;QACjBC,MAAM,EAAE,CAAC;QACTC,eAAe,EAAE,OAAO;QACxBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACAT,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC;EAED,oBACEhB,OAAA;IAAQyB,OAAO,EAAEpB,YAAa;IAACqB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAAC;EAEzD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GA7CQ/B,MAAM;AA+Cf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}