{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\inventory\\\\inventory.js\";\n// /components/inventory/inventory.js\nimport React from 'react';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  inventory,\n  setPlayer\n}) {\n  // Function to use an item from inventory\n  const handleUseItem = itemId => {\n    const item = itemConfig.items.find(i => i.itemId === itemId);\n    if (!item) return;\n\n    // Handle item usage based on type\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\n      if (itemIndex >= 0) {\n        if (updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply item effect\n      let updatedPlayer = {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n      if (item.type === \"consumable\" && item.effect.heal) {\n        updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n      } else if (item.type === \"weapon\" && item.attackBoost) {\n        updatedPlayer.attackPower += item.attackBoost;\n      } else if (item.type === \"armor\" && item.defenseBoost) {\n        updatedPlayer.defencePower += item.defenseBoost;\n      }\n      return updatedPlayer;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), inventory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your inventory is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventoryGrid,\n      children: inventory.map((item, index) => {\n        const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n        if (!itemData) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inventoryItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/assets/images/items/${itemData.image}`,\n            alt: itemData.name,\n            className: styles.itemImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [itemData.name, \" (x\", item.quantity, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUseItem(item.itemId),\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","styles","itemConfig","jsxDEV","_jsxDEV","Inventory","inventory","setPlayer","handleUseItem","itemId","item","items","find","i","prevPlayer","updatedInventory","itemIndex","findIndex","quantity","splice","updatedPlayer","type","effect","heal","hitpoints","Math","min","maxHitPoints","attackBoost","attackPower","defenseBoost","defencePower","className","inventoryContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","length","inventoryGrid","map","index","itemData","inventoryItem","src","image","alt","name","itemImage","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/inventory/inventory.js"],"sourcesContent":["// /components/inventory/inventory.js\r\nimport React from 'react';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nfunction Inventory({ inventory, setPlayer }) {\r\n\r\n  // Function to use an item from inventory\r\n  const handleUseItem = (itemId) => {\r\n    const item = itemConfig.items.find((i) => i.itemId === itemId);\r\n    if (!item) return;\r\n\r\n    // Handle item usage based on type\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\r\n      if (itemIndex >= 0) {\r\n        if (updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply item effect\r\n      let updatedPlayer = { ...prevPlayer, inventory: updatedInventory };\r\n      if (item.type === \"consumable\" && item.effect.heal) {\r\n        updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n      } else if (item.type === \"weapon\" && item.attackBoost) {\r\n        updatedPlayer.attackPower += item.attackBoost;\r\n      } else if (item.type === \"armor\" && item.defenseBoost) {\r\n        updatedPlayer.defencePower += item.defenseBoost;\r\n      }\r\n\r\n      return updatedPlayer;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <h3>Inventory</h3>\r\n      {inventory.length === 0 ? (\r\n        <p>Your inventory is empty.</p>\r\n      ) : (\r\n        <div className={styles.inventoryGrid}>\r\n          {inventory.map((item, index) => {\r\n            const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\r\n            if (!itemData) return null;\r\n            return (\r\n              <div key={index} className={styles.inventoryItem}>\r\n                <img src={`http://localhost:5000/assets/images/items/${itemData.image}`} alt={itemData.name} className={styles.itemImage} />\r\n                <p>{itemData.name} (x{item.quantity})</p>\r\n                <button onClick={() => handleUseItem(item.itemId)}>Use</button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}