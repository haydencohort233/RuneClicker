{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\worldmap\\\\worldMap.js\",\n  _s = $RefreshSig$();\n// /components/worldmap/worldMap.js\nimport React, { useState } from 'react';\nimport styles from './worldMap.module.css';\nimport worldLocations from './worldLocations.json';\nimport mapIcon from '../../assets/images/icons/map.png';\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isMapOpen, setIsMapOpen] = useState(false);\n  const [hoveredLocation, setHoveredLocation] = useState(null);\n\n  // Toggle map visibility\n  const toggleMap = () => {\n    setIsMapOpen(prev => !prev);\n  };\n\n  // Handle traveling to a specific location\n  const travelToLocation = location => {\n    // Set travel state in gameState\n    setGameState(prevState => ({\n      ...prevState,\n      travel: {\n        destination: location.name,\n        timeRemaining: location.travelTime,\n        isTraveling: true\n      }\n    }));\n    setIsMapOpen(false); // Close the map after choosing a destination\n  };\n\n  // Handle mouse hover over a location\n  const handleMouseEnter = location => {\n    setHoveredLocation(location.id);\n  };\n  const handleMouseLeave = () => {\n    setHoveredLocation(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.worldMapContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMap,\n      className: styles.mapButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapIcon,\n        alt: \"Map\",\n        className: styles.mapIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isMapOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: worldMapImage,\n        alt: \"World Map\",\n        className: styles.mapImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.locationsContainer,\n        children: worldLocations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.locationMarker,\n            style: {\n              top: location.coordinates.top,\n              left: location.coordinates.left,\n              backgroundImage: `url('../../assets/images/worldmap/icons/marker.png')` // Updated marker path\n            },\n            onClick: () => travelToLocation(location),\n            onMouseEnter: () => handleMouseEnter(location),\n            onMouseLeave: handleMouseLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), hoveredLocation === location.id && location.hovered && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.hoveredImage,\n            style: {\n              top: location.hovered_coordinates.top,\n              left: location.hovered_coordinates.left,\n              backgroundImage: `url('../../assets/images/worldmap/hovered/${location.hovered}')` // Updated hovered image path\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)]\n        }, location.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMap,\n        className: styles.closeButton,\n        children: \"Close Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"tZsT/AJVKmCMLaVftGJJLIGWo2Q=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","styles","worldLocations","mapIcon","worldMapImage","jsxDEV","_jsxDEV","WorldMap","gameState","setGameState","_s","isMapOpen","setIsMapOpen","hoveredLocation","setHoveredLocation","toggleMap","prev","travelToLocation","location","prevState","travel","destination","name","timeRemaining","travelTime","isTraveling","handleMouseEnter","id","handleMouseLeave","className","worldMapContainer","children","onClick","mapButton","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","mapModal","mapImage","locationsContainer","map","locationMarker","style","top","coordinates","left","backgroundImage","onMouseEnter","onMouseLeave","hovered","hoveredImage","hovered_coordinates","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/worldmap/worldMap.js"],"sourcesContent":["// /components/worldmap/worldMap.js\r\nimport React, { useState } from 'react';\r\nimport styles from './worldMap.module.css';\r\nimport worldLocations from './worldLocations.json';\r\nimport mapIcon from '../../assets/images/icons/map.png';\r\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\r\n\r\nfunction WorldMap({ gameState, setGameState }) {\r\n  const [isMapOpen, setIsMapOpen] = useState(false);\r\n  const [hoveredLocation, setHoveredLocation] = useState(null);\r\n\r\n  // Toggle map visibility\r\n  const toggleMap = () => {\r\n    setIsMapOpen((prev) => !prev);\r\n  };\r\n\r\n  // Handle traveling to a specific location\r\n  const travelToLocation = (location) => {\r\n    // Set travel state in gameState\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      travel: {\r\n        destination: location.name,\r\n        timeRemaining: location.travelTime,\r\n        isTraveling: true,\r\n      },\r\n    }));\r\n    setIsMapOpen(false); // Close the map after choosing a destination\r\n  };\r\n\r\n  // Handle mouse hover over a location\r\n  const handleMouseEnter = (location) => {\r\n    setHoveredLocation(location.id);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredLocation(null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.worldMapContainer}>\r\n      <button onClick={toggleMap} className={styles.mapButton}>\r\n        <img src={mapIcon} alt=\"Map\" className={styles.mapIcon} />\r\n      </button>\r\n\r\n      {isMapOpen && (\r\n        <div className={styles.mapModal}>\r\n          <img src={worldMapImage} alt=\"World Map\" className={styles.mapImage} />\r\n          <div className={styles.locationsContainer}>\r\n            {worldLocations.map((location) => (\r\n              <div key={location.id}>\r\n                {/* Location Marker */}\r\n                <div\r\n                  className={styles.locationMarker}\r\n                  style={{\r\n                    top: location.coordinates.top,\r\n                    left: location.coordinates.left,\r\n                    backgroundImage: `url('../../assets/images/worldmap/icons/marker.png')`, // Updated marker path\r\n                  }}\r\n                  onClick={() => travelToLocation(location)}\r\n                  onMouseEnter={() => handleMouseEnter(location)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                />\r\n\r\n                {/* Hovered Location Image */}\r\n                {hoveredLocation === location.id && location.hovered && (\r\n                  <div\r\n                    className={styles.hoveredImage}\r\n                    style={{\r\n                      top: location.hovered_coordinates.top,\r\n                      left: location.hovered_coordinates.left,\r\n                      backgroundImage: `url('../../assets/images/worldmap/hovered/${location.hovered}')`, // Updated hovered image path\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleMap} className={styles.closeButton}>Close Map</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}