{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\enemy\\\\enemy.js\",\n  _s = $RefreshSig$();\n// /src/components/enemy/enemy.js\nimport React, { useState, useEffect } from 'react';\nimport enemyStats from './enemy-stats.json';\nimport styles from './enemy.module.css';\nimport Combat from './Combat';\nimport worldLocations from '../worldmap/worldLocations.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Enemy({\n  playerLevel,\n  playerItems,\n  currentLocation,\n  onDefeat\n}) {\n  _s();\n  const [currentEnemy, setCurrentEnemy] = useState(null);\n  const [enemyHealth, setEnemyHealth] = useState(0);\n  const [isRespawning, setIsRespawning] = useState(false);\n  const [respawnTimer, setRespawnTimer] = useState(0);\n  const [inCombat, setInCombat] = useState(false);\n\n  // Function to spawn an enemy based on player level, items, and location\n  const spawnEnemy = () => {\n    const availableEnemies = enemyStats.filter(enemy => {\n      if ((!enemy.spawnConditions || !enemy.spawnConditions.requiredLevel || playerLevel >= enemy.spawnConditions.requiredLevel) && (!enemy.spawnConditions || !enemy.spawnConditions.requiredItem || playerItems.includes(enemy.spawnConditions.requiredItem)) && (!enemy.location || enemy.location === currentLocation)) {\n        return true;\n      }\n      return false;\n    });\n    if (availableEnemies.length > 0) {\n      let spawnedEnemy = availableEnemies[Math.floor(Math.random() * availableEnemies.length)];\n\n      // Roll for variant chance\n      if (spawnedEnemy.variantChance && Math.random() < spawnedEnemy.variantChance) {\n        const variantEnemies = availableEnemies.filter(enemy => enemy.baseType === spawnedEnemy.baseType && enemy.variant);\n        if (variantEnemies.length > 0) {\n          spawnedEnemy = variantEnemies[Math.floor(Math.random() * variantEnemies.length)];\n        }\n      }\n      setCurrentEnemy(spawnedEnemy);\n      setEnemyHealth(spawnedEnemy.health);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Current Location ID:\", currentLocation); // Check current location value\n    console.log(\"Available Enemies:\", enemyStats);\n    spawnEnemy();\n  }, [playerLevel, playerItems, currentLocation]);\n\n  // Handle player initiating combat\n  const handleStartCombat = () => {\n    setInCombat(true);\n  };\n\n  // Handle player ending combat\n  const handleEndCombat = () => {\n    setInCombat(false);\n    setCurrentEnemy(null); // Optionally reset the enemy once combat ends\n  };\n\n  // Handle respawn timer countdown\n  useEffect(() => {\n    if (isRespawning) {\n      if (respawnTimer > 0) {\n        const timerInterval = setInterval(() => {\n          setRespawnTimer(prevTime => prevTime - 1);\n        }, 1000);\n        return () => clearInterval(timerInterval);\n      } else {\n        setIsRespawning(false);\n        // Respawn the enemy\n        spawnEnemy();\n      }\n    }\n  }, [isRespawning, respawnTimer, currentLocation]);\n  if (isRespawning) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.enemyContainer,\n      children: [\"Respawning in \", Math.floor(respawnTimer / 60), \"m \", respawnTimer % 60, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentEnemy) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.enemyContainer,\n      children: \"No enemies available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (inCombat) {\n    return /*#__PURE__*/_jsxDEV(Combat, {\n      currentEnemy: currentEnemy,\n      playerAttackPower: 10 // Attack power moved to Combat component if needed\n      ,\n      enemyHealth: enemyHealth,\n      setEnemyHealth: setEnemyHealth,\n      onEndCombat: handleEndCombat,\n      onDefeat: onDefeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.enemyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentEnemy.enemyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(`../../assets/images/enemies/${currentEnemy.sprite}`),\n      alt: currentEnemy.enemyName,\n      className: styles.enemySprite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Level: \", currentEnemy.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health: \", enemyHealth, \" / \", currentEnemy.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCombat,\n      className: styles.attackButton,\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Enemy, \"Srzf6V1Cu8XqKqlPbKZMIgmy+rQ=\");\n_c = Enemy;\nexport default Enemy;\nvar _c;\n$RefreshReg$(_c, \"Enemy\");","map":{"version":3,"names":["React","useState","useEffect","enemyStats","styles","Combat","worldLocations","jsxDEV","_jsxDEV","Enemy","playerLevel","playerItems","currentLocation","onDefeat","_s","currentEnemy","setCurrentEnemy","enemyHealth","setEnemyHealth","isRespawning","setIsRespawning","respawnTimer","setRespawnTimer","inCombat","setInCombat","spawnEnemy","availableEnemies","filter","enemy","spawnConditions","requiredLevel","requiredItem","includes","location","length","spawnedEnemy","Math","floor","random","variantChance","variantEnemies","baseType","variant","health","console","log","handleStartCombat","handleEndCombat","timerInterval","setInterval","prevTime","clearInterval","className","enemyContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","playerAttackPower","onEndCombat","enemyName","src","require","sprite","alt","enemySprite","level","onClick","attackButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/enemy/enemy.js"],"sourcesContent":["// /src/components/enemy/enemy.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport enemyStats from './enemy-stats.json';\r\nimport styles from './enemy.module.css';\r\nimport Combat from './Combat';\r\nimport worldLocations from '../worldmap/worldLocations.json';\r\n\r\nfunction Enemy({ playerLevel, playerItems, currentLocation, onDefeat }) {\r\n  const [currentEnemy, setCurrentEnemy] = useState(null);\r\n  const [enemyHealth, setEnemyHealth] = useState(0);\r\n  const [isRespawning, setIsRespawning] = useState(false);\r\n  const [respawnTimer, setRespawnTimer] = useState(0);\r\n  const [inCombat, setInCombat] = useState(false);\r\n\r\n  // Function to spawn an enemy based on player level, items, and location\r\n  const spawnEnemy = () => {\r\n    const availableEnemies = enemyStats.filter((enemy) => {\r\n      if (\r\n        (!enemy.spawnConditions || !enemy.spawnConditions.requiredLevel || playerLevel >= enemy.spawnConditions.requiredLevel) &&\r\n        (!enemy.spawnConditions || !enemy.spawnConditions.requiredItem || playerItems.includes(enemy.spawnConditions.requiredItem)) &&\r\n        (!enemy.location || enemy.location === currentLocation)\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (availableEnemies.length > 0) {\r\n      let spawnedEnemy = availableEnemies[Math.floor(Math.random() * availableEnemies.length)];\r\n\r\n      // Roll for variant chance\r\n      if (spawnedEnemy.variantChance && Math.random() < spawnedEnemy.variantChance) {\r\n        const variantEnemies = availableEnemies.filter(enemy => enemy.baseType === spawnedEnemy.baseType && enemy.variant);\r\n        if (variantEnemies.length > 0) {\r\n          spawnedEnemy = variantEnemies[Math.floor(Math.random() * variantEnemies.length)];\r\n        }\r\n      }\r\n\r\n      setCurrentEnemy(spawnedEnemy);\r\n      setEnemyHealth(spawnedEnemy.health);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Current Location ID:\", currentLocation); // Check current location value\r\n    console.log(\"Available Enemies:\", enemyStats);\r\n    spawnEnemy();\r\n  }, [playerLevel, playerItems, currentLocation]);      \r\n\r\n  // Handle player initiating combat\r\n  const handleStartCombat = () => {\r\n    setInCombat(true);\r\n  };\r\n\r\n  // Handle player ending combat\r\n  const handleEndCombat = () => {\r\n    setInCombat(false);\r\n    setCurrentEnemy(null); // Optionally reset the enemy once combat ends\r\n  };\r\n\r\n  // Handle respawn timer countdown\r\n  useEffect(() => {\r\n    if (isRespawning) {\r\n      if (respawnTimer > 0) {\r\n        const timerInterval = setInterval(() => {\r\n          setRespawnTimer((prevTime) => prevTime - 1);\r\n        }, 1000);\r\n        return () => clearInterval(timerInterval);\r\n      } else {\r\n        setIsRespawning(false);\r\n        // Respawn the enemy\r\n        spawnEnemy();\r\n      }\r\n    }\r\n  }, [isRespawning, respawnTimer, currentLocation]);\r\n\r\n  if (isRespawning) {\r\n    return <div className={styles.enemyContainer}>Respawning in {Math.floor(respawnTimer / 60)}m {respawnTimer % 60}s</div>;\r\n  }\r\n\r\n  if (!currentEnemy) {\r\n    return <div className={styles.enemyContainer}>No enemies available</div>;\r\n  }\r\n\r\n  if (inCombat) {\r\n    return (\r\n      <Combat\r\n        currentEnemy={currentEnemy}\r\n        playerAttackPower={10} // Attack power moved to Combat component if needed\r\n        enemyHealth={enemyHealth}\r\n        setEnemyHealth={setEnemyHealth}\r\n        onEndCombat={handleEndCombat}\r\n        onDefeat={onDefeat}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.enemyContainer}>\r\n      <h3>{currentEnemy.enemyName}</h3>\r\n      <img src={require(`../../assets/images/enemies/${currentEnemy.sprite}`)} alt={currentEnemy.enemyName} className={styles.enemySprite} />\r\n      <p>Level: {currentEnemy.level}</p>\r\n      <p>Health: {enemyHealth} / {currentEnemy.health}</p>\r\n      <button onClick={handleStartCombat} className={styles.attackButton}>Attack</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enemy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}