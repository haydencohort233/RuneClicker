{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\equipment\\\\equipment.js\",\n  _s = $RefreshSig$();\n// /src/components/equipment/equipment.js\nimport React, { useState, useEffect } from 'react';\nimport styles from './equipment.module.css';\nimport equipmentSlots from './equipmentSlots.json';\nimport equipmentSlotsImage from '../../assets/images/items/armor/equipmentSlots.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Equipment({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleEquipmentUI = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Function to calculate total stats based on equipped items\n  const calculateTotalStats = (equipment, playerStats) => {\n    let totalAttackPower = playerStats.baseAttackPower || 0;\n    let totalDefencePower = playerStats.baseDefencePower || 0;\n    Object.values(equipment).forEach(item => {\n      if (Array.isArray(item)) {\n        item.forEach(subItem => {\n          if (subItem) {\n            totalAttackPower += subItem.attackBoost || 0;\n            totalDefencePower += subItem.defenseBoost || 0;\n          }\n        });\n      } else if (item) {\n        totalAttackPower += item.attackBoost || 0;\n        totalDefencePower += item.defenseBoost || 0;\n      }\n    });\n    return {\n      totalAttackPower,\n      totalDefencePower\n    };\n  };\n\n  // Function to unequip an item from a specific slot\n  const handleUnequipItem = (slot, fingerIndex = null) => {\n    setGameState(prevState => {\n      let updatedEquipment = {\n        ...prevState.equipment\n      };\n      let updatedInventory = [...prevState.inventory];\n      if (slot === 'fingers' && fingerIndex !== null) {\n        if (updatedEquipment.fingers[fingerIndex]) {\n          updatedInventory.push(updatedEquipment.fingers[fingerIndex]);\n          updatedEquipment.fingers[fingerIndex] = null;\n        }\n      } else {\n        if (updatedEquipment[slot]) {\n          updatedInventory.push(updatedEquipment[slot]);\n          updatedEquipment[slot] = null;\n        }\n      }\n      const {\n        totalAttackPower,\n        totalDefencePower\n      } = calculateTotalStats(updatedEquipment, prevState);\n      return {\n        ...prevState,\n        equipment: updatedEquipment,\n        inventory: updatedInventory,\n        attackPower: totalAttackPower,\n        defencePower: totalDefencePower\n      };\n    });\n  };\n\n  // Update stats when equipment changes\n  useEffect(() => {\n    const {\n      totalAttackPower,\n      totalDefencePower\n    } = calculateTotalStats(gameState.equipment, gameState);\n    setGameState(prevState => ({\n      ...prevState,\n      attackPower: totalAttackPower,\n      defencePower: totalDefencePower\n    }));\n  }, [gameState.equipment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.equipmentContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEquipmentUI,\n      className: styles.equipmentButton,\n      children: isOpen ? 'Close Equipment' : 'Open Equipment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.equipmentUI,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: equipmentSlotsImage,\n        alt: \"Equipment Slots\",\n        className: styles.equipmentSlotsImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), Object.entries(equipmentSlots.equipmentSlots).map(([slot, slotInfo], index) => {\n        if (slot === 'fingers') {\n          return slotInfo.map((fingerSlot, fingerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.equipmentSlot,\n            style: {\n              top: `${fingerSlot.y}px`,\n              left: `${fingerSlot.x}px`,\n              width: `${fingerSlot.width}px`,\n              height: `${fingerSlot.height}px`\n            },\n            onClick: () => handleUnequipItem(slot, fingerIndex),\n            children: gameState.equipment.fingers[fingerIndex] ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${gameState.equipment.fingers[fingerIndex].image}`,\n              alt: gameState.equipment.fingers[fingerIndex].name,\n              className: styles.equipmentImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emptySlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, `finger-${fingerIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this));\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.equipmentSlot,\n            style: {\n              top: `${slotInfo.y}px`,\n              left: `${slotInfo.x}px`,\n              width: `${slotInfo.width}px`,\n              height: `${slotInfo.height}px`\n            },\n            onClick: () => handleUnequipItem(slot),\n            children: gameState.equipment[slot] ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${gameState.equipment[slot].image}`,\n              alt: gameState.equipment[slot].name,\n              className: styles.equipmentImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emptySlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.totalStats,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Stats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attack Power: \", gameState.attackPower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Defence Power: \", gameState.defencePower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Equipment, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Equipment;\nexport default Equipment;\nvar _c;\n$RefreshReg$(_c, \"Equipment\");","map":{"version":3,"names":["React","useState","useEffect","styles","equipmentSlots","equipmentSlotsImage","jsxDEV","_jsxDEV","Equipment","gameState","setGameState","_s","isOpen","setIsOpen","toggleEquipmentUI","calculateTotalStats","equipment","playerStats","totalAttackPower","baseAttackPower","totalDefencePower","baseDefencePower","Object","values","forEach","item","Array","isArray","subItem","attackBoost","defenseBoost","handleUnequipItem","slot","fingerIndex","prevState","updatedEquipment","updatedInventory","inventory","fingers","push","attackPower","defencePower","className","equipmentContainer","children","onClick","equipmentButton","fileName","_jsxFileName","lineNumber","columnNumber","equipmentUI","src","alt","entries","map","slotInfo","index","fingerSlot","equipmentSlot","style","top","y","left","x","width","height","image","name","equipmentImage","emptySlot","totalStats","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/equipment/equipment.js"],"sourcesContent":["// /src/components/equipment/equipment.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './equipment.module.css';\r\nimport equipmentSlots from './equipmentSlots.json';\r\nimport equipmentSlotsImage from '../../assets/images/items/armor/equipmentSlots.png';\r\n\r\nfunction Equipment({ gameState, setGameState }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleEquipmentUI = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Function to calculate total stats based on equipped items\r\n  const calculateTotalStats = (equipment, playerStats) => {\r\n    let totalAttackPower = playerStats.baseAttackPower || 0;\r\n    let totalDefencePower = playerStats.baseDefencePower || 0;\r\n\r\n    Object.values(equipment).forEach((item) => {\r\n      if (Array.isArray(item)) {\r\n        item.forEach((subItem) => {\r\n          if (subItem) {\r\n            totalAttackPower += subItem.attackBoost || 0;\r\n            totalDefencePower += subItem.defenseBoost || 0;\r\n          }\r\n        });\r\n      } else if (item) {\r\n        totalAttackPower += item.attackBoost || 0;\r\n        totalDefencePower += item.defenseBoost || 0;\r\n      }\r\n    });\r\n\r\n    return { totalAttackPower, totalDefencePower };\r\n  };\r\n\r\n  // Function to unequip an item from a specific slot\r\n  const handleUnequipItem = (slot, fingerIndex = null) => {\r\n    setGameState((prevState) => {\r\n      let updatedEquipment = { ...prevState.equipment };\r\n      let updatedInventory = [...prevState.inventory];\r\n\r\n      if (slot === 'fingers' && fingerIndex !== null) {\r\n        if (updatedEquipment.fingers[fingerIndex]) {\r\n          updatedInventory.push(updatedEquipment.fingers[fingerIndex]);\r\n          updatedEquipment.fingers[fingerIndex] = null;\r\n        }\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          updatedInventory.push(updatedEquipment[slot]);\r\n          updatedEquipment[slot] = null;\r\n        }\r\n      }\r\n\r\n      const { totalAttackPower, totalDefencePower } = calculateTotalStats(updatedEquipment, prevState);\r\n\r\n      return {\r\n        ...prevState,\r\n        equipment: updatedEquipment,\r\n        inventory: updatedInventory,\r\n        attackPower: totalAttackPower,\r\n        defencePower: totalDefencePower,\r\n      };\r\n    });\r\n  };\r\n\r\n  // Update stats when equipment changes\r\n  useEffect(() => {\r\n    const { totalAttackPower, totalDefencePower } = calculateTotalStats(gameState.equipment, gameState);\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      attackPower: totalAttackPower,\r\n      defencePower: totalDefencePower,\r\n    }));\r\n  }, [gameState.equipment]);\r\n\r\n  return (\r\n    <div className={styles.equipmentContainer}>\r\n      <button onClick={toggleEquipmentUI} className={styles.equipmentButton}>\r\n        {isOpen ? 'Close Equipment' : 'Open Equipment'}\r\n      </button>\r\n      {isOpen && (\r\n        <div className={styles.equipmentUI}>\r\n          {/* Display the equipment slots background image */}\r\n          <img\r\n            src={equipmentSlotsImage}\r\n            alt=\"Equipment Slots\"\r\n            className={styles.equipmentSlotsImage}\r\n          />\r\n          {Object.entries(equipmentSlots.equipmentSlots).map(([slot, slotInfo], index) => {\r\n            if (slot === 'fingers') {\r\n              return slotInfo.map((fingerSlot, fingerIndex) => (\r\n                <div\r\n                  key={`finger-${fingerIndex}`}\r\n                  className={styles.equipmentSlot}\r\n                  style={{\r\n                    top: `${fingerSlot.y}px`,\r\n                    left: `${fingerSlot.x}px`,\r\n                    width: `${fingerSlot.width}px`,\r\n                    height: `${fingerSlot.height}px`,\r\n                  }}\r\n                  onClick={() => handleUnequipItem(slot, fingerIndex)}\r\n                >\r\n                  {gameState.equipment.fingers[fingerIndex] ? (\r\n                    <img\r\n                      src={`http://localhost:5000/assets/images/items/${gameState.equipment.fingers[fingerIndex].image}`}\r\n                      alt={gameState.equipment.fingers[fingerIndex].name}\r\n                      className={styles.equipmentImage}\r\n                    />\r\n                  ) : (\r\n                    <div className={styles.emptySlot} />\r\n                  )}\r\n                </div>\r\n              ));\r\n            } else {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={styles.equipmentSlot}\r\n                  style={{\r\n                    top: `${slotInfo.y}px`,\r\n                    left: `${slotInfo.x}px`,\r\n                    width: `${slotInfo.width}px`,\r\n                    height: `${slotInfo.height}px`,\r\n                  }}\r\n                  onClick={() => handleUnequipItem(slot)}\r\n                >\r\n                  {gameState.equipment[slot] ? (\r\n                    <img\r\n                      src={`http://localhost:5000/assets/images/items/${gameState.equipment[slot].image}`}\r\n                      alt={gameState.equipment[slot].name}\r\n                      className={styles.equipmentImage}\r\n                    />\r\n                  ) : (\r\n                    <div className={styles.emptySlot} />\r\n                  )}\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n          <div className={styles.totalStats}>\r\n            <h3>Total Stats:</h3>\r\n            <p>Attack Power: {gameState.attackPower || 0}</p>\r\n            <p>Defence Power: {gameState.defencePower || 0}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}