{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\banking\\\\banking.js\",\n  _s = $RefreshSig$();\n// /components/banking/banking.js\nimport React, { useCallback, useState } from 'react';\nimport styles from './banking.module.css';\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\nfunction Banking({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleDepositItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedInventory = [...prevState.inventory];\n      const updatedBank = [...prevState.bank];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        // Handle inventory reduction\n        if (updatedInventory[itemIndex].quantity > quantity) {\n          updatedInventory[itemIndex].quantity -= quantity;\n        } else {\n          updatedInventory.splice(itemIndex, 1);\n        }\n\n        // Handle bank addition\n        const bankItemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n        if (bankItemIndex > -1) {\n          updatedBank[bankItemIndex].quantity = Math.min(updatedBank[bankItemIndex].quantity + quantity, 65535 // Assuming stackable limit\n          );\n        } else if (updatedBank.length < gameState.bankSpace) {\n          updatedBank.push({\n            ...item,\n            quantity\n          });\n        } else {\n          alert('Bank is full! Cannot deposit more items.');\n          return prevState;\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\n    setGameState(prevState => {\n      const updatedBank = [...prevState.bank];\n      const updatedInventory = [...prevState.inventory];\n      const itemIndex = updatedBank.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex > -1) {\n        // Handle bank reduction\n        if (updatedBank[itemIndex].quantity > quantity) {\n          updatedBank[itemIndex].quantity -= quantity;\n        } else {\n          updatedBank.splice(itemIndex, 1);\n          // Dismiss options if the item is fully withdrawn from the bank\n          setSelectedItem(null);\n        }\n\n        // Handle inventory addition\n        const inventoryItemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n        if (inventoryItemIndex > -1) {\n          // Add to existing stack if it exists, regardless of inventory space\n          updatedInventory[inventoryItemIndex].quantity = Math.min(updatedInventory[inventoryItemIndex].quantity + quantity, 65535);\n        } else {\n          // Only add a new item if there is space in the inventory\n          if (updatedInventory.length >= prevState.maxInventorySpace) {\n            alert('Inventory is full! Cannot withdraw more items.');\n            return prevState;\n          }\n          updatedInventory.push({\n            ...item,\n            quantity\n          });\n        }\n      }\n      return {\n        ...prevState,\n        inventory: updatedInventory,\n        bank: updatedBank\n      };\n    });\n  }, [setGameState]);\n  const getBankUpgradeCost = () => {\n    const {\n      initialCost,\n      costIncrementMultiplier\n    } = bankUpgradeConfig;\n    return Math.floor(initialCost * Math.pow(costIncrementMultiplier, gameState.bankSpacesBought));\n  };\n  const purchaseBankSpace = () => {\n    const currentCost = getBankUpgradeCost();\n    if (gameState.currency >= currentCost) {\n      if (gameState.bankSpace < MAX_BANK_SPACE) {\n        setGameState(prevState => ({\n          ...prevState,\n          currency: prevState.currency - currentCost,\n          bankSpace: Math.min(prevState.bankSpace + 10, MAX_BANK_SPACE),\n          // Example increment\n          bankSpacesBought: prevState.bankSpacesBought + 1\n        }));\n      } else {\n        alert('Maximum bank space reached.');\n      }\n    } else {\n      alert('Not enough currency to purchase more bank space.');\n    }\n  };\n  const resetBankSpace = () => {\n    setGameState(prevState => ({\n      ...prevState,\n      bankSpace: bankUpgradeConfig.initialBankSpaces,\n      bankSpacesBought: 0\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bankingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.bankingTitle,\n      children: [\"Bank (\", gameState.bank.length, \" / \", gameState.bankSpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bankingSlots,\n      children: gameState.bank.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bankSlot,\n        onClick: () => setSelectedItem(item),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/assets/images/items/${item.image}`,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(x\", item.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemActions,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: selectedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 1),\n        children: \"Withdraw 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, 5),\n        children: \"Withdraw 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWithdrawItem(selectedItem, selectedItem.quantity),\n        children: \"Withdraw All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedItem(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bankUpgradeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upgrade Bank Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: purchaseBankSpace,\n        className: styles.upgradeButton,\n        children: [\"Buy More Bank Space (Cost: \", getBankUpgradeCost(), \" Currency)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetBankSpace,\n        className: `${styles.upgradeButton} ${styles.resetButton}`,\n        children: \"Reset Bank Space [Dev]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.inventoryTitle,\n      children: [\"Inventory (\", gameState.inventory.length, \" / \", gameState.maxInventorySpace, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventorySlots,\n      children: gameState.inventory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inventorySlot,\n        onClick: () => handleDepositItem(item, 1),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/assets/images/items/${item.image}`,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(x\", item.quantity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Banking, \"wwXNjW+3YqWcMr4WQwlgNOH5dGU=\");\n_c = Banking;\nexport default Banking;\nvar _c;\n$RefreshReg$(_c, \"Banking\");","map":{"version":3,"names":["React","useCallback","useState","styles","bankUpgradeConfig","jsxDEV","_jsxDEV","MAX_BANK_SPACE","maxBankSpaces","Banking","gameState","setGameState","_s","selectedItem","setSelectedItem","handleDepositItem","item","quantity","prevState","updatedInventory","inventory","updatedBank","bank","itemIndex","findIndex","i","itemId","splice","bankItemIndex","Math","min","length","bankSpace","push","alert","handleWithdrawItem","inventoryItemIndex","maxInventorySpace","getBankUpgradeCost","initialCost","costIncrementMultiplier","floor","pow","bankSpacesBought","purchaseBankSpace","currentCost","currency","resetBankSpace","initialBankSpaces","className","bankingContainer","children","bankingTitle","fileName","_jsxFileName","lineNumber","columnNumber","bankingSlots","map","index","bankSlot","onClick","src","image","alt","name","itemActions","bankUpgradeContainer","upgradeButton","resetButton","inventoryTitle","inventorySlots","inventorySlot","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/banking/banking.js"],"sourcesContent":["// /components/banking/banking.js\r\nimport React, { useCallback, useState } from 'react';\r\nimport styles from './banking.module.css';\r\nimport bankUpgradeConfig from './bankUpgradeConfig.json';\r\n\r\nconst MAX_BANK_SPACE = bankUpgradeConfig.maxBankSpaces;\r\n\r\nfunction Banking({ gameState, setGameState }) {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleDepositItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedInventory = [...prevState.inventory];\r\n      const updatedBank = [...prevState.bank];\r\n\r\n      const itemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        // Handle inventory reduction\r\n        if (updatedInventory[itemIndex].quantity > quantity) {\r\n          updatedInventory[itemIndex].quantity -= quantity;\r\n        } else {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n\r\n        // Handle bank addition\r\n        const bankItemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n        if (bankItemIndex > -1) {\r\n          updatedBank[bankItemIndex].quantity = Math.min(\r\n            updatedBank[bankItemIndex].quantity + quantity,\r\n            65535 // Assuming stackable limit\r\n          );\r\n        } else if (updatedBank.length < gameState.bankSpace) {\r\n          updatedBank.push({ ...item, quantity });\r\n        } else {\r\n          alert('Bank is full! Cannot deposit more items.');\r\n          return prevState;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  const handleWithdrawItem = useCallback((item, quantity = 1) => {\r\n    setGameState((prevState) => {\r\n      const updatedBank = [...prevState.bank];\r\n      const updatedInventory = [...prevState.inventory];\r\n\r\n      const itemIndex = updatedBank.findIndex((i) => i.itemId === item.itemId);\r\n      if (itemIndex > -1) {\r\n        // Handle bank reduction\r\n        if (updatedBank[itemIndex].quantity > quantity) {\r\n          updatedBank[itemIndex].quantity -= quantity;\r\n        } else {\r\n          updatedBank.splice(itemIndex, 1);\r\n          // Dismiss options if the item is fully withdrawn from the bank\r\n          setSelectedItem(null);\r\n        }\r\n\r\n        // Handle inventory addition\r\n        const inventoryItemIndex = updatedInventory.findIndex((i) => i.itemId === item.itemId);\r\n        if (inventoryItemIndex > -1) {\r\n          // Add to existing stack if it exists, regardless of inventory space\r\n          updatedInventory[inventoryItemIndex].quantity = Math.min(\r\n            updatedInventory[inventoryItemIndex].quantity + quantity,\r\n            65535\r\n          );\r\n        } else {\r\n          // Only add a new item if there is space in the inventory\r\n          if (updatedInventory.length >= prevState.maxInventorySpace) {\r\n            alert('Inventory is full! Cannot withdraw more items.');\r\n            return prevState;\r\n          }\r\n          updatedInventory.push({ ...item, quantity });\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n        inventory: updatedInventory,\r\n        bank: updatedBank,\r\n      };\r\n    });\r\n  }, [setGameState]);\r\n\r\n  const getBankUpgradeCost = () => {\r\n    const { initialCost, costIncrementMultiplier } = bankUpgradeConfig;\r\n    return Math.floor(initialCost * Math.pow(costIncrementMultiplier, gameState.bankSpacesBought));\r\n  };\r\n\r\n  const purchaseBankSpace = () => {\r\n    const currentCost = getBankUpgradeCost();\r\n\r\n    if (gameState.currency >= currentCost) {\r\n      if (gameState.bankSpace < MAX_BANK_SPACE) {\r\n        setGameState((prevState) => ({\r\n          ...prevState,\r\n          currency: prevState.currency - currentCost,\r\n          bankSpace: Math.min(prevState.bankSpace + 10, MAX_BANK_SPACE), // Example increment\r\n          bankSpacesBought: prevState.bankSpacesBought + 1,\r\n        }));\r\n      } else {\r\n        alert('Maximum bank space reached.');\r\n      }\r\n    } else {\r\n      alert('Not enough currency to purchase more bank space.');\r\n    }\r\n  };\r\n\r\n  const resetBankSpace = () => {\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      bankSpace: bankUpgradeConfig.initialBankSpaces,\r\n      bankSpacesBought: 0,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.bankingContainer}>\r\n      <h2 className={styles.bankingTitle}>Bank ({gameState.bank.length} / {gameState.bankSpace})</h2>\r\n      <div className={styles.bankingSlots}>\r\n        {gameState.bank.map((item, index) => (\r\n          <div key={index} className={styles.bankSlot} onClick={() => setSelectedItem(item)}>\r\n            <img src={`http://localhost:5000/assets/images/items/${item.image}`} alt={item.name} />\r\n            <p>(x{item.quantity})</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedItem && (\r\n        <div className={styles.itemActions}>\r\n          <h4>{selectedItem.name}</h4>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 1)}>Withdraw 1</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, 5)}>Withdraw 5</button>\r\n          <button onClick={() => handleWithdrawItem(selectedItem, selectedItem.quantity)}>Withdraw All</button>\r\n          <button onClick={() => setSelectedItem(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      <div className={styles.bankUpgradeContainer}>\r\n        <h3>Upgrade Bank Space</h3>\r\n        <button onClick={purchaseBankSpace} className={styles.upgradeButton}>\r\n          Buy More Bank Space (Cost: {getBankUpgradeCost()} Currency)\r\n        </button>\r\n        <button onClick={resetBankSpace} className={`${styles.upgradeButton} ${styles.resetButton}`}>Reset Bank Space [Dev]</button>\r\n      </div>\r\n      <h2 className={styles.inventoryTitle}>Inventory ({gameState.inventory.length} / {gameState.maxInventorySpace})</h2>\r\n      <div className={styles.inventorySlots}>\r\n        {gameState.inventory.map((item, index) => (\r\n          <div key={index} className={styles.inventorySlot} onClick={() => handleDepositItem(item, 1)}>\r\n            <img src={`http://localhost:5000/assets/images/items/${item.image}`} alt={item.name} />\r\n            <p>(x{item.quantity})</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}