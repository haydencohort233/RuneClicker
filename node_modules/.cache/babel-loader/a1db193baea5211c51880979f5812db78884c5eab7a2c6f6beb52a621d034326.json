{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\enemy\\\\Combat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './combat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Combat({\n  currentEnemy,\n  playerAttackPower,\n  enemyHealth,\n  setEnemyHealth,\n  onEndCombat,\n  onDefeat\n}) {\n  _s();\n  const [playerHealth, setPlayerHealth] = useState(100); // Example player's health\n  const [combatLog, setCombatLog] = useState([]); // To log actions during combat\n\n  // Player attack\n  const handlePlayerAttack = () => {\n    const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\n    if (hitSuccess) {\n      const damage = Math.floor(Math.random() * playerAttackPower);\n      setEnemyHealth(prevHealth => Math.max(prevHealth - damage, 0));\n      addCombatLog(`You hit ${currentEnemy.enemyName} for ${damage} damage!`);\n    } else {\n      addCombatLog(\"You missed!\");\n    }\n  };\n\n  // Enemy attack back\n  useEffect(() => {\n    if (currentEnemy && enemyHealth > 0) {\n      const enemyAttackInterval = setInterval(() => {\n        if (Math.random() < currentEnemy.attackChance) {\n          const damage = Math.floor(Math.random() * currentEnemy.maxHit);\n          setPlayerHealth(prevHealth => Math.max(prevHealth - damage, 0));\n          addCombatLog(`${currentEnemy.enemyName} hit you for ${damage} damage!`);\n        } else {\n          addCombatLog(`${currentEnemy.enemyName} missed!`);\n        }\n      }, 2000);\n      return () => clearInterval(enemyAttackInterval);\n    }\n  }, [currentEnemy, enemyHealth]);\n\n  // Handle combat end if either the player or enemy health reaches zero\n  useEffect(() => {\n    if (enemyHealth <= 0) {\n      addCombatLog(`You defeated ${currentEnemy.enemyName}!`);\n      onDefeat(currentEnemy);\n      onEndCombat(); // End combat after the enemy is defeated\n    } else if (playerHealth <= 0) {\n      addCombatLog(\"You have been defeated...\");\n      onEndCombat(); // End combat if the player is defeated\n    }\n  }, [enemyHealth, playerHealth, currentEnemy, onDefeat, onEndCombat]);\n\n  // Add an entry to the combat log\n  const addCombatLog = message => {\n    setCombatLog(prevLog => [...prevLog, message]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.combatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Combat with \", currentEnemy.enemyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enemy Health: \", enemyHealth, \" / \", currentEnemy.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Health: \", playerHealth, \" / 100\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.combatLog,\n      children: combatLog.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayerAttack,\n      className: styles.attackButton,\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onEndCombat,\n      className: styles.fleeButton,\n      children: \"Flee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Combat, \"4d/FgVuCpXlaGUqB0mEACAD4NcA=\");\n_c = Combat;\nexport default Combat;\nvar _c;\n$RefreshReg$(_c, \"Combat\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Combat","currentEnemy","playerAttackPower","enemyHealth","setEnemyHealth","onEndCombat","onDefeat","_s","playerHealth","setPlayerHealth","combatLog","setCombatLog","handlePlayerAttack","hitSuccess","Math","random","damage","floor","prevHealth","max","addCombatLog","enemyName","enemyAttackInterval","setInterval","attackChance","maxHit","clearInterval","message","prevLog","className","combatContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","health","map","log","index","onClick","attackButton","fleeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/enemy/Combat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './combat.module.css';\r\n\r\nfunction Combat({ currentEnemy, playerAttackPower, enemyHealth, setEnemyHealth, onEndCombat, onDefeat }) {\r\n  const [playerHealth, setPlayerHealth] = useState(100); // Example player's health\r\n  const [combatLog, setCombatLog] = useState([]); // To log actions during combat\r\n\r\n  // Player attack\r\n  const handlePlayerAttack = () => {\r\n    const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\r\n    if (hitSuccess) {\r\n      const damage = Math.floor(Math.random() * playerAttackPower);\r\n      setEnemyHealth((prevHealth) => Math.max(prevHealth - damage, 0));\r\n      addCombatLog(`You hit ${currentEnemy.enemyName} for ${damage} damage!`);\r\n    } else {\r\n      addCombatLog(\"You missed!\");\r\n    }\r\n  };\r\n\r\n  // Enemy attack back\r\n  useEffect(() => {\r\n    if (currentEnemy && enemyHealth > 0) {\r\n      const enemyAttackInterval = setInterval(() => {\r\n        if (Math.random() < currentEnemy.attackChance) {\r\n          const damage = Math.floor(Math.random() * currentEnemy.maxHit);\r\n          setPlayerHealth((prevHealth) => Math.max(prevHealth - damage, 0));\r\n          addCombatLog(`${currentEnemy.enemyName} hit you for ${damage} damage!`);\r\n        } else {\r\n          addCombatLog(`${currentEnemy.enemyName} missed!`);\r\n        }\r\n      }, 2000);\r\n      return () => clearInterval(enemyAttackInterval);\r\n    }\r\n  }, [currentEnemy, enemyHealth]);\r\n\r\n  // Handle combat end if either the player or enemy health reaches zero\r\n  useEffect(() => {\r\n    if (enemyHealth <= 0) {\r\n      addCombatLog(`You defeated ${currentEnemy.enemyName}!`);\r\n      onDefeat(currentEnemy);\r\n      onEndCombat(); // End combat after the enemy is defeated\r\n    } else if (playerHealth <= 0) {\r\n      addCombatLog(\"You have been defeated...\");\r\n      onEndCombat(); // End combat if the player is defeated\r\n    }\r\n  }, [enemyHealth, playerHealth, currentEnemy, onDefeat, onEndCombat]);\r\n\r\n  // Add an entry to the combat log\r\n  const addCombatLog = (message) => {\r\n    setCombatLog((prevLog) => [...prevLog, message]);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.combatContainer}>\r\n      <h3>Combat with {currentEnemy.enemyName}</h3>\r\n      <p>Enemy Health: {enemyHealth} / {currentEnemy.health}</p>\r\n      <p>Your Health: {playerHealth} / 100</p>\r\n      <div className={styles.combatLog}>\r\n        {combatLog.map((log, index) => (\r\n          <p key={index}>{log}</p>\r\n        ))}\r\n      </div>\r\n      <button onClick={handlePlayerAttack} className={styles.attackButton}>Attack</button>\r\n      <button onClick={onEndCombat} className={styles.fleeButton}>Flee</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Combat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}