{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\inventory\\\\inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  inventory = [],\n  setPlayer,\n  maxInventorySpace\n}) {\n  _s();\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const [sortOption, setSortOption] = useState('rarity');\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [dropItem, setDropItem] = useState(null);\n\n  // Function to handle drag end event\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const updatedInventory = Array.from(inventory);\n    const [movedItem] = updatedInventory.splice(result.source.index, 1);\n    updatedInventory.splice(result.destination.index, 0, movedItem);\n    setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      inventory: updatedInventory\n    }));\n  };\n  const handleAddRandomItem = () => {\n    if (inventory.length >= maxInventorySpace) {\n      alert('Inventory is full! Cannot add more items.');\n      return;\n    }\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\n    if (!randomItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\n      if (randomItem.type === 'quest') {\n        // Ensure quest items cannot be stacked and are unique\n        if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      } else {\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\n          updatedInventory[existingItemIndex].quantity += 1;\n        } else if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n  };\n\n  // Function to equip an item to a specific slot\n  const handleEquipItem = item => {\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex < 0) return prevPlayer;\n      let updatedEquipment = {\n        ...prevPlayer.equipment\n      };\n      // Ensure all equipment slots are defined\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\n\n      // Use the item slot directly from item data\n      const slot = item.slot;\n      if (slot === \"fingers\") {\n        // Equip to the first available finger slot\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\n        if (ringSlotIndex !== -1) {\n          updatedEquipment.fingers[ringSlotIndex] = item;\n        } else {\n          const replacedItem = updatedEquipment.fingers[0];\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\n          if (replacedItem) {\n            addItemToInventory(updatedInventory, replacedItem);\n            console.log('Returned item to inventory:', replacedItem);\n          }\n        }\n      } else if (slot === \"neck\") {\n        // Equip to neck slot\n        if (updatedEquipment.neck) {\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment.neck);\n        }\n        updatedEquipment.neck = item; // Equip the item\n      } else {\n        if (updatedEquipment[slot]) {\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\n        }\n        updatedEquipment[slot] = item; // Equip the item\n      }\n\n      // Remove the item from inventory\n      if (updatedInventory[itemIndex].quantity > 1) {\n        updatedInventory[itemIndex].quantity -= 1;\n      } else {\n        updatedInventory.splice(itemIndex, 1);\n      }\n      console.log('Current equipment:', updatedEquipment);\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory,\n        equipment: updatedEquipment\n      };\n    });\n  };\n\n  // Helper function to add item to inventory, considering stacking and space limitations\n  const addItemToInventory = (inventory, item) => {\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\n      inventory[existingItemIndex].quantity += 1;\n    } else if (existingItemIndex >= 0) {\n      // Stack the item if it already exists but the quantity is at max\n      inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\n    } else if (inventory.length < maxInventorySpace) {\n      inventory.push({\n        ...item,\n        quantity: 1\n      });\n    } else {\n      alert('Inventory is full! Cannot unequip the item.');\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\n    }\n  };\n\n  // Function to handle item actions from inventory\n  const handleItemAction = (itemId, action) => {\n    const item = itemConfig.items.find(i => i.itemId === itemId);\n    if (!item) return;\n    if (action === 'drop') {\n      setDropItem(item);\n      setSelectedItem(item);\n      return;\n    }\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\n      if (itemIndex >= 0) {\n        if (item.type === 'quest') {\n          alert('This is a quest item and cannot be dropped or used.');\n          return prevPlayer;\n        }\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else if (action === \"use\") {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply item effect if the action is to use\n      let updatedPlayer = {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n      if (action === \"use\") {\n        if (item.type === \"food\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"potion\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"weapon\" && item.attackBoost) {\n          updatedPlayer.attackPower += item.attackBoost;\n        } else if (item.type === \"armor\" && item.defenceBoost) {\n          updatedPlayer.defencePower += item.defenceBoost;\n        }\n      }\n      return updatedPlayer;\n    });\n  };\n\n  // Function to drop a specific quantity of an item\n  const handleDropQuantity = quantity => {\n    if (!dropItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\n      if (itemIndex >= 0) {\n        if (quantity >= updatedInventory[itemIndex].quantity) {\n          updatedInventory.splice(itemIndex, 1);\n        } else {\n          updatedInventory[itemIndex].quantity -= quantity;\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n    setDropItem(null);\n    setSelectedItem(null);\n  };\n\n  // Sort inventory based on the selected sort option\n  const sortedInventory = [...inventory].sort((a, b) => {\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\n    if (!itemA || !itemB) return 0;\n    if (sortOption === 'rarity') {\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRandomItem,\n      className: styles.devButton,\n      children: \"Add Random Item (Dev)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sortOptions,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortOption,\n        onChange: e => setSortOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rarity\",\n          children: \"Rarity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), inventory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your inventory is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"inventory\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inventoryGrid,\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [sortedInventory.map((item, index) => {\n            const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n            if (!itemData) return null;\n            const rarityClass = {\n              \"common\": styles.common,\n              \"uncommon\": styles.uncommon,\n              \"rare\": styles.rare,\n              \"very rare\": styles.veryRare,\n              \"mythical\": styles.mythical,\n              \"quest\": styles.quest\n            };\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.itemId.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: `${styles.inventoryItem} ${rarityClass[itemData.rarity]}`,\n                onMouseEnter: e => setHoveredItem({\n                  itemData,\n                  position: getTooltipPosition(e.currentTarget)\n                }),\n                onMouseLeave: () => setHoveredItem(null),\n                onClick: () => setSelectedItem(selectedItem === item ? null : item),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000/assets/images/items/${itemData.image}`,\n                  alt: itemData.name,\n                  className: styles.itemImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [itemData.name, \" (x\", item.quantity, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 27\n                }, this), selectedItem && selectedItem.itemId === item.itemId && !dropItem && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [itemData.type === \"weapon\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.equipButton,\n                      onClick: () => handleEquipItem(item),\n                      children: \"Equip\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.dropButton,\n                      onClick: () => handleItemAction(item.itemId, 'drop'),\n                      children: \"Drop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true), itemData.type === \"armor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.equipButton,\n                      onClick: () => handleEquipItem(item),\n                      children: \"Equip\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.dropButton,\n                      onClick: () => handleItemAction(item.itemId, 'drop'),\n                      children: \"Drop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true), itemData.type === \"jewelry\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.equipButton,\n                      onClick: () => handleEquipItem(item),\n                      children: \"Equip\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.dropButton,\n                      onClick: () => handleItemAction(item.itemId, 'drop'),\n                      children: \"Drop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true), itemData.type === \"food\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.eatButton,\n                      onClick: () => handleItemAction(item.itemId, 'use'),\n                      children: \"Eat\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.dropButton,\n                      onClick: () => handleItemAction(item.itemId, 'drop'),\n                      children: \"Drop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true), itemData.type === \"potion\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.drinkButton,\n                      onClick: () => handleItemAction(item.itemId, 'use'),\n                      children: \"Drink\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: styles.dropButton,\n                      onClick: () => handleItemAction(item.itemId, 'drop'),\n                      children: \"Drop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true), itemData.type === \"quest\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.questButton,\n                    children: \"Quest Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 33\n                  }, this) : itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: styles.dropButton,\n                    onClick: () => handleItemAction(item.itemId, 'drop'),\n                    children: \"Drop\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 29\n                }, this), hoveredItem && hoveredItem.itemData.itemId === item.itemId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.tooltip,\n                  style: hoveredItem.position,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: hoveredItem.itemData.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: hoveredItem.itemData.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 31\n                  }, this), hoveredItem.itemData.attackBoost !== undefined && hoveredItem.itemData.attackBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Attack Boost: \", hoveredItem.itemData.attackBoost]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 124\n                  }, this), hoveredItem.itemData.defenceBoost !== undefined && hoveredItem.itemData.defenceBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Defence Boost: \", hoveredItem.itemData.defenceBoost]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 126\n                  }, this), hoveredItem.itemData.effect && hoveredItem.itemData.effect.heal && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Heal: \", hoveredItem.itemData.effect.heal]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 99\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this)\n            }, item.itemId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"oZeOAcFNXUIbXQqYsCrN8j2NHLs=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","styles","itemConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Inventory","inventory","setPlayer","maxInventorySpace","_s","hoveredItem","setHoveredItem","sortOption","setSortOption","isOpen","setIsOpen","selectedItem","setSelectedItem","dropItem","setDropItem","handleDragEnd","result","destination","updatedInventory","Array","from","movedItem","splice","source","index","prevPlayer","handleAddRandomItem","length","alert","randomItem","items","Math","floor","random","existingItemIndex","findIndex","i","itemId","type","push","quantity","handleEquipItem","item","itemIndex","updatedEquipment","equipment","fingers","neck","slot","ringSlotIndex","replacedItem","addItemToInventory","console","log","min","Error","handleItemAction","action","find","updatedPlayer","effect","heal","hitpoints","maxHitPoints","attackBoost","attackPower","defenceBoost","defencePower","handleDropQuantity","sortedInventory","sort","a","b","itemA","itemB","rarityOrder","indexOf","rarity","className","inventoryContainer","children","onClick","devButton","fileName","_jsxFileName","lineNumber","columnNumber","sortOptions","htmlFor","id","value","onChange","e","target","onDragEnd","droppableId","provided","inventoryGrid","droppableProps","ref","innerRef","map","itemData","rarityClass","common","uncommon","rare","veryRare","mythical","quest","draggableId","toString","draggableProps","dragHandleProps","inventoryItem","onMouseEnter","position","getTooltipPosition","currentTarget","onMouseLeave","src","image","alt","name","itemImage","equipButton","dropButton","eatButton","drinkButton","questButton","tooltip","style","description","undefined","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/inventory/inventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nfunction Inventory({ inventory = [], setPlayer, maxInventorySpace }) {\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n  const [sortOption, setSortOption] = useState('rarity');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [dropItem, setDropItem] = useState(null);\r\n\r\n  // Function to handle drag end event\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const updatedInventory = Array.from(inventory);\r\n    const [movedItem] = updatedInventory.splice(result.source.index, 1);\r\n    updatedInventory.splice(result.destination.index, 0, movedItem);\r\n\r\n    setPlayer((prevPlayer) => ({ ...prevPlayer, inventory: updatedInventory }));\r\n  };\r\n\r\n  const handleAddRandomItem = () => {\r\n    if (inventory.length >= maxInventorySpace) {\r\n      alert('Inventory is full! Cannot add more items.');\r\n      return;\r\n    }\r\n    \r\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\r\n    if (!randomItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\r\n\r\n      if (randomItem.type === 'quest') {\r\n        // Ensure quest items cannot be stacked and are unique\r\n        if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      } else {\r\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\r\n          updatedInventory[existingItemIndex].quantity += 1;\r\n        } else if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n  };\r\n\r\n  // Function to equip an item to a specific slot\r\n  const handleEquipItem = (item) => {\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\r\n      if (itemIndex < 0) return prevPlayer;\r\n\r\n      let updatedEquipment = { ...prevPlayer.equipment };\r\n      // Ensure all equipment slots are defined\r\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\r\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\r\n\r\n      // Use the item slot directly from item data\r\n      const slot = item.slot;\r\n\r\n      if (slot === \"fingers\") {\r\n        // Equip to the first available finger slot\r\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\r\n        if (ringSlotIndex !== -1) {\r\n          updatedEquipment.fingers[ringSlotIndex] = item;\r\n        } else {\r\n          const replacedItem = updatedEquipment.fingers[0];\r\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\r\n          if (replacedItem) {\r\n            addItemToInventory(updatedInventory, replacedItem);\r\n            console.log('Returned item to inventory:', replacedItem);\r\n          }\r\n        }\r\n      } else if (slot === \"neck\") {\r\n        // Equip to neck slot\r\n        if (updatedEquipment.neck) {\r\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment.neck);\r\n        }\r\n        updatedEquipment.neck = item; // Equip the item\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\r\n        }\r\n        updatedEquipment[slot] = item; // Equip the item\r\n      }\r\n\r\n      // Remove the item from inventory\r\n      if (updatedInventory[itemIndex].quantity > 1) {\r\n        updatedInventory[itemIndex].quantity -= 1;\r\n      } else {\r\n        updatedInventory.splice(itemIndex, 1);\r\n      }\r\n\r\n      console.log('Current equipment:', updatedEquipment);\r\n      return { ...prevPlayer, inventory: updatedInventory, equipment: updatedEquipment };\r\n    });\r\n  };\r\n\r\n  // Helper function to add item to inventory, considering stacking and space limitations\r\n  const addItemToInventory = (inventory, item) => {\r\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\r\n\r\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\r\n      inventory[existingItemIndex].quantity += 1;\r\n    } else if (existingItemIndex >= 0) {\r\n        // Stack the item if it already exists but the quantity is at max\r\n        inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\r\n    } else if (inventory.length < maxInventorySpace) {\r\n      inventory.push({ ...item, quantity: 1 });\r\n    } else {\r\n      alert('Inventory is full! Cannot unequip the item.');\r\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\r\n    }\r\n  };\r\n\r\n  // Function to handle item actions from inventory\r\n  const handleItemAction = (itemId, action) => {\r\n    const item = itemConfig.items.find((i) => i.itemId === itemId);\r\n    if (!item) return;\r\n\r\n    if (action === 'drop') {\r\n      setDropItem(item);\r\n      setSelectedItem(item);\r\n      return;\r\n    }\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\r\n      if (itemIndex >= 0) {\r\n        if (item.type === 'quest') {\r\n          alert('This is a quest item and cannot be dropped or used.');\r\n          return prevPlayer;\r\n        }\r\n\r\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else if (action === \"use\") {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply item effect if the action is to use\r\n      let updatedPlayer = { ...prevPlayer, inventory: updatedInventory };\r\n      if (action === \"use\") {\r\n        if (item.type === \"food\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"potion\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"weapon\" && item.attackBoost) {\r\n          updatedPlayer.attackPower += item.attackBoost;\r\n        } else if (item.type === \"armor\" && item.defenceBoost) {\r\n          updatedPlayer.defencePower += item.defenceBoost;\r\n        }\r\n      }\r\n\r\n      return updatedPlayer;\r\n    });\r\n  };\r\n\r\n  // Function to drop a specific quantity of an item\r\n  const handleDropQuantity = (quantity) => {\r\n    if (!dropItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\r\n      if (itemIndex >= 0) {\r\n        if (quantity >= updatedInventory[itemIndex].quantity) {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        } else {\r\n          updatedInventory[itemIndex].quantity -= quantity;\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n    setDropItem(null);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Sort inventory based on the selected sort option\r\n  const sortedInventory = [...inventory].sort((a, b) => {\r\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\r\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\r\n    if (!itemA || !itemB) return 0;\r\n\r\n    if (sortOption === 'rarity') {\r\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\r\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <button onClick={handleAddRandomItem} className={styles.devButton}>Add Random Item (Dev)</button>\r\n      <div className={styles.sortOptions}>\r\n        <label htmlFor=\"sort\">Sort by:</label>\r\n        <select id=\"sort\" value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"rarity\">Rarity</option>\r\n        </select>\r\n      </div>\r\n      {inventory.length === 0 ? (\r\n        <p>Your inventory is empty.</p>\r\n      ) : (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          <Droppable droppableId=\"inventory\">\r\n            {(provided) => (\r\n              <div\r\n                className={styles.inventoryGrid}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {sortedInventory.map((item, index) => {\r\n                  const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\r\n                  if (!itemData) return null;\r\n                  const rarityClass = {\r\n                    \"common\": styles.common,\r\n                    \"uncommon\": styles.uncommon,\r\n                    \"rare\": styles.rare,\r\n                    \"very rare\": styles.veryRare,\r\n                    \"mythical\": styles.mythical,\r\n                    \"quest\": styles.quest\r\n                  };\r\n                  return (\r\n                    <Draggable key={item.itemId} draggableId={item.itemId.toString()} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className={`${styles.inventoryItem} ${rarityClass[itemData.rarity]}`}\r\n                          onMouseEnter={(e) => setHoveredItem({ itemData, position: getTooltipPosition(e.currentTarget) })}\r\n                          onMouseLeave={() => setHoveredItem(null)}\r\n                          onClick={() => setSelectedItem(selectedItem === item ? null : item)}\r\n                        >\r\n                          <img src={`http://localhost:5000/assets/images/items/${itemData.image}`} alt={itemData.name} className={styles.itemImage} />\r\n                          <p>{itemData.name} (x{item.quantity})</p>\r\n                          {selectedItem && selectedItem.itemId === item.itemId && !dropItem && (\r\n                            <div>\r\n                              {itemData.type === \"weapon\" && (\r\n                                <>\r\n                                  <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                                  <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                                </>\r\n                              )}\r\n\r\n                              {itemData.type === \"armor\" && (\r\n                                <>\r\n                                  <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                                  <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                                </>\r\n                              )}\r\n\r\n                              {itemData.type === \"jewelry\" && (\r\n                                <>\r\n                                  <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                                  <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                                </>\r\n                              )}\r\n\r\n                              {itemData.type === \"food\" && (\r\n                                <>\r\n                                  <button className={styles.eatButton} onClick={() => handleItemAction(item.itemId, 'use')}>Eat</button>\r\n                                  <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                                </>\r\n                              )}\r\n                              \r\n                              {itemData.type === \"potion\" && (\r\n                                <>\r\n                                  <button className={styles.drinkButton} onClick={() => handleItemAction(item.itemId, 'use')}>Drink</button>\r\n                                  <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                                </>\r\n                              )}\r\n                              \r\n                              {itemData.type === \"quest\" ? (\r\n                                <button className={styles.questButton}>Quest Item</button>\r\n                              ) : (itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\") && (\r\n                                <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                          {hoveredItem && hoveredItem.itemData.itemId === item.itemId && (\r\n                            <div className={styles.tooltip} style={hoveredItem.position}>\r\n                              <p><strong>{hoveredItem.itemData.name}</strong></p>\r\n                              <p>{hoveredItem.itemData.description}</p>\r\n                              {hoveredItem.itemData.attackBoost !== undefined && hoveredItem.itemData.attackBoost !== 0 && <p>Attack Boost: {hoveredItem.itemData.attackBoost}</p>}\r\n                              {hoveredItem.itemData.defenceBoost !== undefined && hoveredItem.itemData.defenceBoost !== 0 && <p>Defence Boost: {hoveredItem.itemData.defenceBoost}</p>}\r\n                              {hoveredItem.itemData.effect && hoveredItem.itemData.effect.heal && <p>Heal: {hoveredItem.itemData.effect.heal}</p>}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}