{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\inventory\\\\inventory.js\";\n// /components/inventory/inventory.js\nimport React from 'react';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  inventory = [],\n  setPlayer\n}) {\n  // Function to add a random item to inventory (for dev purposes)\n  const handleAddRandomItem = () => {\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\n    if (!randomItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\n      if (randomItem.type === 'quest') {\n        // Ensure quest items cannot be stacked and are unique\n        if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      } else {\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 25) {\n          updatedInventory[existingItemIndex].quantity += 1;\n        } else if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n  };\n\n  // Function to equip an item to a specific slot\n  const handleEquipItem = item => {\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex < 0) return prevPlayer;\n      let updatedEquipment = {\n        ...prevPlayer.equipment\n      }; // Keep track of equipped items\n\n      // Use the item slot directly from item data\n      const slot = item.slot;\n      if (slot === \"fingers\") {\n        // Equip to the first available finger slot\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\n        if (ringSlotIndex !== -1) {\n          updatedEquipment.fingers[ringSlotIndex] = item;\n        } else {\n          const replacedItem = updatedEquipment.fingers[0];\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\n          if (replacedItem) {\n            updatedInventory.push(replacedItem);\n            console.log('Returned item to inventory:', replacedItem);\n          }\n        }\n      } else if (slot === \"neck\") {\n        // Equip to neck slot\n        if (updatedEquipment.neck) {\n          updatedInventory.push(updatedEquipment.neck); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment.neck);\n        }\n        updatedEquipment.neck = item; // Equip the item\n      } else {\n        if (updatedEquipment[slot]) {\n          updatedInventory.push(updatedEquipment[slot]); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\n        }\n        updatedEquipment[slot] = item; // Equip the item\n      }\n\n      // Remove the item from inventory\n      if (updatedInventory[itemIndex].quantity > 1) {\n        updatedInventory[itemIndex].quantity -= 1;\n      } else {\n        updatedInventory.splice(itemIndex, 1);\n      }\n      console.log('Current equipment:', updatedEquipment);\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory,\n        equipment: updatedEquipment\n      };\n    });\n  };\n\n  // Function to handle item actions from inventory\n  const handleItemAction = (itemId, action) => {\n    const item = itemConfig.items.find(i => i.itemId === itemId);\n    if (!item) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\n      if (itemIndex >= 0) {\n        if (item.type === 'quest') {\n          alert('This is a quest item and cannot be dropped or used.');\n          return prevPlayer;\n        }\n        if (action === \"drop\") {\n          updatedInventory.splice(itemIndex, 1);\n        } else if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else if (action === \"use\") {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply item effect if the action is to use\n      let updatedPlayer = {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n      if (action === \"use\") {\n        if (item.type === \"food\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"potion\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"weapon\" && item.attackBoost) {\n          updatedPlayer.attackPower += item.attackBoost;\n        } else if (item.type === \"armor\" && item.defenseBoost) {\n          updatedPlayer.defencePower += item.defenseBoost;\n        }\n      }\n      return updatedPlayer;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRandomItem,\n      className: styles.devButton,\n      children: \"Add Random Item (Dev)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), inventory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your inventory is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventoryGrid,\n      children: inventory.map((item, index) => {\n        const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n        if (!itemData) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inventoryItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/assets/images/items/${itemData.image}`,\n            alt: itemData.name,\n            className: styles.itemImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [itemData.name, \" (x\", item.quantity, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), itemData.type === \"weapon\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEquipItem(item),\n              children: \"Equip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'drop'),\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), itemData.type === \"armor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEquipItem(item),\n              children: \"Equip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'drop'),\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), itemData.type === \"jewelry\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEquipItem(item),\n              children: \"Equip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'drop'),\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), itemData.type === \"food\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'use'),\n              children: \"Eat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'drop'),\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), itemData.type === \"potion\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'use'),\n              children: \"Drink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleItemAction(item.itemId, 'drop'),\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), itemData.type === \"quest\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Quest Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this) : itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleItemAction(item.itemId, 'drop'),\n            children: \"Drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","styles","itemConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Inventory","inventory","setPlayer","handleAddRandomItem","randomItem","items","Math","floor","random","length","prevPlayer","updatedInventory","existingItemIndex","findIndex","i","itemId","type","push","quantity","handleEquipItem","item","itemIndex","updatedEquipment","equipment","slot","ringSlotIndex","fingers","replacedItem","console","log","neck","splice","handleItemAction","action","find","alert","updatedPlayer","effect","heal","hitpoints","min","maxHitPoints","attackBoost","attackPower","defenseBoost","defencePower","className","inventoryContainer","children","onClick","devButton","fileName","_jsxFileName","lineNumber","columnNumber","inventoryGrid","map","index","itemData","inventoryItem","src","image","alt","name","itemImage","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/inventory/inventory.js"],"sourcesContent":["// /components/inventory/inventory.js\r\nimport React from 'react';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nfunction Inventory({ inventory = [], setPlayer }) {\r\n  // Function to add a random item to inventory (for dev purposes)\r\n  const handleAddRandomItem = () => {\r\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\r\n    if (!randomItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\r\n\r\n      if (randomItem.type === 'quest') {\r\n        // Ensure quest items cannot be stacked and are unique\r\n        if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      } else {\r\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 25) {\r\n          updatedInventory[existingItemIndex].quantity += 1;\r\n        } else if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n  };\r\n\r\n  // Function to equip an item to a specific slot\r\n  const handleEquipItem = (item) => {\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\r\n      if (itemIndex < 0) return prevPlayer;\r\n\r\n      let updatedEquipment = { ...prevPlayer.equipment }; // Keep track of equipped items\r\n\r\n      // Use the item slot directly from item data\r\n      const slot = item.slot;\r\n\r\n      if (slot === \"fingers\") {\r\n        // Equip to the first available finger slot\r\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\r\n        if (ringSlotIndex !== -1) {\r\n          updatedEquipment.fingers[ringSlotIndex] = item;\r\n        } else {\r\n          const replacedItem = updatedEquipment.fingers[0];\r\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\r\n          if (replacedItem) {\r\n            updatedInventory.push(replacedItem);\r\n            console.log('Returned item to inventory:', replacedItem);\r\n          }\r\n        }\r\n      } else if (slot === \"neck\") {\r\n        // Equip to neck slot\r\n        if (updatedEquipment.neck) {\r\n          updatedInventory.push(updatedEquipment.neck); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment.neck);\r\n        }\r\n        updatedEquipment.neck = item; // Equip the item\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          updatedInventory.push(updatedEquipment[slot]); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\r\n        }\r\n        updatedEquipment[slot] = item; // Equip the item\r\n      }\r\n\r\n      // Remove the item from inventory\r\n      if (updatedInventory[itemIndex].quantity > 1) {\r\n        updatedInventory[itemIndex].quantity -= 1;\r\n      } else {\r\n        updatedInventory.splice(itemIndex, 1);\r\n      }\r\n\r\n      console.log('Current equipment:', updatedEquipment);\r\n      return { ...prevPlayer, inventory: updatedInventory, equipment: updatedEquipment };\r\n    });\r\n  };\r\n\r\n  // Function to handle item actions from inventory\r\n  const handleItemAction = (itemId, action) => {\r\n    const item = itemConfig.items.find((i) => i.itemId === itemId);\r\n    if (!item) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\r\n      if (itemIndex >= 0) {\r\n        if (item.type === 'quest') {\r\n          alert('This is a quest item and cannot be dropped or used.');\r\n          return prevPlayer;\r\n        }\r\n\r\n        if (action === \"drop\") {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        } else if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else if (action === \"use\") {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply item effect if the action is to use\r\n      let updatedPlayer = { ...prevPlayer, inventory: updatedInventory };\r\n      if (action === \"use\") {\r\n        if (item.type === \"food\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"potion\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"weapon\" && item.attackBoost) {\r\n          updatedPlayer.attackPower += item.attackBoost;\r\n        } else if (item.type === \"armor\" && item.defenseBoost) {\r\n          updatedPlayer.defencePower += item.defenseBoost;\r\n        }\r\n      }\r\n\r\n      return updatedPlayer;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <button onClick={handleAddRandomItem} className={styles.devButton}>Add Random Item (Dev)</button>\r\n      {inventory.length === 0 ? (\r\n        <p>Your inventory is empty.</p>\r\n      ) : (\r\n        <div className={styles.inventoryGrid}>\r\n          {inventory.map((item, index) => {\r\n            const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\r\n            if (!itemData) return null;\r\n            return (\r\n              <div key={index} className={styles.inventoryItem}>\r\n                <img src={`http://localhost:5000/assets/images/items/${itemData.image}`} alt={itemData.name} className={styles.itemImage} />\r\n                <p>{itemData.name} (x{item.quantity})</p>\r\n                \r\n                {itemData.type === \"weapon\" && (\r\n                  <>\r\n                    <button onClick={() => handleEquipItem(item)}>Equip</button>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                  </>\r\n                )}\r\n\r\n                {itemData.type === \"armor\" && (\r\n                  <>\r\n                    <button onClick={() => handleEquipItem(item)}>Equip</button>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                  </>\r\n                )}\r\n\r\n                {itemData.type === \"jewelry\" && (\r\n                  <>\r\n                    <button onClick={() => handleEquipItem(item)}>Equip</button>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                  </>\r\n                )}\r\n\r\n                {itemData.type === \"food\" && (\r\n                  <>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'use')}>Eat</button>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                  </>\r\n                )}\r\n                \r\n                {itemData.type === \"potion\" && (\r\n                  <>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'use')}>Drink</button>\r\n                    <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                  </>\r\n                )}\r\n                \r\n                {itemData.type === \"quest\" ? (\r\n                  <button>Quest Item</button>\r\n                ) : (itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\") && (\r\n                  <button onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}