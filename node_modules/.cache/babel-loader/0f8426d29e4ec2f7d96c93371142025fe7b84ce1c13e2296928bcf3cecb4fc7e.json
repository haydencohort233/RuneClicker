{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\worldmap\\\\worldMap.js\",\n  _s = $RefreshSig$();\n// worldMap.js\nimport React, { useState, useEffect } from 'react';\nimport styles from './worldMap.module.css';\nimport worldLocations from './worldLocations.json';\nimport mapIcon from '../../assets/images/icons/map.png';\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\nimport markerAvailable from '../../assets/images/worldmap/icons/marker_available.png';\nimport markerUnavailable from '../../assets/images/worldmap/icons/marker_unavailable.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isMapOpen, setIsMapOpen] = useState(false);\n  const [hoveredLocation, setHoveredLocation] = useState(null);\n  const [timeRemaining, setTimeRemaining] = useState(null);\n  useEffect(() => {\n    if (gameState.travel && gameState.travel.isTraveling) {\n      setTimeRemaining(gameState.travel.timeRemaining);\n      const timer = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev > 1) {\n            return prev - 1;\n          } else {\n            clearInterval(timer);\n            return 0;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    } else {\n      setTimeRemaining(null);\n    }\n  }, [gameState.travel]);\n\n  // Toggle map visibility\n  const toggleMap = () => {\n    setIsMapOpen(prev => !prev);\n  };\n\n  // Handle traveling prompt to a specific location\n  const promptTravelToLocation = location => {\n    if (gameState.currentLocation === location.id) {\n      console.log(\"You are already at this location.\");\n      return;\n    }\n    const confirmTravel = window.confirm(`Do you want to travel to ${location.name}?`);\n    if (confirmTravel) {\n      startTravel(location);\n    }\n  };\n\n  // Start traveling to the selected location\n  const startTravel = location => {\n    console.log(`Begin traveling to ${location.name}`);\n\n    // Set travel state in gameState\n    setGameState(prevState => {\n      const newGameState = {\n        ...prevState,\n        travel: {\n          currentLocation: prevState.currentLocation,\n          destination: location.name,\n          timeRemaining: location.travelTime,\n          // Use location's configurable travel time\n          isTraveling: true\n        }\n      };\n      console.log(\"Updated Game State (Start Travel): \", newGameState);\n      return newGameState;\n    });\n\n    // Update gameState once travel is complete\n    setTimeout(() => {\n      setGameState(prevState => {\n        const completedGameState = {\n          ...prevState,\n          currentLocation: location.id,\n          travel_count: (prevState.travel_count || 0) + 1,\n          travel: {\n            currentLocation: location.id,\n            destination: '',\n            timeRemaining: 0,\n            isTraveling: false\n          }\n        };\n        console.log(\"Updated Game State (Travel Complete): \", completedGameState);\n        return completedGameState;\n      });\n\n      // Optionally save the game state after traveling\n      // saveGameToServer(); // Uncomment this if save function is available\n    }, location.travelTime * 1000); // Use location's configurable travel time in seconds\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.worldMapContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMap,\n      className: styles.mapButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapIcon,\n        alt: \"Map\",\n        className: styles.mapIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.currentLocation,\n      children: [\"Currently at: \", gameState.currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), gameState.travel && gameState.travel.isTraveling && timeRemaining !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.timeRemaining,\n      children: [\"Time until arrival: \", timeRemaining, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), isMapOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: worldMapImage,\n        alt: \"World Map\",\n        className: styles.mapImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.locationsContainer,\n        children: worldLocations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.locationMarker,\n            style: {\n              top: location.coordinates.top,\n              left: location.coordinates.left,\n              backgroundImage: `url(${gameState.currentLocation === location.id ? markerUnavailable : markerAvailable})`\n            },\n            onClick: () => promptTravelToLocation(location)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, location.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMap,\n        className: styles.closeButton,\n        children: \"Close Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"ucZ0alsimxdJR+yttRI+UbfxqQM=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useEffect","styles","worldLocations","mapIcon","worldMapImage","markerAvailable","markerUnavailable","jsxDEV","_jsxDEV","WorldMap","gameState","setGameState","_s","isMapOpen","setIsMapOpen","hoveredLocation","setHoveredLocation","timeRemaining","setTimeRemaining","travel","isTraveling","timer","setInterval","prev","clearInterval","toggleMap","promptTravelToLocation","location","currentLocation","id","console","log","confirmTravel","window","confirm","name","startTravel","prevState","newGameState","destination","travelTime","setTimeout","completedGameState","travel_count","className","worldMapContainer","children","onClick","mapButton","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","mapModal","mapImage","locationsContainer","map","locationMarker","style","top","coordinates","left","backgroundImage","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/worldmap/worldMap.js"],"sourcesContent":["// worldMap.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './worldMap.module.css';\r\nimport worldLocations from './worldLocations.json';\r\nimport mapIcon from '../../assets/images/icons/map.png';\r\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\r\nimport markerAvailable from '../../assets/images/worldmap/icons/marker_available.png';\r\nimport markerUnavailable from '../../assets/images/worldmap/icons/marker_unavailable.png';\r\n\r\nfunction WorldMap({ gameState, setGameState }) {\r\n  const [isMapOpen, setIsMapOpen] = useState(false);\r\n  const [hoveredLocation, setHoveredLocation] = useState(null);\r\n  const [timeRemaining, setTimeRemaining] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (gameState.travel && gameState.travel.isTraveling) {\r\n      setTimeRemaining(gameState.travel.timeRemaining);\r\n      const timer = setInterval(() => {\r\n        setTimeRemaining((prev) => {\r\n          if (prev > 1) {\r\n            return prev - 1;\r\n          } else {\r\n            clearInterval(timer);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    } else {\r\n      setTimeRemaining(null);\r\n    }\r\n  }, [gameState.travel]);\r\n\r\n  // Toggle map visibility\r\n  const toggleMap = () => {\r\n    setIsMapOpen((prev) => !prev);\r\n  };\r\n\r\n  // Handle traveling prompt to a specific location\r\n  const promptTravelToLocation = (location) => {\r\n    if (gameState.currentLocation === location.id) {\r\n      console.log(\"You are already at this location.\");\r\n      return;\r\n    }\r\n\r\n    const confirmTravel = window.confirm(`Do you want to travel to ${location.name}?`);\r\n    if (confirmTravel) {\r\n      startTravel(location);\r\n    }\r\n  };\r\n\r\n  // Start traveling to the selected location\r\n  const startTravel = (location) => {\r\n    console.log(`Begin traveling to ${location.name}`);\r\n\r\n    // Set travel state in gameState\r\n    setGameState((prevState) => {\r\n      const newGameState = {\r\n        ...prevState,\r\n        travel: {\r\n          currentLocation: prevState.currentLocation,\r\n          destination: location.name,\r\n          timeRemaining: location.travelTime, // Use location's configurable travel time\r\n          isTraveling: true,\r\n        },\r\n      };\r\n      console.log(\"Updated Game State (Start Travel): \", newGameState);\r\n      return newGameState;\r\n    });\r\n\r\n    // Update gameState once travel is complete\r\n    setTimeout(() => {\r\n      setGameState((prevState) => {\r\n        const completedGameState = {\r\n          ...prevState,\r\n          currentLocation: location.id,\r\n          travel_count: (prevState.travel_count || 0) + 1,\r\n          travel: {\r\n            currentLocation: location.id,\r\n            destination: '',\r\n            timeRemaining: 0,\r\n            isTraveling: false,\r\n          },\r\n        };\r\n        console.log(\"Updated Game State (Travel Complete): \", completedGameState);\r\n        return completedGameState;\r\n      });\r\n\r\n      // Optionally save the game state after traveling\r\n      // saveGameToServer(); // Uncomment this if save function is available\r\n    }, location.travelTime * 1000); // Use location's configurable travel time in seconds\r\n  };\r\n\r\n  return (\r\n    <div className={styles.worldMapContainer}>\r\n      <button onClick={toggleMap} className={styles.mapButton}>\r\n        <img src={mapIcon} alt=\"Map\" className={styles.mapIcon} />\r\n      </button>\r\n\r\n      {/* Display Current Location */}\r\n      <p className={styles.currentLocation}>Currently at: {gameState.currentLocation}</p>\r\n\r\n      {/* Display Time Remaining if Traveling */}\r\n      {gameState.travel && gameState.travel.isTraveling && timeRemaining !== null && (\r\n        <p className={styles.timeRemaining}>Time until arrival: {timeRemaining} seconds</p>\r\n      )}\r\n\r\n      {isMapOpen && (\r\n        <div className={styles.mapModal}>\r\n          <img src={worldMapImage} alt=\"World Map\" className={styles.mapImage} />\r\n          <div className={styles.locationsContainer}>\r\n            {worldLocations.map((location) => (\r\n              <div key={location.id}>\r\n                {/* Location Marker */}\r\n                <div\r\n                  className={styles.locationMarker}\r\n                  style={{\r\n                    top: location.coordinates.top,\r\n                    left: location.coordinates.left,\r\n                    backgroundImage: `url(${\r\n                      gameState.currentLocation === location.id\r\n                        ? markerUnavailable\r\n                        : markerAvailable\r\n                    })`,\r\n                  }}\r\n                  onClick={() => promptTravelToLocation(location)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleMap} className={styles.closeButton}>Close Map</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}