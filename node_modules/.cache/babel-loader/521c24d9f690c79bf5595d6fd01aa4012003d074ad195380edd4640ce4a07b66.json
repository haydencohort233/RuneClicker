{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\inventory\\\\inventory.js\",\n  _s = $RefreshSig$();\n// /components/inventory/inventory.js\nimport React, { useState, useEffect } from 'react';\nimport styles from './inventory.module.css';\nimport itemConfig from '../items/itemConfig.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Inventory({\n  inventory = [],\n  setPlayer,\n  maxInventorySpace\n}) {\n  _s();\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const [sortOption, setSortOption] = useState('rarity');\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [dropItem, setDropItem] = useState(null);\n  const handleAddRandomItem = () => {\n    if (inventory.length >= maxInventorySpace) {\n      alert('Inventory is full! Cannot add more items.');\n      return;\n    }\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\n    if (!randomItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\n      if (randomItem.type === 'quest') {\n        // Ensure quest items cannot be stacked and are unique\n        if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      } else {\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\n          updatedInventory[existingItemIndex].quantity += 1;\n        } else if (existingItemIndex === -1) {\n          updatedInventory.push({\n            ...randomItem,\n            quantity: 1\n          });\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n  };\n\n  // Function to equip an item to a specific slot\n  const handleEquipItem = item => {\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\n      if (itemIndex < 0) return prevPlayer;\n      let updatedEquipment = {\n        ...prevPlayer.equipment\n      };\n      // Ensure all equipment slots are defined\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\n\n      // Use the item slot directly from item data\n      const slot = item.slot;\n      if (slot === \"fingers\") {\n        // Equip to the first available finger slot\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\n        if (ringSlotIndex !== -1) {\n          updatedEquipment.fingers[ringSlotIndex] = item;\n        } else {\n          const replacedItem = updatedEquipment.fingers[0];\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\n          if (replacedItem) {\n            addItemToInventory(updatedInventory, replacedItem);\n            console.log('Returned item to inventory:', replacedItem);\n          }\n        }\n      } else if (slot === \"neck\") {\n        // Equip to neck slot\n        if (updatedEquipment.neck) {\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment.neck);\n        }\n        updatedEquipment.neck = item; // Equip the item\n      } else {\n        if (updatedEquipment[slot]) {\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\n        }\n        updatedEquipment[slot] = item; // Equip the item\n      }\n\n      // Remove the item from inventory\n      if (updatedInventory[itemIndex].quantity > 1) {\n        updatedInventory[itemIndex].quantity -= 1;\n      } else {\n        updatedInventory.splice(itemIndex, 1);\n      }\n      console.log('Current equipment:', updatedEquipment);\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory,\n        equipment: updatedEquipment\n      };\n    });\n  };\n\n  // Tooltip Position Logic\n  const getTooltipPosition = element => {\n    if (!element) return {\n      top: '100%',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    };\n    const rect = element.getBoundingClientRect();\n    const containerRect = element.closest(`.${styles.inventoryContainer}`).getBoundingClientRect();\n    const tooltipHeight = 60; // Estimated tooltip height\n    const tooltipWidth = 150; // Estimated tooltip width\n    const spaceBelow = containerRect.bottom - rect.bottom;\n    const spaceLeft = rect.left - containerRect.left;\n    let position = {};\n\n    // Determine vertical position\n    if (spaceBelow >= tooltipHeight) {\n      position = {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(-50%)'\n      };\n    } else {\n      position = {\n        bottom: '110%',\n        left: '50%',\n        transform: 'translateX(-50%)'\n      };\n    }\n\n    // Adjust horizontal position if tooltip is going off the container on the left side\n    if (spaceLeft < tooltipWidth / 2) {\n      position.left = '0';\n      position.transform = 'translateX(10%)';\n    }\n    return position;\n  };\n\n  // Helper function to add item to inventory, considering stacking and space limitations\n  const addItemToInventory = (inventory, item) => {\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\n      inventory[existingItemIndex].quantity += 1;\n    } else if (existingItemIndex >= 0) {\n      // Stack the item if it already exists but the quantity is at max\n      inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\n    } else if (inventory.length < maxInventorySpace) {\n      inventory.push({\n        ...item,\n        quantity: 1\n      });\n    } else {\n      alert('Inventory is full! Cannot unequip the item.');\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\n    }\n  };\n\n  // Function to handle item actions from inventory\n  const handleItemAction = (itemId, action) => {\n    const item = itemConfig.items.find(i => i.itemId === itemId);\n    if (!item) return;\n    if (action === 'drop') {\n      setDropItem(item);\n      setSelectedItem(item);\n      return;\n    }\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\n      if (itemIndex >= 0) {\n        if (item.type === 'quest') {\n          alert('This is a quest item and cannot be dropped or used.');\n          return prevPlayer;\n        }\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\n          updatedInventory[itemIndex].quantity -= 1;\n        } else if (action === \"use\") {\n          updatedInventory.splice(itemIndex, 1);\n        }\n      }\n\n      // Apply item effect if the action is to use\n      let updatedPlayer = {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n      if (action === \"use\") {\n        if (item.type === \"food\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"potion\" && item.effect.heal) {\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\n        } else if (item.type === \"weapon\" && item.attackBoost) {\n          updatedPlayer.attackPower += item.attackBoost;\n        } else if (item.type === \"armor\" && item.defenceBoost) {\n          updatedPlayer.defencePower += item.defenceBoost;\n        }\n      }\n      return updatedPlayer;\n    });\n  };\n\n  // Function to drop a specific quantity of an item\n  const handleDropQuantity = quantity => {\n    if (!dropItem) return;\n    setPlayer(prevPlayer => {\n      let updatedInventory = [...prevPlayer.inventory];\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\n      if (itemIndex >= 0) {\n        if (quantity >= updatedInventory[itemIndex].quantity) {\n          updatedInventory.splice(itemIndex, 1);\n        } else {\n          updatedInventory[itemIndex].quantity -= quantity;\n        }\n      }\n      return {\n        ...prevPlayer,\n        inventory: updatedInventory\n      };\n    });\n    setDropItem(null);\n    setSelectedItem(null);\n  };\n\n  // Sort inventory based on the selected sort option\n  const sortedInventory = [...inventory].sort((a, b) => {\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\n    if (!itemA || !itemB) return 0;\n    if (sortOption === 'rarity') {\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inventoryContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRandomItem,\n      className: styles.devButton,\n      children: \"Add Random Item (Dev)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sortOptions,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortOption,\n        onChange: e => setSortOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rarity\",\n          children: \"Rarity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), inventory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your inventory is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inventoryGrid,\n      children: sortedInventory.map((item, index) => {\n        var _inventory$find;\n        const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\n        if (!itemData) return null;\n        const rarityClass = {\n          \"common\": styles.common,\n          \"uncommon\": styles.uncommon,\n          \"rare\": styles.rare,\n          \"very rare\": styles.veryRare,\n          \"mythical\": styles.mythical,\n          \"quest\": styles.quest\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inventoryItem} ${rarityClass[itemData.rarity]}`,\n          onMouseEnter: e => setHoveredItem({\n            itemData,\n            position: getTooltipPosition(e.currentTarget)\n          }),\n          onMouseLeave: () => setHoveredItem(null),\n          onClick: () => setSelectedItem(selectedItem === item ? null : item),\n          children: [dropItem && dropItem.itemId === item.itemId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dropOptions,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Drop \", dropItem.name, \" (x\", ((_inventory$find = inventory.find(i => i.itemId === dropItem.itemId)) === null || _inventory$find === void 0 ? void 0 : _inventory$find.quantity) || 1, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropOneButton,\n              onClick: () => handleDropQuantity(1),\n              children: \"Drop 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropXButton,\n              onClick: () => handleDropQuantity(prompt('Enter quantity to drop:', '1')),\n              children: \"Drop X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.dropAllButton,\n              onClick: () => {\n                var _inventory$find2;\n                return handleDropQuantity(((_inventory$find2 = inventory.find(i => i.itemId === dropItem.itemId)) === null || _inventory$find2 === void 0 ? void 0 : _inventory$find2.quantity) || 1);\n              },\n              children: \"Drop All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.cancelButton,\n              onClick: () => {\n                setDropItem(null);\n                setSelectedItem(null);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${itemData.image}`,\n              alt: itemData.name,\n              className: styles.itemImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [itemData.name, \" (x\", item.quantity, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), selectedItem && selectedItem.itemId === item.itemId && !dropItem && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [itemData.type === \"weapon\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"armor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"jewelry\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.equipButton,\n                  onClick: () => handleEquipItem(item),\n                  children: \"Equip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"food\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.eatButton,\n                  onClick: () => handleItemAction(item.itemId, 'use'),\n                  children: \"Eat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"potion\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.drinkButton,\n                  onClick: () => handleItemAction(item.itemId, 'use'),\n                  children: \"Drink\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.dropButton,\n                  onClick: () => handleItemAction(item.itemId, 'drop'),\n                  children: \"Drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), itemData.type === \"quest\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.questButton,\n                children: \"Quest Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 27\n              }, this) : itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.dropButton,\n                onClick: () => handleItemAction(item.itemId, 'drop'),\n                children: \"Drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true), hoveredItem && hoveredItem.itemData.itemId === item.itemId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            style: hoveredItem.position,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: hoveredItem.itemData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: hoveredItem.itemData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this), hoveredItem.itemData.attackBoost !== undefined && hoveredItem.itemData.attackBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Attack Boost: \", hoveredItem.itemData.attackBoost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 118\n            }, this), hoveredItem.itemData.defenceBoost !== undefined && hoveredItem.itemData.defenceBoost !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Defence Boost: \", hoveredItem.itemData.defenceBoost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 120\n            }, this), hoveredItem.itemData.effect && hoveredItem.itemData.effect.heal && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Heal: \", hoveredItem.itemData.effect.heal]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"oZeOAcFNXUIbXQqYsCrN8j2NHLs=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","styles","itemConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Inventory","inventory","setPlayer","maxInventorySpace","_s","hoveredItem","setHoveredItem","sortOption","setSortOption","isOpen","setIsOpen","selectedItem","setSelectedItem","dropItem","setDropItem","handleAddRandomItem","length","alert","randomItem","items","Math","floor","random","prevPlayer","updatedInventory","existingItemIndex","findIndex","i","itemId","type","push","quantity","handleEquipItem","item","itemIndex","updatedEquipment","equipment","fingers","neck","slot","ringSlotIndex","replacedItem","addItemToInventory","console","log","splice","getTooltipPosition","element","top","left","transform","rect","getBoundingClientRect","containerRect","closest","inventoryContainer","tooltipHeight","tooltipWidth","spaceBelow","bottom","spaceLeft","position","min","Error","handleItemAction","action","find","updatedPlayer","effect","heal","hitpoints","maxHitPoints","attackBoost","attackPower","defenceBoost","defencePower","handleDropQuantity","sortedInventory","sort","a","b","itemA","itemB","rarityOrder","indexOf","rarity","className","children","onClick","devButton","fileName","_jsxFileName","lineNumber","columnNumber","sortOptions","htmlFor","id","value","onChange","e","target","inventoryGrid","map","index","_inventory$find","itemData","rarityClass","common","uncommon","rare","veryRare","mythical","quest","inventoryItem","onMouseEnter","currentTarget","onMouseLeave","dropOptions","name","dropOneButton","dropXButton","prompt","dropAllButton","_inventory$find2","cancelButton","src","image","alt","itemImage","equipButton","dropButton","eatButton","drinkButton","questButton","tooltip","style","description","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/inventory/inventory.js"],"sourcesContent":["// /components/inventory/inventory.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './inventory.module.css';\r\nimport itemConfig from '../items/itemConfig.json';\r\n\r\nfunction Inventory({ inventory = [], setPlayer, maxInventorySpace }) {\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n  const [sortOption, setSortOption] = useState('rarity');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [dropItem, setDropItem] = useState(null);\r\n\r\n  const handleAddRandomItem = () => {\r\n    if (inventory.length >= maxInventorySpace) {\r\n      alert('Inventory is full! Cannot add more items.');\r\n      return;\r\n    }\r\n    \r\n    const randomItem = itemConfig.items[Math.floor(Math.random() * itemConfig.items.length)];\r\n    if (!randomItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const existingItemIndex = updatedInventory.findIndex(i => i.itemId === randomItem.itemId);\r\n\r\n      if (randomItem.type === 'quest') {\r\n        // Ensure quest items cannot be stacked and are unique\r\n        if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      } else {\r\n        if (existingItemIndex >= 0 && updatedInventory[existingItemIndex].quantity < 65535) {\r\n          updatedInventory[existingItemIndex].quantity += 1;\r\n        } else if (existingItemIndex === -1) {\r\n          updatedInventory.push({ ...randomItem, quantity: 1 });\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n  };\r\n\r\n  // Function to equip an item to a specific slot\r\n  const handleEquipItem = (item) => {\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === item.itemId);\r\n      if (itemIndex < 0) return prevPlayer;\r\n\r\n      let updatedEquipment = { ...prevPlayer.equipment };\r\n      // Ensure all equipment slots are defined\r\n      if (!updatedEquipment.fingers) updatedEquipment.fingers = [null, null];\r\n      if (!updatedEquipment.neck) updatedEquipment.neck = null; // Keep track of equipped items\r\n\r\n      // Use the item slot directly from item data\r\n      const slot = item.slot;\r\n\r\n      if (slot === \"fingers\") {\r\n        // Equip to the first available finger slot\r\n        const ringSlotIndex = updatedEquipment.fingers.findIndex(slot => slot === null);\r\n        if (ringSlotIndex !== -1) {\r\n          updatedEquipment.fingers[ringSlotIndex] = item;\r\n        } else {\r\n          const replacedItem = updatedEquipment.fingers[0];\r\n          updatedEquipment.fingers[0] = item; // Replace first ring if both are occupied\r\n          if (replacedItem) {\r\n            addItemToInventory(updatedInventory, replacedItem);\r\n            console.log('Returned item to inventory:', replacedItem);\r\n          }\r\n        }\r\n      } else if (slot === \"neck\") {\r\n        // Equip to neck slot\r\n        if (updatedEquipment.neck) {\r\n          addItemToInventory(updatedInventory, updatedEquipment.neck); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment.neck);\r\n        }\r\n        updatedEquipment.neck = item; // Equip the item\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          addItemToInventory(updatedInventory, updatedEquipment[slot]); // Return the previously equipped item to inventory\r\n          console.log('Returned item to inventory:', updatedEquipment[slot]);\r\n        }\r\n        updatedEquipment[slot] = item; // Equip the item\r\n      }\r\n\r\n      // Remove the item from inventory\r\n      if (updatedInventory[itemIndex].quantity > 1) {\r\n        updatedInventory[itemIndex].quantity -= 1;\r\n      } else {\r\n        updatedInventory.splice(itemIndex, 1);\r\n      }\r\n\r\n      console.log('Current equipment:', updatedEquipment);\r\n      return { ...prevPlayer, inventory: updatedInventory, equipment: updatedEquipment };\r\n    });\r\n  };\r\n\r\n  // Tooltip Position Logic\r\n  const getTooltipPosition = (element) => {\r\n    if (!element) return { top: '100%', left: '50%', transform: 'translateX(-50%)' };\r\n\r\n    const rect = element.getBoundingClientRect();\r\n    const containerRect = element.closest(`.${styles.inventoryContainer}`).getBoundingClientRect();\r\n    const tooltipHeight = 60; // Estimated tooltip height\r\n    const tooltipWidth = 150; // Estimated tooltip width\r\n    const spaceBelow = containerRect.bottom - rect.bottom;\r\n    const spaceLeft = rect.left - containerRect.left;\r\n\r\n    let position = {};\r\n\r\n    // Determine vertical position\r\n    if (spaceBelow >= tooltipHeight) {\r\n      position = { top: '100%', left: '50%', transform: 'translateX(-50%)' };\r\n    } else {\r\n      position = { bottom: '110%', left: '50%', transform: 'translateX(-50%)' };\r\n    }\r\n\r\n    // Adjust horizontal position if tooltip is going off the container on the left side\r\n    if (spaceLeft < tooltipWidth / 2) {\r\n      position.left = '0';\r\n      position.transform = 'translateX(10%)';\r\n    }\r\n\r\n    return position;\r\n  };\r\n\r\n  // Helper function to add item to inventory, considering stacking and space limitations\r\n  const addItemToInventory = (inventory, item) => {\r\n    const existingItemIndex = inventory.findIndex(i => i.itemId === item.itemId);\r\n\r\n    if (existingItemIndex >= 0 && inventory[existingItemIndex].quantity < 65535) {\r\n      inventory[existingItemIndex].quantity += 1;\r\n    } else if (existingItemIndex >= 0) {\r\n        // Stack the item if it already exists but the quantity is at max\r\n        inventory[existingItemIndex].quantity = Math.min(inventory[existingItemIndex].quantity + 1, 65535);\r\n    } else if (inventory.length < maxInventorySpace) {\r\n      inventory.push({ ...item, quantity: 1 });\r\n    } else {\r\n      alert('Inventory is full! Cannot unequip the item.');\r\n      throw new Error('Inventory is full.'); // Prevent further unequip if inventory is full\r\n    }\r\n  };\r\n\r\n  // Function to handle item actions from inventory\r\n  const handleItemAction = (itemId, action) => {\r\n    const item = itemConfig.items.find((i) => i.itemId === itemId);\r\n    if (!item) return;\r\n\r\n    if (action === 'drop') {\r\n      setDropItem(item);\r\n      setSelectedItem(item);\r\n      return;\r\n    }\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === itemId);\r\n      if (itemIndex >= 0) {\r\n        if (item.type === 'quest') {\r\n          alert('This is a quest item and cannot be dropped or used.');\r\n          return prevPlayer;\r\n        }\r\n\r\n        if (action === \"use\" && updatedInventory[itemIndex].quantity > 1) {\r\n          updatedInventory[itemIndex].quantity -= 1;\r\n        } else if (action === \"use\") {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        }\r\n      }\r\n\r\n      // Apply item effect if the action is to use\r\n      let updatedPlayer = { ...prevPlayer, inventory: updatedInventory };\r\n      if (action === \"use\") {\r\n        if (item.type === \"food\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"potion\" && item.effect.heal) {\r\n          updatedPlayer.hitpoints = Math.min(updatedPlayer.maxHitPoints, updatedPlayer.hitpoints + item.effect.heal);\r\n        } else if (item.type === \"weapon\" && item.attackBoost) {\r\n          updatedPlayer.attackPower += item.attackBoost;\r\n        } else if (item.type === \"armor\" && item.defenceBoost) {\r\n          updatedPlayer.defencePower += item.defenceBoost;\r\n        }\r\n      }\r\n\r\n      return updatedPlayer;\r\n    });\r\n  };\r\n\r\n  // Function to drop a specific quantity of an item\r\n  const handleDropQuantity = (quantity) => {\r\n    if (!dropItem) return;\r\n\r\n    setPlayer((prevPlayer) => {\r\n      let updatedInventory = [...prevPlayer.inventory];\r\n      const itemIndex = updatedInventory.findIndex(i => i.itemId === dropItem.itemId);\r\n      if (itemIndex >= 0) {\r\n        if (quantity >= updatedInventory[itemIndex].quantity) {\r\n          updatedInventory.splice(itemIndex, 1);\r\n        } else {\r\n          updatedInventory[itemIndex].quantity -= quantity;\r\n        }\r\n      }\r\n\r\n      return { ...prevPlayer, inventory: updatedInventory };\r\n    });\r\n    setDropItem(null);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  // Sort inventory based on the selected sort option\r\n  const sortedInventory = [...inventory].sort((a, b) => {\r\n    const itemA = itemConfig.items.find(i => i.itemId === a.itemId);\r\n    const itemB = itemConfig.items.find(i => i.itemId === b.itemId);\r\n    if (!itemA || !itemB) return 0;\r\n\r\n    if (sortOption === 'rarity') {\r\n      const rarityOrder = [\"common\", \"uncommon\", \"rare\", \"very rare\", \"mythical\", \"quest\"];\r\n      return rarityOrder.indexOf(itemA.rarity) - rarityOrder.indexOf(itemB.rarity);\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.inventoryContainer}>\r\n      <button onClick={handleAddRandomItem} className={styles.devButton}>Add Random Item (Dev)</button>\r\n      <div className={styles.sortOptions}>\r\n        <label htmlFor=\"sort\">Sort by:</label>\r\n        <select id=\"sort\" value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"rarity\">Rarity</option>\r\n        </select>\r\n      </div>\r\n      {inventory.length === 0 ? (\r\n        <p>Your inventory is empty.</p>\r\n      ) : (\r\n        <div className={styles.inventoryGrid}>\r\n          {sortedInventory.map((item, index) => {\r\n            const itemData = itemConfig.items.find(i => i.itemId === item.itemId);\r\n            if (!itemData) return null;\r\n            const rarityClass = {\r\n              \"common\": styles.common,\r\n              \"uncommon\": styles.uncommon,\r\n              \"rare\": styles.rare,\r\n              \"very rare\": styles.veryRare,\r\n              \"mythical\": styles.mythical,\r\n              \"quest\": styles.quest\r\n            };\r\n            return (\r\n              <div \r\n                key={index} \r\n                className={`${styles.inventoryItem} ${rarityClass[itemData.rarity]}`}\r\n                onMouseEnter={(e) => setHoveredItem({ itemData, position: getTooltipPosition(e.currentTarget) })}\r\n                onMouseLeave={() => setHoveredItem(null)}\r\n                onClick={() => setSelectedItem(selectedItem === item ? null : item)}\r\n              >\r\n                {dropItem && dropItem.itemId === item.itemId ? (\r\n                  <div className={styles.dropOptions}>\r\n                    <p>Drop {dropItem.name} (x{inventory.find(i => i.itemId === dropItem.itemId)?.quantity || 1})</p>\r\n                    <button className={styles.dropOneButton} onClick={() => handleDropQuantity(1)}>Drop 1</button>\r\n                    <button className={styles.dropXButton} onClick={() => handleDropQuantity(prompt('Enter quantity to drop:', '1'))}>Drop X</button>\r\n                    <button className={styles.dropAllButton} onClick={() => handleDropQuantity(inventory.find(i => i.itemId === dropItem.itemId)?.quantity || 1)}>Drop All</button>\r\n                    <button className={styles.cancelButton} onClick={() => { setDropItem(null); setSelectedItem(null); }}>Cancel</button>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <img src={`http://localhost:5000/assets/images/items/${itemData.image}`} alt={itemData.name} className={styles.itemImage} />\r\n                    <p>{itemData.name} (x{item.quantity})</p>\r\n                    {selectedItem && selectedItem.itemId === item.itemId && !dropItem && (\r\n                      <div>\r\n                        {itemData.type === \"weapon\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"armor\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"jewelry\" && (\r\n                          <>\r\n                            <button className={styles.equipButton} onClick={() => handleEquipItem(item)}>Equip</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n\r\n                        {itemData.type === \"food\" && (\r\n                          <>\r\n                            <button className={styles.eatButton} onClick={() => handleItemAction(item.itemId, 'use')}>Eat</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n                        \r\n                        {itemData.type === \"potion\" && (\r\n                          <>\r\n                            <button className={styles.drinkButton} onClick={() => handleItemAction(item.itemId, 'use')}>Drink</button>\r\n                            <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                          </>\r\n                        )}\r\n                        \r\n                        {itemData.type === \"quest\" ? (\r\n                          <button className={styles.questButton}>Quest Item</button>\r\n                        ) : (itemData.type !== \"weapon\" && itemData.type !== \"armor\" && itemData.type !== \"food\" && itemData.type !== \"potion\" && itemData.type !== \"jewelry\") && (\r\n                          <button className={styles.dropButton} onClick={() => handleItemAction(item.itemId, 'drop')}>Drop</button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {hoveredItem && hoveredItem.itemData.itemId === item.itemId && (\r\n                      <div className={styles.tooltip} style={hoveredItem.position}>\r\n                        <p><strong>{hoveredItem.itemData.name}</strong></p>\r\n                        <p>{hoveredItem.itemData.description}</p>\r\n                        {hoveredItem.itemData.attackBoost !== undefined && hoveredItem.itemData.attackBoost !== 0 && <p>Attack Boost: {hoveredItem.itemData.attackBoost}</p>}\r\n                        {hoveredItem.itemData.defenceBoost !== undefined && hoveredItem.itemData.defenceBoost !== 0 && <p>Defence Boost: {hoveredItem.itemData.defenceBoost}</p>}\r\n                        {hoveredItem.itemData.effect && hoveredItem.itemData.effect.heal && <p>Heal: {hoveredItem.itemData.effect.heal}</p>}\r\n                      </div>\r\n                    )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}