{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\enemy\\\\Combat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './combat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Combat({\n  currentEnemy,\n  playerAttackPower,\n  enemyHealth,\n  setEnemyHealth,\n  onEndCombat,\n  onDefeat\n}) {\n  _s();\n  const [playerHealth, setPlayerHealth] = useState(100); // Example player's health\n\n  // Player attack\n  const handlePlayerAttack = () => {\n    const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\n    if (hitSuccess) {\n      const damage = Math.floor(Math.random() * playerAttackPower);\n      setEnemyHealth(prevHealth => Math.max(prevHealth - damage, 0));\n    }\n  };\n\n  // Enemy attack back\n  useEffect(() => {\n    if (currentEnemy && enemyHealth > 0) {\n      const enemyAttackInterval = setInterval(() => {\n        if (Math.random() < currentEnemy.attackChance) {\n          const damage = Math.floor(Math.random() * currentEnemy.maxHit);\n          setPlayerHealth(prevHealth => Math.max(prevHealth - damage, 0));\n        }\n      }, 2000);\n      return () => clearInterval(enemyAttackInterval);\n    }\n  }, [currentEnemy, enemyHealth]);\n  useEffect(() => {\n    if (enemyHealth <= 0) {\n      onDefeat(currentEnemy);\n      onEndCombat(); // End combat after the enemy is defeated\n    }\n  }, [enemyHealth, currentEnemy, onDefeat, onEndCombat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.combatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Combat with \", currentEnemy.enemyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Enemy Health: \", enemyHealth, \" / \", currentEnemy.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Health: \", playerHealth, \" / 100\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayerAttack,\n      className: styles.attackButton,\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onEndCombat,\n      className: styles.fleeButton,\n      children: \"Flee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Combat, \"TIWGSgsOwHtT+R9v5IngGv+j2KQ=\");\n_c = Combat;\nexport default Combat;\nvar _c;\n$RefreshReg$(_c, \"Combat\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Combat","currentEnemy","playerAttackPower","enemyHealth","setEnemyHealth","onEndCombat","onDefeat","_s","playerHealth","setPlayerHealth","handlePlayerAttack","hitSuccess","Math","random","damage","floor","prevHealth","max","enemyAttackInterval","setInterval","attackChance","maxHit","clearInterval","className","combatContainer","children","enemyName","fileName","_jsxFileName","lineNumber","columnNumber","health","onClick","attackButton","fleeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/enemy/Combat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './combat.module.css';\r\n\r\nfunction Combat({ currentEnemy, playerAttackPower, enemyHealth, setEnemyHealth, onEndCombat, onDefeat }) {\r\n  const [playerHealth, setPlayerHealth] = useState(100); // Example player's health\r\n\r\n  // Player attack\r\n  const handlePlayerAttack = () => {\r\n    const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\r\n    if (hitSuccess) {\r\n      const damage = Math.floor(Math.random() * playerAttackPower);\r\n      setEnemyHealth((prevHealth) => Math.max(prevHealth - damage, 0));\r\n    }\r\n  };\r\n\r\n  // Enemy attack back\r\n  useEffect(() => {\r\n    if (currentEnemy && enemyHealth > 0) {\r\n      const enemyAttackInterval = setInterval(() => {\r\n        if (Math.random() < currentEnemy.attackChance) {\r\n          const damage = Math.floor(Math.random() * currentEnemy.maxHit);\r\n          setPlayerHealth((prevHealth) => Math.max(prevHealth - damage, 0));\r\n        }\r\n      }, 2000);\r\n      return () => clearInterval(enemyAttackInterval);\r\n    }\r\n  }, [currentEnemy, enemyHealth]);\r\n\r\n  useEffect(() => {\r\n    if (enemyHealth <= 0) {\r\n      onDefeat(currentEnemy);\r\n      onEndCombat(); // End combat after the enemy is defeated\r\n    }\r\n  }, [enemyHealth, currentEnemy, onDefeat, onEndCombat]);\r\n\r\n  return (\r\n    <div className={styles.combatContainer}>\r\n      <h3>Combat with {currentEnemy.enemyName}</h3>\r\n      <p>Enemy Health: {enemyHealth} / {currentEnemy.health}</p>\r\n      <p>Your Health: {playerHealth} / 100</p>\r\n      <button onClick={handlePlayerAttack} className={styles.attackButton}>Attack</button>\r\n      <button onClick={onEndCombat} className={styles.fleeButton}>Flee</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Combat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}