{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\worldmap\\\\worldMap.js\",\n  _s = $RefreshSig$();\n// /components/worldmap/worldMap.js\nimport React, { useState } from 'react';\nimport styles from './worldMap.module.css';\nimport worldLocations from './worldLocations.json';\nimport mapIcon from '../../assets/images/icons/map.png';\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isMapOpen, setIsMapOpen] = useState(false);\n\n  // Toggle map visibility\n  const toggleMap = () => {\n    setIsMapOpen(prev => !prev);\n  };\n\n  // Handle traveling to a specific location\n  const travelToLocation = location => {\n    // Set travel state in gameState\n    setGameState(prevState => ({\n      ...prevState,\n      travel: {\n        destination: location.name,\n        timeRemaining: location.travelTime,\n        isTraveling: true\n      }\n    }));\n    setIsMapOpen(false); // Close the map after choosing a destination\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.worldMapContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMap,\n      className: styles.mapButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapIcon,\n        alt: \"Map\",\n        className: styles.mapIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isMapOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: worldMapImage,\n        alt: \"World Map\",\n        className: styles.mapImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.locationsContainer,\n        children: worldLocations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.locationMarker,\n          style: {\n            top: location.coordinates.top,\n            left: location.coordinates.left\n          },\n          onClick: () => travelToLocation(location),\n          children: location.name\n        }, location.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMap,\n        className: styles.closeButton,\n        children: \"Close Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"drSEYcO+8VxN5Vvb1tE5DlsL7qc=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","styles","worldLocations","mapIcon","worldMapImage","jsxDEV","_jsxDEV","WorldMap","gameState","setGameState","_s","isMapOpen","setIsMapOpen","toggleMap","prev","travelToLocation","location","prevState","travel","destination","name","timeRemaining","travelTime","isTraveling","className","worldMapContainer","children","onClick","mapButton","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","mapModal","mapImage","locationsContainer","map","locationMarker","style","top","coordinates","left","id","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/worldmap/worldMap.js"],"sourcesContent":["// /components/worldmap/worldMap.js\r\nimport React, { useState } from 'react';\r\nimport styles from './worldMap.module.css';\r\nimport worldLocations from './worldLocations.json';\r\nimport mapIcon from '../../assets/images/icons/map.png';\r\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\r\n\r\nfunction WorldMap({ gameState, setGameState }) {\r\n  const [isMapOpen, setIsMapOpen] = useState(false);\r\n\r\n  // Toggle map visibility\r\n  const toggleMap = () => {\r\n    setIsMapOpen((prev) => !prev);\r\n  };\r\n\r\n  // Handle traveling to a specific location\r\n  const travelToLocation = (location) => {\r\n    // Set travel state in gameState\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      travel: {\r\n        destination: location.name,\r\n        timeRemaining: location.travelTime,\r\n        isTraveling: true,\r\n      },\r\n    }));\r\n    setIsMapOpen(false); // Close the map after choosing a destination\r\n  };\r\n\r\n  return (\r\n    <div className={styles.worldMapContainer}>\r\n      <button onClick={toggleMap} className={styles.mapButton}>\r\n        <img src={mapIcon} alt=\"Map\" className={styles.mapIcon} />\r\n      </button>\r\n\r\n      {isMapOpen && (\r\n        <div className={styles.mapModal}>\r\n          <img src={worldMapImage} alt=\"World Map\" className={styles.mapImage} />\r\n          <div className={styles.locationsContainer}>\r\n            {worldLocations.map((location) => (\r\n              <div\r\n                key={location.id}\r\n                className={styles.locationMarker}\r\n                style={{ top: location.coordinates.top, left: location.coordinates.left }}\r\n                onClick={() => travelToLocation(location)}\r\n              >\r\n                {location.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleMap} className={styles.closeButton}>Close Map</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}