{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\player\\\\playerDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport playerLevels from './playerLevel.json'; // Import the JSON file with level info\nimport styles from './playerDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerDetails({\n  player,\n  setGameState\n}) {\n  _s();\n  const [playerState, setPlayerState] = useState(player);\n\n  // Function to check if the player can level up\n  const checkLevelUp = () => {\n    const currentLevel = playerState.level;\n    const currentExp = playerState.experience;\n    const nextLevelInfo = playerLevels.levels.find(level => level.level === currentLevel + 1);\n    if (nextLevelInfo && currentExp >= nextLevelInfo.expRequired) {\n      setPlayerState(prevState => ({\n        ...prevState,\n        level: prevState.level + 1\n      }));\n      setGameState(prevState => ({\n        ...prevState,\n        level: prevState.level + 1\n      }));\n      console.log(`Leveled up to Level ${currentLevel + 1}`);\n    }\n  };\n\n  // Function to simulate gaining experience\n  const gainExperience = exp => {\n    setPlayerState(prevState => {\n      const newExp = prevState.experience + exp;\n      return {\n        ...prevState,\n        experience: newExp\n      };\n    });\n    setGameState(prevState => ({\n      ...prevState,\n      experience: prevState.experience + exp\n    }));\n  };\n\n  // Check for level up whenever experience changes\n  useEffect(() => {\n    checkLevelUp();\n  }, [playerState.experience]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerDetails,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", playerState.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Level: \", playerState.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Experience: \", playerState.experience]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hitpoints: \", playerState.hitpoints, \"/\", playerState.maxHitPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Location: \", playerState.currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => gainExperience(100),\n      children: \"Gain 100 EXP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlayerState(prevState => ({\n        ...prevState,\n        hitpoints: Math.max(0, prevState.hitpoints - 10)\n      })),\n      children: \"Decrease Hitpoints by 10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerDetails, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n_c = PlayerDetails;\nexport default PlayerDetails;\nvar _c;\n$RefreshReg$(_c, \"PlayerDetails\");","map":{"version":3,"names":["React","useState","useEffect","playerLevels","styles","jsxDEV","_jsxDEV","PlayerDetails","player","setGameState","_s","playerState","setPlayerState","checkLevelUp","currentLevel","level","currentExp","experience","nextLevelInfo","levels","find","expRequired","prevState","console","log","gainExperience","exp","newExp","className","playerDetails","children","username","fileName","_jsxFileName","lineNumber","columnNumber","hitpoints","maxHitPoints","currentLocation","onClick","Math","max","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/player/playerDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport playerLevels from './playerLevel.json'; // Import the JSON file with level info\r\nimport styles from './playerDetails.module.css';\r\n\r\nfunction PlayerDetails({ player, setGameState }) {\r\n  const [playerState, setPlayerState] = useState(player);\r\n\r\n  // Function to check if the player can level up\r\n  const checkLevelUp = () => {\r\n    const currentLevel = playerState.level;\r\n    const currentExp = playerState.experience;\r\n    const nextLevelInfo = playerLevels.levels.find(level => level.level === currentLevel + 1);\r\n\r\n    if (nextLevelInfo && currentExp >= nextLevelInfo.expRequired) {\r\n      setPlayerState(prevState => ({\r\n        ...prevState,\r\n        level: prevState.level + 1,\r\n      }));\r\n      setGameState(prevState => ({\r\n        ...prevState,\r\n        level: prevState.level + 1,\r\n      }));\r\n      console.log(`Leveled up to Level ${currentLevel + 1}`);\r\n    }\r\n  };\r\n\r\n  // Function to simulate gaining experience\r\n  const gainExperience = (exp) => {\r\n    setPlayerState(prevState => {\r\n      const newExp = prevState.experience + exp;\r\n      return {\r\n        ...prevState,\r\n        experience: newExp,\r\n      };\r\n    });\r\n    setGameState(prevState => ({\r\n      ...prevState,\r\n      experience: prevState.experience + exp,\r\n    }));\r\n  };\r\n\r\n  // Check for level up whenever experience changes\r\n  useEffect(() => {\r\n    checkLevelUp();\r\n  }, [playerState.experience]);\r\n\r\n  return (\r\n    <div className={styles.playerDetails}>\r\n      <p>Username: {playerState.username}</p>\r\n      <p>Level: {playerState.level}</p>\r\n      <p>Experience: {playerState.experience}</p>\r\n      <p>Hitpoints: {playerState.hitpoints}/{playerState.maxHitPoints}</p>\r\n      <p>Current Location: {playerState.currentLocation}</p>\r\n\r\n      <button onClick={() => gainExperience(100)}>Gain 100 EXP</button>\r\n      <button onClick={() => setPlayerState(prevState => ({\r\n        ...prevState,\r\n        hitpoints: Math.max(0, prevState.hitpoints - 10)\r\n      }))}>Decrease Hitpoints by 10</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,oBAAoB,CAAC,CAAC;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACO,MAAM,CAAC;;EAEtD;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGH,WAAW,CAACI,KAAK;IACtC,MAAMC,UAAU,GAAGL,WAAW,CAACM,UAAU;IACzC,MAAMC,aAAa,GAAGf,YAAY,CAACgB,MAAM,CAACC,IAAI,CAACL,KAAK,IAAIA,KAAK,CAACA,KAAK,KAAKD,YAAY,GAAG,CAAC,CAAC;IAEzF,IAAII,aAAa,IAAIF,UAAU,IAAIE,aAAa,CAACG,WAAW,EAAE;MAC5DT,cAAc,CAACU,SAAS,KAAK;QAC3B,GAAGA,SAAS;QACZP,KAAK,EAAEO,SAAS,CAACP,KAAK,GAAG;MAC3B,CAAC,CAAC,CAAC;MACHN,YAAY,CAACa,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZP,KAAK,EAAEO,SAAS,CAACP,KAAK,GAAG;MAC3B,CAAC,CAAC,CAAC;MACHQ,OAAO,CAACC,GAAG,CAAC,uBAAuBV,YAAY,GAAG,CAAC,EAAE,CAAC;IACxD;EACF,CAAC;;EAED;EACA,MAAMW,cAAc,GAAIC,GAAG,IAAK;IAC9Bd,cAAc,CAACU,SAAS,IAAI;MAC1B,MAAMK,MAAM,GAAGL,SAAS,CAACL,UAAU,GAAGS,GAAG;MACzC,OAAO;QACL,GAAGJ,SAAS;QACZL,UAAU,EAAEU;MACd,CAAC;IACH,CAAC,CAAC;IACFlB,YAAY,CAACa,SAAS,KAAK;MACzB,GAAGA,SAAS;MACZL,UAAU,EAAEK,SAAS,CAACL,UAAU,GAAGS;IACrC,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACF,WAAW,CAACM,UAAU,CAAC,CAAC;EAE5B,oBACEX,OAAA;IAAKsB,SAAS,EAAExB,MAAM,CAACyB,aAAc;IAAAC,QAAA,gBACnCxB,OAAA;MAAAwB,QAAA,GAAG,YAAU,EAACnB,WAAW,CAACoB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC7B,OAAA;MAAAwB,QAAA,GAAG,SAAO,EAACnB,WAAW,CAACI,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC7B,OAAA;MAAAwB,QAAA,GAAG,cAAY,EAACnB,WAAW,CAACM,UAAU;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C7B,OAAA;MAAAwB,QAAA,GAAG,aAAW,EAACnB,WAAW,CAACyB,SAAS,EAAC,GAAC,EAACzB,WAAW,CAAC0B,YAAY;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpE7B,OAAA;MAAAwB,QAAA,GAAG,oBAAkB,EAACnB,WAAW,CAAC2B,eAAe;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtD7B,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAAC,GAAG,CAAE;MAAAK,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjE7B,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAM3B,cAAc,CAACU,SAAS,KAAK;QAClD,GAAGA,SAAS;QACZc,SAAS,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEnB,SAAS,CAACc,SAAS,GAAG,EAAE;MACjD,CAAC,CAAC,CAAE;MAAAN,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACzB,EAAA,CAzDQH,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AA2DtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}