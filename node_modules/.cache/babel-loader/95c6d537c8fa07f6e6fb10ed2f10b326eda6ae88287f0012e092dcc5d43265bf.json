{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\worldmap\\\\worldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './worldMap.module.css';\nimport worldLocations from './worldLocations.json';\nimport mapIcon from '../../assets/images/icons/map.png';\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isMapOpen, setIsMapOpen] = useState(false);\n  const [hoveredLocation, setHoveredLocation] = useState(null);\n  const [travelTimer, setTravelTimer] = useState(null);\n\n  // Toggle map visibility\n  const toggleMap = () => {\n    setIsMapOpen(prev => !prev);\n  };\n\n  // Handle traveling to a specific location\n  const travelToLocation = location => {\n    // Prevent traveling to the current location\n    if (gameState.currentLocation === location.id) {\n      console.log(\"You are already at this location.\");\n      return;\n    }\n\n    // Set travel state in gameState\n    setGameState(prevState => ({\n      ...prevState,\n      travel: {\n        destination: location.name,\n        timeRemaining: location.travelTime,\n        isTraveling: true\n      }\n    }));\n    setIsMapOpen(false); // Close the map after choosing a destination\n\n    // Start the travel timer\n    if (travelTimer) {\n      clearInterval(travelTimer);\n    }\n    const timer = setInterval(() => {\n      setGameState(prevState => {\n        if (prevState.travel.timeRemaining > 1) {\n          return {\n            ...prevState,\n            travel: {\n              ...prevState.travel,\n              timeRemaining: prevState.travel.timeRemaining - 1\n            }\n          };\n        } else {\n          clearInterval(timer);\n          setTravelTimer(null); // Clear the travel timer state\n          // Update gameState once travel is complete\n          return {\n            ...prevState,\n            currentLocation: location.id,\n            travel: {\n              destination: location.name,\n              timeRemaining: 0,\n              isTraveling: false\n            }\n          };\n        }\n      });\n    }, 1000);\n    setTravelTimer(timer);\n  };\n\n  // Handle mouse hover over a location\n  const handleMouseEnter = location => {\n    setHoveredLocation(location);\n  };\n  const handleMouseLeave = () => {\n    setHoveredLocation(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.worldMapContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMap,\n      className: styles.mapButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapIcon,\n        alt: \"Map\",\n        className: styles.mapIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.currentLocation,\n      children: [\"Currently at: \", gameState.currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isMapOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: worldMapImage,\n        alt: \"World Map\",\n        className: styles.mapImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.locationsContainer,\n        children: worldLocations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.locationMarker,\n            style: {\n              top: location.coordinates.top,\n              left: location.coordinates.left\n            },\n            onClick: () => travelToLocation(location),\n            onMouseEnter: () => handleMouseEnter(location),\n            onMouseLeave: handleMouseLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), hoveredLocation && hoveredLocation.id === location.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.locationNameTooltip,\n            style: {\n              top: `calc(${location.coordinates.top} - 20px)`,\n              left: location.coordinates.left\n            },\n            children: location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)]\n        }, location.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMap,\n        className: styles.closeButton,\n        children: \"Close Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"eCoOcSCb1liy5NFsaR3cPKRxpNY=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useEffect","styles","worldLocations","mapIcon","worldMapImage","jsxDEV","_jsxDEV","WorldMap","gameState","setGameState","_s","isMapOpen","setIsMapOpen","hoveredLocation","setHoveredLocation","travelTimer","setTravelTimer","toggleMap","prev","travelToLocation","location","currentLocation","id","console","log","prevState","travel","destination","name","timeRemaining","travelTime","isTraveling","clearInterval","timer","setInterval","handleMouseEnter","handleMouseLeave","className","worldMapContainer","children","onClick","mapButton","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","mapModal","mapImage","locationsContainer","map","locationMarker","style","top","coordinates","left","onMouseEnter","onMouseLeave","locationNameTooltip","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/worldmap/worldMap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './worldMap.module.css';\r\nimport worldLocations from './worldLocations.json';\r\nimport mapIcon from '../../assets/images/icons/map.png';\r\nimport worldMapImage from '../../assets/images/worldmap/worldmap.png';\r\n\r\nfunction WorldMap({ gameState, setGameState }) {\r\n  const [isMapOpen, setIsMapOpen] = useState(false);\r\n  const [hoveredLocation, setHoveredLocation] = useState(null);\r\n  const [travelTimer, setTravelTimer] = useState(null);\r\n\r\n  // Toggle map visibility\r\n  const toggleMap = () => {\r\n    setIsMapOpen((prev) => !prev);\r\n  };\r\n\r\n  // Handle traveling to a specific location\r\n  const travelToLocation = (location) => {\r\n    // Prevent traveling to the current location\r\n    if (gameState.currentLocation === location.id) {\r\n      console.log(\"You are already at this location.\");\r\n      return;\r\n    }\r\n\r\n    // Set travel state in gameState\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      travel: {\r\n        destination: location.name,\r\n        timeRemaining: location.travelTime,\r\n        isTraveling: true,\r\n      },\r\n    }));\r\n    setIsMapOpen(false); // Close the map after choosing a destination\r\n\r\n    // Start the travel timer\r\n    if (travelTimer) {\r\n      clearInterval(travelTimer);\r\n    }\r\n    const timer = setInterval(() => {\r\n      setGameState((prevState) => {\r\n        if (prevState.travel.timeRemaining > 1) {\r\n          return {\r\n            ...prevState,\r\n            travel: {\r\n              ...prevState.travel,\r\n              timeRemaining: prevState.travel.timeRemaining - 1,\r\n            },\r\n          };\r\n        } else {\r\n          clearInterval(timer);\r\n          setTravelTimer(null); // Clear the travel timer state\r\n          // Update gameState once travel is complete\r\n          return {\r\n            ...prevState,\r\n            currentLocation: location.id,\r\n            travel: {\r\n              destination: location.name,\r\n              timeRemaining: 0,\r\n              isTraveling: false,\r\n            },\r\n          };\r\n        }\r\n      });\r\n    }, 1000);\r\n    setTravelTimer(timer);\r\n  };\r\n\r\n  // Handle mouse hover over a location\r\n  const handleMouseEnter = (location) => {\r\n    setHoveredLocation(location);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredLocation(null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.worldMapContainer}>\r\n      <button onClick={toggleMap} className={styles.mapButton}>\r\n        <img src={mapIcon} alt=\"Map\" className={styles.mapIcon} />\r\n      </button>\r\n\r\n      {/* Display Current Location */}\r\n      <p className={styles.currentLocation}>Currently at: {gameState.currentLocation}</p>\r\n\r\n      {isMapOpen && (\r\n        <div className={styles.mapModal}>\r\n          <img src={worldMapImage} alt=\"World Map\" className={styles.mapImage} />\r\n          <div className={styles.locationsContainer}>\r\n            {worldLocations.map((location) => (\r\n              <div key={location.id}>\r\n                {/* Location Marker */}\r\n                <div\r\n                  className={styles.locationMarker}\r\n                  style={{\r\n                    top: location.coordinates.top,\r\n                    left: location.coordinates.left,\r\n                  }}\r\n                  onClick={() => travelToLocation(location)}\r\n                  onMouseEnter={() => handleMouseEnter(location)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                />\r\n                \r\n                {/* Location Name on Hover */}\r\n                {hoveredLocation && hoveredLocation.id === location.id && (\r\n                  <div\r\n                    className={styles.locationNameTooltip}\r\n                    style={{\r\n                      top: `calc(${location.coordinates.top} - 20px)`,\r\n                      left: location.coordinates.left,\r\n                    }}\r\n                  >\r\n                    {location.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleMap} className={styles.closeButton}>Close Map</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}