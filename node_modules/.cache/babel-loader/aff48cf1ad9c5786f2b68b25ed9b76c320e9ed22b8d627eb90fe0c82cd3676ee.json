{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\enemy\\\\enemy.js\",\n  _s = $RefreshSig$();\n// /src/components/enemy/enemy.js\nimport React, { useState, useEffect } from 'react';\nimport enemyStats from './enemy-stats.json';\nimport styles from './enemy.module.css';\nimport worldLocations from '../worldmap/worldLocations.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Enemy({\n  playerLevel,\n  playerItems,\n  currentLocation,\n  onDefeat\n}) {\n  _s();\n  const [currentEnemy, setCurrentEnemy] = useState(null);\n  const [enemyHealth, setEnemyHealth] = useState(0);\n  const [playerAttackPower, setPlayerAttackPower] = useState(10); // Placeholder for player's attack power\n\n  // Function to spawn an enemy based on player level, items, and location\n  useEffect(() => {\n    console.log(\"Current Location ID:\", currentLocation); // Check current location value\n    console.log(\"Available Enemies:\", enemyStats);\n    const availableEnemies = enemyStats.filter(enemy => {\n      if ((!enemy.spawnConditions || !enemy.spawnConditions.requiredLevel || playerLevel >= enemy.spawnConditions.requiredLevel) && (!enemy.spawnConditions || !enemy.spawnConditions.requiredItem || playerItems.includes(enemy.spawnConditions.requiredItem)) && (!enemy.location || enemy.location === currentLocation)) {\n        return true;\n      }\n      return false;\n    });\n    console.log(\"Filtered Enemies:\", availableEnemies); // Check which enemies are available\n    if (availableEnemies.length > 0) {\n      const randomEnemy = availableEnemies[Math.floor(Math.random() * availableEnemies.length)];\n      setCurrentEnemy(randomEnemy);\n      setEnemyHealth(randomEnemy.health);\n    }\n  }, [playerLevel, playerItems, currentLocation]);\n\n  // Handle player attack on enemy\n  const handleAttack = () => {\n    if (currentEnemy) {\n      const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\n      if (hitSuccess) {\n        const damage = Math.floor(Math.random() * playerAttackPower);\n        setEnemyHealth(prevHealth => Math.max(prevHealth - damage, 0));\n      }\n      if (enemyHealth - playerAttackPower <= 0) {\n        onDefeat(currentEnemy);\n        setCurrentEnemy(null); // Reset enemy state after defeat\n      }\n    }\n  };\n\n  // Handle enemy's behavior logic\n  useEffect(() => {\n    if (currentEnemy && enemyHealth > 0) {\n      const interval = setInterval(() => {\n        if (currentEnemy.behavior === 'aggressive' && Math.random() < currentEnemy.attackChance) {\n          console.log(`${currentEnemy.enemyName} attacks!`);\n          // Here we can add logic to deal damage to the player, handle defense, etc.\n        }\n      }, 2000); // Enemy action every 2 seconds\n      return () => clearInterval(interval);\n    }\n  }, [currentEnemy, enemyHealth]);\n  if (!currentEnemy) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.enemyContainer,\n      children: \"No enemies available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.enemyContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentEnemy.enemyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(`../../assets/images/enemies/${currentEnemy.sprite}`),\n      alt: currentEnemy.enemyName,\n      className: styles.enemySprite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Level: \", currentEnemy.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health: \", enemyHealth, \" / \", currentEnemy.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAttack,\n      className: styles.attackButton,\n      children: \"Milk Aggressively\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Enemy, \"cqgWR9vCSQ7Hg5KFHmJdv4kxyEQ=\");\n_c = Enemy;\nexport default Enemy;\nvar _c;\n$RefreshReg$(_c, \"Enemy\");","map":{"version":3,"names":["React","useState","useEffect","enemyStats","styles","worldLocations","jsxDEV","_jsxDEV","Enemy","playerLevel","playerItems","currentLocation","onDefeat","_s","currentEnemy","setCurrentEnemy","enemyHealth","setEnemyHealth","playerAttackPower","setPlayerAttackPower","console","log","availableEnemies","filter","enemy","spawnConditions","requiredLevel","requiredItem","includes","location","length","randomEnemy","Math","floor","random","health","handleAttack","hitSuccess","damage","prevHealth","max","interval","setInterval","behavior","attackChance","enemyName","clearInterval","className","enemyContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","src","require","sprite","alt","enemySprite","level","onClick","attackButton","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/enemy/enemy.js"],"sourcesContent":["// /src/components/enemy/enemy.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport enemyStats from './enemy-stats.json';\r\nimport styles from './enemy.module.css';\r\nimport worldLocations from '../worldmap/worldLocations.json';\r\n\r\nfunction Enemy({ playerLevel, playerItems, currentLocation, onDefeat }) {\r\n  const [currentEnemy, setCurrentEnemy] = useState(null);\r\n  const [enemyHealth, setEnemyHealth] = useState(0);\r\n  const [playerAttackPower, setPlayerAttackPower] = useState(10); // Placeholder for player's attack power\r\n\r\n    // Function to spawn an enemy based on player level, items, and location\r\n    useEffect(() => {\r\n        console.log(\"Current Location ID:\", currentLocation); // Check current location value\r\n        console.log(\"Available Enemies:\", enemyStats);\r\n        const availableEnemies = enemyStats.filter((enemy) => {\r\n          if (\r\n            (!enemy.spawnConditions || !enemy.spawnConditions.requiredLevel || playerLevel >= enemy.spawnConditions.requiredLevel) &&\r\n            (!enemy.spawnConditions || !enemy.spawnConditions.requiredItem || playerItems.includes(enemy.spawnConditions.requiredItem)) &&\r\n            (!enemy.location || enemy.location === currentLocation)\r\n          ) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        console.log(\"Filtered Enemies:\", availableEnemies); // Check which enemies are available\r\n        if (availableEnemies.length > 0) {\r\n          const randomEnemy = availableEnemies[Math.floor(Math.random() * availableEnemies.length)];\r\n          setCurrentEnemy(randomEnemy);\r\n          setEnemyHealth(randomEnemy.health);\r\n        }\r\n      }, [playerLevel, playerItems, currentLocation]);      \r\n\r\n  // Handle player attack on enemy\r\n  const handleAttack = () => {\r\n    if (currentEnemy) {\r\n      const hitSuccess = Math.random() < playerAttackPower / 100; // Simplified hit chance\r\n      if (hitSuccess) {\r\n        const damage = Math.floor(Math.random() * playerAttackPower);\r\n        setEnemyHealth((prevHealth) => Math.max(prevHealth - damage, 0));\r\n      }\r\n      if (enemyHealth - playerAttackPower <= 0) {\r\n        onDefeat(currentEnemy);\r\n        setCurrentEnemy(null); // Reset enemy state after defeat\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle enemy's behavior logic\r\n  useEffect(() => {\r\n    if (currentEnemy && enemyHealth > 0) {\r\n      const interval = setInterval(() => {\r\n        if (currentEnemy.behavior === 'aggressive' && Math.random() < currentEnemy.attackChance) {\r\n          console.log(`${currentEnemy.enemyName} attacks!`);\r\n          // Here we can add logic to deal damage to the player, handle defense, etc.\r\n        }\r\n      }, 2000); // Enemy action every 2 seconds\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [currentEnemy, enemyHealth]);\r\n\r\n  if (!currentEnemy) {\r\n    return <div className={styles.enemyContainer}>No enemies available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.enemyContainer}>\r\n      <h3>{currentEnemy.enemyName}</h3>\r\n      <img src={require(`../../assets/images/enemies/${currentEnemy.sprite}`)} alt={currentEnemy.enemyName} className={styles.enemySprite} />\r\n      <p>Level: {currentEnemy.level}</p>\r\n      <p>Health: {enemyHealth} / {currentEnemy.health}</p>\r\n      <button onClick={handleAttack} className={styles.attackButton}>Milk Aggressively</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Enemy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}