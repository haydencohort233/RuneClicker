{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hayden\\\\Documents\\\\BVT School Work\\\\ChatGPT\\\\cookie-clicker-game\\\\src\\\\components\\\\equipment\\\\equipment.js\",\n  _s = $RefreshSig$();\n// /src/components/equipment/equipment.js\nimport React, { useState, useEffect } from 'react';\nimport styles from './equipment.module.css';\nimport equipmentSlots from './equipmentSlots.json';\nimport equipmentSlotsImage from '../../assets/images/items/armor/equipmentSlots.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Equipment({\n  gameState,\n  setGameState\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to calculate total stats based on equipped items\n  const calculateTotalStats = equipment => {\n    let totalAttackPower = 0;\n    let totalDefencePower = 0;\n    Object.values(equipment).forEach(item => {\n      if (Array.isArray(item)) {\n        item.forEach(subItem => {\n          if (subItem) {\n            totalAttackPower += subItem.attackBoost || 0;\n            totalDefencePower += subItem.defenseBoost || 0;\n          }\n        });\n      } else if (item) {\n        totalAttackPower += item.attackBoost || 0;\n        totalDefencePower += item.defenseBoost || 0;\n      }\n    });\n    return {\n      totalAttackPower,\n      totalDefencePower\n    };\n  };\n\n  // Initialize base stats and update stats when equipment changes\n  useEffect(() => {\n    if (!gameState.baseAttackPower || !gameState.baseDefencePower) {\n      setGameState(prevState => ({\n        ...prevState,\n        baseAttackPower: prevState.attackPower || 0,\n        baseDefencePower: prevState.defencePower || 0\n      }));\n    }\n    const {\n      totalAttackPower,\n      totalDefencePower\n    } = calculateTotalStats(gameState.equipment);\n    setGameState(prevState => ({\n      ...prevState,\n      equipmentAttackPower: totalAttackPower,\n      equipmentDefencePower: totalDefencePower,\n      attackPower: (prevState.baseAttackPower || 0) + totalAttackPower,\n      defencePower: (prevState.baseDefencePower || 0) + totalDefencePower\n    }));\n  }, [gameState.equipment, gameState.baseAttackPower, gameState.baseDefencePower, setGameState]);\n  const toggleEquipmentUI = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Function to unequip an item from a specific slot\n  const handleUnequipItem = (slot, fingerIndex = null) => {\n    setGameState(prevState => {\n      let updatedEquipment = {\n        ...prevState.equipment\n      };\n      let updatedInventory = [...prevState.inventory];\n      if (slot === 'fingers' && fingerIndex !== null) {\n        if (updatedEquipment.fingers[fingerIndex]) {\n          updatedInventory.push(updatedEquipment.fingers[fingerIndex]);\n          updatedEquipment.fingers[fingerIndex] = null;\n        }\n      } else {\n        if (updatedEquipment[slot]) {\n          updatedInventory.push(updatedEquipment[slot]);\n          updatedEquipment[slot] = null;\n        }\n      }\n      const {\n        totalAttackPower,\n        totalDefencePower\n      } = calculateTotalStats(updatedEquipment);\n      return {\n        ...prevState,\n        equipment: updatedEquipment,\n        inventory: updatedInventory,\n        equipmentAttackPower: totalAttackPower,\n        equipmentDefencePower: totalDefencePower,\n        attackPower: (prevState.baseAttackPower || 0) + totalAttackPower,\n        defencePower: (prevState.baseDefencePower || 0) + totalDefencePower\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.equipmentContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleEquipmentUI,\n      className: styles.equipmentButton,\n      children: isOpen ? 'Close Equipment' : 'Open Equipment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.equipmentUI,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: equipmentSlotsImage,\n        alt: \"Equipment Slots\",\n        className: styles.equipmentSlotsImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), Object.entries(equipmentSlots.equipmentSlots).map(([slot, slotInfo], index) => {\n        if (slot === 'fingers') {\n          return slotInfo.map((fingerSlot, fingerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.equipmentSlot,\n            style: {\n              top: `${fingerSlot.y}px`,\n              left: `${fingerSlot.x}px`,\n              width: `${fingerSlot.width}px`,\n              height: `${fingerSlot.height}px`\n            },\n            onClick: () => handleUnequipItem(slot, fingerIndex),\n            children: gameState.equipment.fingers[fingerIndex] ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${gameState.equipment.fingers[fingerIndex].image}`,\n              alt: gameState.equipment.fingers[fingerIndex].name,\n              className: styles.equipmentImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emptySlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)\n          }, `finger-${fingerIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this));\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.equipmentSlot,\n            style: {\n              top: `${slotInfo.y}px`,\n              left: `${slotInfo.x}px`,\n              width: `${slotInfo.width}px`,\n              height: `${slotInfo.height}px`\n            },\n            onClick: () => handleUnequipItem(slot),\n            children: gameState.equipment[slot] ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/assets/images/items/${gameState.equipment[slot].image}`,\n              alt: gameState.equipment[slot].name,\n              className: styles.equipmentImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.emptySlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.totalStats,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Stats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attack Power: \", gameState.attackPower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Defence Power: \", gameState.defencePower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Equipment Attack Bonus: \", gameState.equipmentAttackPower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Equipment Defence Bonus: \", gameState.equipmentDefencePower || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Equipment, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Equipment;\nexport default Equipment;\nvar _c;\n$RefreshReg$(_c, \"Equipment\");","map":{"version":3,"names":["React","useState","useEffect","styles","equipmentSlots","equipmentSlotsImage","jsxDEV","_jsxDEV","Equipment","gameState","setGameState","_s","isOpen","setIsOpen","calculateTotalStats","equipment","totalAttackPower","totalDefencePower","Object","values","forEach","item","Array","isArray","subItem","attackBoost","defenseBoost","baseAttackPower","baseDefencePower","prevState","attackPower","defencePower","equipmentAttackPower","equipmentDefencePower","toggleEquipmentUI","handleUnequipItem","slot","fingerIndex","updatedEquipment","updatedInventory","inventory","fingers","push","className","equipmentContainer","children","onClick","equipmentButton","fileName","_jsxFileName","lineNumber","columnNumber","equipmentUI","src","alt","entries","map","slotInfo","index","fingerSlot","equipmentSlot","style","top","y","left","x","width","height","image","name","equipmentImage","emptySlot","totalStats","_c","$RefreshReg$"],"sources":["C:/Users/Hayden/Documents/BVT School Work/ChatGPT/cookie-clicker-game/src/components/equipment/equipment.js"],"sourcesContent":["// /src/components/equipment/equipment.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './equipment.module.css';\r\nimport equipmentSlots from './equipmentSlots.json';\r\nimport equipmentSlotsImage from '../../assets/images/items/armor/equipmentSlots.png';\r\n\r\nfunction Equipment({ gameState, setGameState }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Function to calculate total stats based on equipped items\r\n  const calculateTotalStats = (equipment) => {\r\n    let totalAttackPower = 0;\r\n    let totalDefencePower = 0;\r\n\r\n    Object.values(equipment).forEach((item) => {\r\n      if (Array.isArray(item)) {\r\n        item.forEach((subItem) => {\r\n          if (subItem) {\r\n            totalAttackPower += subItem.attackBoost || 0;\r\n            totalDefencePower += subItem.defenseBoost || 0;\r\n          }\r\n        });\r\n      } else if (item) {\r\n        totalAttackPower += item.attackBoost || 0;\r\n        totalDefencePower += item.defenseBoost || 0;\r\n      }\r\n    });\r\n\r\n    return { totalAttackPower, totalDefencePower };\r\n  };\r\n\r\n  // Initialize base stats and update stats when equipment changes\r\n  useEffect(() => {\r\n    if (!gameState.baseAttackPower || !gameState.baseDefencePower) {\r\n      setGameState((prevState) => ({\r\n        ...prevState,\r\n        baseAttackPower: prevState.attackPower || 0,\r\n        baseDefencePower: prevState.defencePower || 0,\r\n      }));\r\n    }\r\n\r\n    const { totalAttackPower, totalDefencePower } = calculateTotalStats(gameState.equipment);\r\n    setGameState((prevState) => ({\r\n      ...prevState,\r\n      equipmentAttackPower: totalAttackPower,\r\n      equipmentDefencePower: totalDefencePower,\r\n      attackPower: (prevState.baseAttackPower || 0) + totalAttackPower,\r\n      defencePower: (prevState.baseDefencePower || 0) + totalDefencePower,\r\n    }));\r\n  }, [gameState.equipment, gameState.baseAttackPower, gameState.baseDefencePower, setGameState]);\r\n\r\n  const toggleEquipmentUI = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Function to unequip an item from a specific slot\r\n  const handleUnequipItem = (slot, fingerIndex = null) => {\r\n    setGameState((prevState) => {\r\n      let updatedEquipment = { ...prevState.equipment };\r\n      let updatedInventory = [...prevState.inventory];\r\n\r\n      if (slot === 'fingers' && fingerIndex !== null) {\r\n        if (updatedEquipment.fingers[fingerIndex]) {\r\n          updatedInventory.push(updatedEquipment.fingers[fingerIndex]);\r\n          updatedEquipment.fingers[fingerIndex] = null;\r\n        }\r\n      } else {\r\n        if (updatedEquipment[slot]) {\r\n          updatedInventory.push(updatedEquipment[slot]);\r\n          updatedEquipment[slot] = null;\r\n        }\r\n      }\r\n\r\n      const { totalAttackPower, totalDefencePower } = calculateTotalStats(updatedEquipment);\r\n\r\n      return {\r\n        ...prevState,\r\n        equipment: updatedEquipment,\r\n        inventory: updatedInventory,\r\n        equipmentAttackPower: totalAttackPower,\r\n        equipmentDefencePower: totalDefencePower,\r\n        attackPower: (prevState.baseAttackPower || 0) + totalAttackPower,\r\n        defencePower: (prevState.baseDefencePower || 0) + totalDefencePower,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.equipmentContainer}>\r\n      <button onClick={toggleEquipmentUI} className={styles.equipmentButton}>\r\n        {isOpen ? 'Close Equipment' : 'Open Equipment'}\r\n      </button>\r\n      {isOpen && (\r\n        <div className={styles.equipmentUI}>\r\n          {/* Display the equipment slots background image */}\r\n          <img\r\n            src={equipmentSlotsImage}\r\n            alt=\"Equipment Slots\"\r\n            className={styles.equipmentSlotsImage}\r\n          />\r\n          {Object.entries(equipmentSlots.equipmentSlots).map(([slot, slotInfo], index) => {\r\n            if (slot === 'fingers') {\r\n              return slotInfo.map((fingerSlot, fingerIndex) => (\r\n                <div\r\n                  key={`finger-${fingerIndex}`}\r\n                  className={styles.equipmentSlot}\r\n                  style={{\r\n                    top: `${fingerSlot.y}px`,\r\n                    left: `${fingerSlot.x}px`,\r\n                    width: `${fingerSlot.width}px`,\r\n                    height: `${fingerSlot.height}px`,\r\n                  }}\r\n                  onClick={() => handleUnequipItem(slot, fingerIndex)}\r\n                >\r\n                  {gameState.equipment.fingers[fingerIndex] ? (\r\n                    <img\r\n                      src={`http://localhost:5000/assets/images/items/${gameState.equipment.fingers[fingerIndex].image}`}\r\n                      alt={gameState.equipment.fingers[fingerIndex].name}\r\n                      className={styles.equipmentImage}\r\n                    />\r\n                  ) : (\r\n                    <div className={styles.emptySlot} />\r\n                  )}\r\n                </div>\r\n              ));\r\n            } else {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={styles.equipmentSlot}\r\n                  style={{\r\n                    top: `${slotInfo.y}px`,\r\n                    left: `${slotInfo.x}px`,\r\n                    width: `${slotInfo.width}px`,\r\n                    height: `${slotInfo.height}px`,\r\n                  }}\r\n                  onClick={() => handleUnequipItem(slot)}\r\n                >\r\n                  {gameState.equipment[slot] ? (\r\n                    <img\r\n                      src={`http://localhost:5000/assets/images/items/${gameState.equipment[slot].image}`}\r\n                      alt={gameState.equipment[slot].name}\r\n                      className={styles.equipmentImage}\r\n                    />\r\n                  ) : (\r\n                    <div className={styles.emptySlot} />\r\n                  )}\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n          <div className={styles.totalStats}>\r\n            <h3>Total Stats:</h3>\r\n            <p>Attack Power: {gameState.attackPower || 0}</p>\r\n            <p>Defence Power: {gameState.defencePower || 0}</p>\r\n            <p>Equipment Attack Bonus: {gameState.equipmentAttackPower || 0}</p>\r\n            <p>Equipment Defence Bonus: {gameState.equipmentDefencePower || 0}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,mBAAmB,MAAM,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMa,mBAAmB,GAAIC,SAAS,IAAK;IACzC,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIC,iBAAiB,GAAG,CAAC;IAEzBC,MAAM,CAACC,MAAM,CAACJ,SAAS,CAAC,CAACK,OAAO,CAAEC,IAAI,IAAK;MACzC,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBA,IAAI,CAACD,OAAO,CAAEI,OAAO,IAAK;UACxB,IAAIA,OAAO,EAAE;YACXR,gBAAgB,IAAIQ,OAAO,CAACC,WAAW,IAAI,CAAC;YAC5CR,iBAAiB,IAAIO,OAAO,CAACE,YAAY,IAAI,CAAC;UAChD;QACF,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIL,IAAI,EAAE;QACfL,gBAAgB,IAAIK,IAAI,CAACI,WAAW,IAAI,CAAC;QACzCR,iBAAiB,IAAII,IAAI,CAACK,YAAY,IAAI,CAAC;MAC7C;IACF,CAAC,CAAC;IAEF,OAAO;MAAEV,gBAAgB;MAAEC;IAAkB,CAAC;EAChD,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,SAAS,CAACkB,eAAe,IAAI,CAAClB,SAAS,CAACmB,gBAAgB,EAAE;MAC7DlB,YAAY,CAAEmB,SAAS,KAAM;QAC3B,GAAGA,SAAS;QACZF,eAAe,EAAEE,SAAS,CAACC,WAAW,IAAI,CAAC;QAC3CF,gBAAgB,EAAEC,SAAS,CAACE,YAAY,IAAI;MAC9C,CAAC,CAAC,CAAC;IACL;IAEA,MAAM;MAAEf,gBAAgB;MAAEC;IAAkB,CAAC,GAAGH,mBAAmB,CAACL,SAAS,CAACM,SAAS,CAAC;IACxFL,YAAY,CAAEmB,SAAS,KAAM;MAC3B,GAAGA,SAAS;MACZG,oBAAoB,EAAEhB,gBAAgB;MACtCiB,qBAAqB,EAAEhB,iBAAiB;MACxCa,WAAW,EAAE,CAACD,SAAS,CAACF,eAAe,IAAI,CAAC,IAAIX,gBAAgB;MAChEe,YAAY,EAAE,CAACF,SAAS,CAACD,gBAAgB,IAAI,CAAC,IAAIX;IACpD,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACR,SAAS,CAACM,SAAS,EAAEN,SAAS,CAACkB,eAAe,EAAElB,SAAS,CAACmB,gBAAgB,EAAElB,YAAY,CAAC,CAAC;EAE9F,MAAMwB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrB,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,MAAMuB,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,WAAW,GAAG,IAAI,KAAK;IACtD3B,YAAY,CAAEmB,SAAS,IAAK;MAC1B,IAAIS,gBAAgB,GAAG;QAAE,GAAGT,SAAS,CAACd;MAAU,CAAC;MACjD,IAAIwB,gBAAgB,GAAG,CAAC,GAAGV,SAAS,CAACW,SAAS,CAAC;MAE/C,IAAIJ,IAAI,KAAK,SAAS,IAAIC,WAAW,KAAK,IAAI,EAAE;QAC9C,IAAIC,gBAAgB,CAACG,OAAO,CAACJ,WAAW,CAAC,EAAE;UACzCE,gBAAgB,CAACG,IAAI,CAACJ,gBAAgB,CAACG,OAAO,CAACJ,WAAW,CAAC,CAAC;UAC5DC,gBAAgB,CAACG,OAAO,CAACJ,WAAW,CAAC,GAAG,IAAI;QAC9C;MACF,CAAC,MAAM;QACL,IAAIC,gBAAgB,CAACF,IAAI,CAAC,EAAE;UAC1BG,gBAAgB,CAACG,IAAI,CAACJ,gBAAgB,CAACF,IAAI,CAAC,CAAC;UAC7CE,gBAAgB,CAACF,IAAI,CAAC,GAAG,IAAI;QAC/B;MACF;MAEA,MAAM;QAAEpB,gBAAgB;QAAEC;MAAkB,CAAC,GAAGH,mBAAmB,CAACwB,gBAAgB,CAAC;MAErF,OAAO;QACL,GAAGT,SAAS;QACZd,SAAS,EAAEuB,gBAAgB;QAC3BE,SAAS,EAAED,gBAAgB;QAC3BP,oBAAoB,EAAEhB,gBAAgB;QACtCiB,qBAAqB,EAAEhB,iBAAiB;QACxCa,WAAW,EAAE,CAACD,SAAS,CAACF,eAAe,IAAI,CAAC,IAAIX,gBAAgB;QAChEe,YAAY,EAAE,CAACF,SAAS,CAACD,gBAAgB,IAAI,CAAC,IAAIX;MACpD,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA;IAAKoC,SAAS,EAAExC,MAAM,CAACyC,kBAAmB;IAAAC,QAAA,gBACxCtC,OAAA;MAAQuC,OAAO,EAAEZ,iBAAkB;MAACS,SAAS,EAAExC,MAAM,CAAC4C,eAAgB;MAAAF,QAAA,EACnEjC,MAAM,GAAG,iBAAiB,GAAG;IAAgB;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACRvC,MAAM,iBACLL,OAAA;MAAKoC,SAAS,EAAExC,MAAM,CAACiD,WAAY;MAAAP,QAAA,gBAEjCtC,OAAA;QACE8C,GAAG,EAAEhD,mBAAoB;QACzBiD,GAAG,EAAC,iBAAiB;QACrBX,SAAS,EAAExC,MAAM,CAACE;MAAoB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,EACDjC,MAAM,CAACqC,OAAO,CAACnD,cAAc,CAACA,cAAc,CAAC,CAACoD,GAAG,CAAC,CAAC,CAACpB,IAAI,EAAEqB,QAAQ,CAAC,EAAEC,KAAK,KAAK;QAC9E,IAAItB,IAAI,KAAK,SAAS,EAAE;UACtB,OAAOqB,QAAQ,CAACD,GAAG,CAAC,CAACG,UAAU,EAAEtB,WAAW,kBAC1C9B,OAAA;YAEEoC,SAAS,EAAExC,MAAM,CAACyD,aAAc;YAChCC,KAAK,EAAE;cACLC,GAAG,EAAE,GAAGH,UAAU,CAACI,CAAC,IAAI;cACxBC,IAAI,EAAE,GAAGL,UAAU,CAACM,CAAC,IAAI;cACzBC,KAAK,EAAE,GAAGP,UAAU,CAACO,KAAK,IAAI;cAC9BC,MAAM,EAAE,GAAGR,UAAU,CAACQ,MAAM;YAC9B,CAAE;YACFrB,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACC,IAAI,EAAEC,WAAW,CAAE;YAAAQ,QAAA,EAEnDpC,SAAS,CAACM,SAAS,CAAC0B,OAAO,CAACJ,WAAW,CAAC,gBACvC9B,OAAA;cACE8C,GAAG,EAAE,6CAA6C5C,SAAS,CAACM,SAAS,CAAC0B,OAAO,CAACJ,WAAW,CAAC,CAAC+B,KAAK,EAAG;cACnGd,GAAG,EAAE7C,SAAS,CAACM,SAAS,CAAC0B,OAAO,CAACJ,WAAW,CAAC,CAACgC,IAAK;cACnD1B,SAAS,EAAExC,MAAM,CAACmE;YAAe;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,gBAEF5C,OAAA;cAAKoC,SAAS,EAAExC,MAAM,CAACoE;YAAU;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACpC,GAlBI,UAAUd,WAAW,EAAE;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBzB,CACN,CAAC;QACJ,CAAC,MAAM;UACL,oBACE5C,OAAA;YAEEoC,SAAS,EAAExC,MAAM,CAACyD,aAAc;YAChCC,KAAK,EAAE;cACLC,GAAG,EAAE,GAAGL,QAAQ,CAACM,CAAC,IAAI;cACtBC,IAAI,EAAE,GAAGP,QAAQ,CAACQ,CAAC,IAAI;cACvBC,KAAK,EAAE,GAAGT,QAAQ,CAACS,KAAK,IAAI;cAC5BC,MAAM,EAAE,GAAGV,QAAQ,CAACU,MAAM;YAC5B,CAAE;YACFrB,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACC,IAAI,CAAE;YAAAS,QAAA,EAEtCpC,SAAS,CAACM,SAAS,CAACqB,IAAI,CAAC,gBACxB7B,OAAA;cACE8C,GAAG,EAAE,6CAA6C5C,SAAS,CAACM,SAAS,CAACqB,IAAI,CAAC,CAACgC,KAAK,EAAG;cACpFd,GAAG,EAAE7C,SAAS,CAACM,SAAS,CAACqB,IAAI,CAAC,CAACiC,IAAK;cACpC1B,SAAS,EAAExC,MAAM,CAACmE;YAAe;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,gBAEF5C,OAAA;cAAKoC,SAAS,EAAExC,MAAM,CAACoE;YAAU;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACpC,GAlBIO,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBP,CAAC;QAEV;MACF,CAAC,CAAC,eACF5C,OAAA;QAAKoC,SAAS,EAAExC,MAAM,CAACqE,UAAW;QAAA3B,QAAA,gBAChCtC,OAAA;UAAAsC,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5C,OAAA;UAAAsC,QAAA,GAAG,gBAAc,EAACpC,SAAS,CAACqB,WAAW,IAAI,CAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD5C,OAAA;UAAAsC,QAAA,GAAG,iBAAe,EAACpC,SAAS,CAACsB,YAAY,IAAI,CAAC;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnD5C,OAAA;UAAAsC,QAAA,GAAG,0BAAwB,EAACpC,SAAS,CAACuB,oBAAoB,IAAI,CAAC;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpE5C,OAAA;UAAAsC,QAAA,GAAG,2BAAyB,EAACpC,SAAS,CAACwB,qBAAqB,IAAI,CAAC;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CA5JQH,SAAS;AAAAiE,EAAA,GAATjE,SAAS;AA8JlB,eAAeA,SAAS;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}